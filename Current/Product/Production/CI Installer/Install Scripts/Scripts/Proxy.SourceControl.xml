<?xml version="1.0" encoding="utf-8" ?>
<project xmlns="http://nant.sf.net/schemas/nant.xsd" name="Proxy.SourceControl">

  <include buildfile="${Common.Directory.Build.Path}\Properties.build.xml"/>
  <include buildfile="${Common.Directory.Build.Path}\Common.Build.xml"/>


  <script language="C#" prefix="directory" >
    <imports>
      <import namespace="System.IO" />
    </imports>

    <code>
      <![CDATA[
         [Function("number-of-children")]
         public static int NumberOfChildren(string path)
         {
                 return Directory.GetDirectories(path).Length;
         }
         [Function("name")]
         public static string GetDirectoryName(string path)
         {
                 return new DirectoryInfo( path ).Name;
         }
      ]]>
    </code>
  </script>
  
  <fileset id="PacakgeFinder" />
  <ifnot test="${property::exists('SourceControl.PackageName')}">
    <property name="PackagePathPattern" value="${Common.Directory.Packages.Path}\**\SourceControl.Targets.xml"/>
    <echo message="${PackagePathPattern}" />
    <function execute="${fileset::include-add('PacakgeFinder', PackagePathPattern)}"/>
    <fail if="${fileset::file-count('PacakgeFinder') == 0}" message="Could not find a Source Control Package in ${Common.Directory.Packages.Path}." />
    <property name="PackagePath" value="${fileset::get-name-at-index('PacakgeFinder', 0)}"/>
    <property name="SourceControl.PackageName" value="${directory::name(path::get-directory-name(PackagePath))}"/>
  </ifnot>

  <property name="SourceControl.Update.FileTimeStamp" value="Current"/>
  <property name="SourceControl.Update.ReplaceWritableFiles" value="False"/>
  <property name="SourceControl.Update.MakeWritable" value="False"/>
  <property name="SourceControl.Update.Interactive" value="True"/>

  <include buildfile="${Common.Directory.Packages.Path}\${SourceControl.PackageName}\SourceControl.Targets.xml"/>

  <target name="Proxy.SourceControl.CheckoutAll">
    <property name="SourceControl.CheckOut.File" value="${Common.Directory.CodeLine.Path}"/>
    <call target="SourceControl.CheckOut" failonerror="false"/>
  </target>

  <target name="Proxy.SourceControl.UpdateTarget">
    <ifthenelse test="${target::exists('SourceControl.GetOf.CodeLineDirectory')}">
      <then>
        <call target="SourceControl.GetOf.CodeLineDirectory"/>
      </then>
      <else>
        <call target="SourceControl.GetOfBuildDirectory"/>
        <call target="SourceControl.GetOf.Common.Directory.ThirdParty.Path"/>
        <call target="SourceControl.GetOf.Common.Directory.Product.Path"/>
      </else>
    </ifthenelse>
  </target>
</project>