<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://nant.sf.net/schemas/nant.xsd" name="CI Installer" default="Main">
  
  <include buildfile="Arguments.xml"/>

  <property name="Install.Action" value="Install.Project" overwrite="false"/>

  <filterchain id="Common.FilterChain">
    <replacestring from="%ProjectName%"                 to="${ProjectName}"   />
    <replacestring from="%ProjectCodeLineName%"         to="${ProjectCodeLineName}"  />
    <replacestring from="%EmailHost%"                   to="${EmailHost}"  />

    <replacestring from="%Common.Directory.ProjectsRoot.Path%"   to="${Common.Directory.ProjectsRoot.Path}"  />
    
    <replacestring from="%Common.Directory.Build.Name%"          to="${Common.Directory.Build.Name}"  />
    <replacestring from="%Common.Directory.ArtifactRoot.Name%"   to="${Common.Directory.ArtifactRoot.Name}"  />
    <replacestring from="%Common.Directory.Packages.Name%"       to="${Common.Directory.Packages.Name}"  />
    <replacestring from="%Common.Directory.Product.Name%"        to="${Common.Directory.Product.Name}"  />
    <replacestring from="%Common.Directory.ThirdParty.Name%"     to="${Common.Directory.ThirdParty.Name}"  />
    <replacestring from="%Common.Directory.Production.Name%"     to="${Common.Directory.Production.Name}"  />
    <replacestring from="%Common.Directory.UnitTest.Name%"       to="${Common.Directory.UnitTest.Name}"  />
    <replacestring from="%Common.Directory.Install.Name%"        to="${Common.Directory.Install.Name}"  />
    <replacestring from="%Common.Directory.Transient.Name%"      to="${Common.Directory.Transient.Name}"  />
    <replacestring from="%Common.Directory.Tools.Name%"          to="${Common.Directory.Tools.Name}"  />

    <regexreplace replacment="${'$'}{environment::get-variable('ProgramFiles')}" pattern="(?i)C\:\\Program Files" lines="1" />
  </filterchain>
  
  <include buildfile="Scripts\CCNET.Install.xml"/>
  <include buildfile="Scripts\nAnt.Install.xml"/>
  <include buildfile="Scripts\BuildVS.Install.xml"/>
  <include buildfile="Scripts\Packages.Install.xml"/>

  <target name="Main">
    <call target="${Install.Action}" />
  </target>

  <target name="Install.Package" >
    <fail unless="${property::exists('ProjectName')}" message="Property ProjectName was not set."/>
    <call target="Packages.ValidateParameters"/>
    <call target="Packages.Install"/>
  </target>

  <target name="Install.Project" depends="Private.Install.ValidateParameters">
    <call target="Private.Install.CreateDirectoryStructure"/>
    <call target="nAnt.Install"/>
    <call target="CCNET.Install"/>
    <call target="BuildVS.Install"/>
    <call target="Packages.Install"/>
    <call target="Post.Install"/>
  </target>

  <target name="Private.Install.ValidateParameters" >
    <fail unless="${property::exists('ProjectName')}" message="Property ProjectName was not set."/>
    
    <call target="CCNET.ValidateParameters"/>
    <call target="nAnt.ValidateParameters"/>
    <call target="BuildVS.ValidateParameters"/>
    <call target="Packages.ValidateParameters"/>
  </target>

  <target name="Private.Install.CreateDirectoryStructure">
    <mkdir unless="${directory::exists(Common.Directory.ProjectsRoot.Path)}"        dir="${Common.Directory.ProjectsRoot.Path}"/>
    <mkdir unless="${directory::exists(Common.Directory.ProjectRoot.Path)}"     dir="${Common.Directory.ProjectRoot.Path}"/>
    <mkdir unless="${directory::exists(Common.Directory.CodeLine.Path)}" dir="${Common.Directory.CodeLine.Path}"/>
    <mkdir unless="${directory::exists(Common.Directory.Product.Path)}"         dir="${Common.Directory.Product.Path}"/>
    <mkdir unless="${directory::exists(Common.Directory.ThirdParty.Path)}"      dir="${Common.Directory.ThirdParty.Path}"/>
    <mkdir unless="${directory::exists(Common.Directory.Production.Path)}"      dir="${Common.Directory.Production.Path}"/>
    <mkdir unless="${directory::exists(Common.Directory.Build.Path)}"           dir="${Common.Directory.Build.Path}"/>
    <mkdir unless="${directory::exists(Common.Directory.Packages.Path)}"        dir="${Common.Directory.Packages.Path}"/>
    <mkdir unless="${directory::exists(Common.Directory.UnitTest.Path)}"        dir="${Common.Directory.UnitTest.Path}"/>
    <mkdir unless="${directory::exists(Common.Directory.Install.Path)}"         dir="${Common.Directory.Install.Path}"/>
  </target>
  
</project>