<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://nant.sf.net/schemas/nant.xsd" name="Coverage" >

  <include buildfile="${Coverage.UnitTestPropertiesInclude}" />
  <loadtasks assembly="${Common.Directory.Build.Path}\Packages\NCover\bin\CIFactory.NAnt.NCover.dll" />

  <!--
	The following properties should be specified in the calling script.
	
	<property name="Coverage.ReportFolder" value="${Common.Directory.Build.Path}\Coverage Reports"/>
  <property name="Coverage.CommonPropertiesFile" value="${Coverage.ReportFolder}\Properties.txt" />
  <property name="Coverage.UnitTestPackageInclude" value="${Common.Directory.Build.Path}\Packages\DotNetUnitTest\UnitTest.Target.xml" />
  <property name="Coverage.AssemblyNameFormat" value="*.dll"/>

  <fileset id="Coverage.Targets">
    <include name="${Common.Directory.Production.Path}\**\bin\${Coverage.AssemblyNameFormat}" />
    <include name="${Common.Directory.Production.Path}\**\bin\Debug\${Coverage.AssemblyNameFormat}" />
  </fileset>

  <property name="Coverage.FilesToDeleteAtSetup" value="${Coverage.ReportFolder}\*.*"/>
	-->

  <!-- The following properties are for internal use only -->
	
  <property name="Private.Coverage.ConfigFile" value="" />
  <property name="Private.Coverage.COMServer" value="" />
  <property name="Private.Coverage.CorProfiler" value="{18656C37-035D-41CD-82C2-85DEF2DD5F7B}" />

  <target name="UnitTest.RunTests">
    <call target="Private.Coverage.CreatePropertiesFile"/>
    <fileset id="Coverage.Targets" />

    <foreach item="File" property="Coverage.Target.ProjectFile.Path">
      <in>
        <items refid="Coverage.Target.ProjectFiles" />
      </in>
      <do>
        <echo message="Looking for assembly output in ${Coverage.Target.ProjectFile.Path}."/>
        <property name="TargetAssemblyName" value="${vsproject::get-assemblyname(Coverage.Target.ProjectFile.Path)}"/>
        <property name="TargetAssemblyPath" value="${vsproject::get-output-directory(Coverage.Target.ProjectFile.Path, Compile.ConfigName)}\${TargetAssemblyName}.dll"/>
        <function execute="${fileset::include-add('Coverage.Targets', TargetAssemblyPath)}" if="${file::exists(TargetAssemblyPath)}"/>
      </do>
    </foreach>

    <if test="${fileset::file-count('Coverage.Targets') == 0}">
      <call target="Coverage.FindTargetAssemblies"/>
    </if>

    <trycatch>
      <try>
        <ifthenelse test="${NCover.IIS == 'both'}">
          <then>
            <call target="Private.Coverage.NCover.ProfileConsole" />
            <call target="Private.Coverage.NCover.ProfileIIS" />
          </then>
          <else>
            <ifthenelse test="${NCover.IIS}">
              <then>
                <call target="Private.Coverage.NCover.ProfileIIS" />
              </then>
              <else>
                <call target="Private.Coverage.NCover.ProfileConsole" />
              </else>
            </ifthenelse>
          </else>
        </ifthenelse>
      </try>
      <catch property="failure">
        <fail message="Test suite execution (and/or code coverage profiling) failed. Check the Unit Test, Code Coverage, and NAnt Output reports for details. Error: ${failure}"/>
      </catch>
      <finally>
        <call target="Private.Coverage.NCoverExplorer" />
      </finally>
    </trycatch>
  </target>

  <target name="Coverage.FindTargetAssemblies">
    <fileset id="Coverage.Targets" >
      <include name="${Common.Directory.Production.Path}\**\bin\${Coverage.TargetAssemblyFormat}" />
      <include name="${Common.Directory.Production.Path}\**\bin\${Compile.ConfigName}\${Coverage.TargetAssemblyFormat}" />
    </fileset>
  </target>

  <target name="Private.Coverage.NCover.ProfileIIS">
    <echo message="Starting NCover Profiling of IIS..."/>
    <trycatch>
      <try>
        <startncover 
          program="${NCover.ExePath}"
          coverageFile="${Coverage.ReportFolder}\${ProjectName}RawCoverage.IIS.xml"
          profileIIS="true" serviceTimeout="${NCover.IIS.Timeout}"
        >
          <assemblies refid="Coverage.Targets"/>
        </startncover>

        <!--Begin Hack-->
        <!--MbUnit MbUnit.Core.Reports.ReportBase.Render won't emit report if cor_enable_profiling == 1-->
        <setenv>
          <environment>
            <variable name="Cor_Enable_Profiling" value="" />
          </environment>
        </setenv>
        <!--End Hack-->
        <nant buildfile="${Coverage.UnitTestPackageInclude}" target="UnitTest.RunTests" />
        
        <!--Sessions and what not need to be given an opportunity to end-->
        <sleep seconds="3"/>
      </try>
      <catch property="failure">
        <echo level="Warning" message="Error occurred during IIS profiling: ${failure}"/>
      </catch>
      <finally>
        <stopncover/>
        <servicecontroller service="W3SVC" action="Start"/>
      </finally>
    </trycatch>
  </target>

  <target name="Private.Coverage.NCover.ProfileConsole">
    <echo message="Starting NCover Profiling via the command line..."/>
    <setenv>
      <environment>
        <variable name="Cor_Enable_Profiling" value="1" />
        <variable name="Cor_Profiler" value="{6287B5F9-08A1-45e7-9498-B5B2E7B02995}" />
      </environment>
    </setenv>
    <ncover
      program="${NCover.ExePath}"
      commandLineExe="${Tools.NAnt.Exe}"
      commandLineArgs='-buildfile:"${Coverage.UnitTestPackageInclude}" @"${Coverage.CommonPropertiesFile}" UnitTest.RunTests'
      workingDirectory="${Coverage.ReportFolder}"
      coverageFile="${Coverage.ReportFolder}\${ProjectName}RawCoverage.xUnit.xml"
      profiledProcessModule="${NCover.ProcessToMonitor}"
    >
      <assemblies refid="Coverage.Targets" />
    </ncover>
  </target>

  <target name="Private.Coverage.NCoverExplorer">
    <echo message="Starting NCoverExplorer report generation..."/>
    <ncoverexplorer program="${NCover.ExplorerExePath}"
						projectName="${ProjectName}"
						reportType="4"
						outputDir="${Coverage.ReportFolder}" 
						xmlReportName="CoverageReport.xml"
						showExcluded="True"
						satisfactoryCoverage="${NCover.SatisfactoryCoverage}" >
      <fileset>
        <include name="${Coverage.ReportFolder}\${ProjectName}RawCoverage*.xml"/>
      </fileset>
    </ncoverexplorer>
    
    <style in="${Coverage.ReportFolder}\CoverageReport.xml"
           out="${Common.Directory.Artifact.Path}\NCoverReport.html"
           style="${Common.Directory.Packages.Path}\NCover\NCoverExplorer.xsl"/>

    <echo level="Debug" message="Publishing raw coverage data to the Artifacts folder..."/>
    <copy todir="${Common.Directory.Artifact.Path}\CoverageReports">
      <fileset basedir="${Coverage.ReportFolder}">
        <include name="**\*.*"/>
      </fileset>
    </copy>
  </target>

  <target name="Private.Coverage.CreatePropertiesFile">
    <property name="Compile.ConfigName" value="Debug" overwrite="false"/>
    <saveproperties file="${Coverage.CommonPropertiesFile}" format="CommandLine" >
      <property name="CCNetBuildCondition"/>
      <property name="CCNetIntegrationStatus"/>
      <property name="CCNetLabel"/>
      <property name="CCNetLastIntegrationStatus"/>
      <property name="CCNetProject"/>
      <property name="CCNetBuildDate"/>
      <property name="CCNetBuildTime"/>
      <property name="CCNetArtifactDirectory"/>
      <property name="CCNetWorkingDirectory"/>
      <property name="ProjectName"/>
      <property name="ProjectCodeLineName"/>
      <property name="Common.Directory.ProjectsRoot.Path"/>
      <property name="Common.Directory.ProjectRoot.Path"/>
      <property name="Common.Directory.CodeLine.Path"/>
      <property name="Common.Directory.Product.Path"/>
      <property name="Common.Directory.ThirdParty.Path"/>
      <property name="Common.Directory.Production.Path"/>
      <property name="Common.Directory.Build.Path"/>
      <property name="Compile.ConfigName"/>
      <property name="Common.Directory.ArtifactRoot.Path" value="${Common.Directory.ArtifactRoot.Path}"/>
      <property name="Tools.NAnt.Exe" value="${Common.Directory.Build.Path}\nAnt\bin\nant.exe"/>
      <property name="Common.Directory.Packages.Path" value="${Common.Directory.Packages.Path}"/>
      <property name="Common.Directory.Artifact.Path"/>
      <property name="Common.Directory.Artifact.Name"/>
      <property name="Project.Directory.Report.Path"/>
      <property name="Project.Directory.Temp.Path"/>
      <property name="Common.Directory.UnitTest.Path"/>
      <property name="Common.Directory.Install.Path"/>
    </saveproperties>
  </target>

  <target name="UnitTest.SetUp">
    <mkdir if="${directory::exists(Coverage.ReportFolder) == false}" dir="${Coverage.ReportFolder}"/>

    <delete>
      <fileset>
        <include name="${Coverage.ReportFolder}\**\*"/>
      </fileset>
    </delete>

    <call target="Private.Coverage.CreatePropertiesFile"/>
    
    <exec program="${Common.Directory.Build.Path}\nAnt\bin\nant.exe">
      <arg line='-buildfile:"${Coverage.UnitTestPackageInclude}"'/>
      <arg line='@"${Coverage.CommonPropertiesFile}"' />
      <arg line="UnitTest.SetUp"/>
    </exec>
  </target>

  <target name="UnitTest.TearDown">
    <exec program="${Common.Directory.Build.Path}\nAnt\bin\nant.exe">
      <arg line='-buildfile:"${Coverage.UnitTestPackageInclude}"'/>
      <arg line='@"${Coverage.CommonPropertiesFile}"' />
      <arg line="UnitTest.TearDown"/>
    </exec>
  </target>

  <target name="UnitTest.Main">
    <trycatch>
      <try>
        <call target="UnitTest.SetUp"/>
        <call target="UnitTest.RunTests"/>
      </try>
      <finally>
        <call target="UnitTest.TearDown"/>
      </finally>
    </trycatch>
  </target>


</project>