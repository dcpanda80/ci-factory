<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://nant.sf.net/schemas/nant.xsd" name="SVN">

  <loadtasks assembly="${PackagesDirectory}\Subversion\bin\CIFactory.NAnt.Subversion.Tasks.dll" />

  <property name="SVN.Debug" value="false" overwrite="false" />

  <include buildfile="SVN.Properties.xml" />

  <property name="Private.SVN.ReportDirectory" value="${BuildDirectory}\SVN" overwrite="false"/>

  <!--
	The following properties should be specified in the calling script.
	
	<property name="SVN.URI" value="" />
	<property name="SVN.Username" value="" />
	<property name="SVN.Password" value="" />
	
	-->

  <target name="SourceControl.CleanGetOfThirdPartyDirectory" >
    <property name="SourceControl.CleanGetOf" value="${ThirdPartyDirectory}"/>
    <call target="SourceControl.CleanGetOf"/>
  </target>

  <target name="SourceControl.CleanGetOfProductDirectory" >
    <property name="SourceControl.CleanGetOf" value="${ProductDirectory}"/>
    <call target="SourceControl.CleanGetOf"/>
  </target>

  <target name="SourceControl.GetOfThirdPartyDirectory" >
    <property name="SourceControl.GetOf" value="${ThirdPartyDirectory}"/>
    <call target="SourceControl.GetOf"/>
  </target>

  <target name="SourceControl.GetOfProductDirectory" >
    <property name="SourceControl.GetOf" value="${ProductDirectory}"/>
    <call target="SourceControl.GetOf"/>
  </target>
  
  <target name="SourceControl.CleanGetOf" >
    <trycatch>
      <try>
        <exec program="svn" workingdir="${SourceControl.CleanGetOf}" verbose="true" failonerror="false">
          <arg line="cleanup" />
        </exec>
        <exec program="svn" workingdir="${SourceControl.CleanGetOf}" verbose="true" failonerror="false">
          <arg line="revert" />
          <arg line="--recursive" />
          <arg line="." />
        </exec>
        <svncleantree directory="${SourceControl.CleanGetOf}" recursive="true" if="${directory::exists(SourceControl.CleanGetOf)}" failonerror="false"/>
        <property name="SourceControl.GetOf" value="${SourceControl.CleanGetOf}"/>
        <call target="SourceControl.GetOf"/>
      </try>
      <catch>
        <if test="${directory::exists(SourceControl.CleanGetOf)}" >
          <attrib readonly="false">
            <fileset>
              <include name="${SourceControl.CleanGetOf}\*" />
            </fileset>
          </attrib>

          <trycatch>
            <try>
              <delete dir="${SourceControl.CleanGetOf}"/>
            </try>
            <catch>
              <exec program="cmd" commandline='/C "rmdir /S /Q "${SourceControl.CleanGetOf}""' />
            </catch>
          </trycatch>
        </if>
        <call target="SourceControl.GetOf"/>
      </catch>
    </trycatch>
    
  </target>

  <target name="SourceControl.GetOf" >
    <mkdir dir="${SourceControl.GetOf}" unless="${directory::exists(SourceControl.GetOf)}"/>

    <trycatch>
      <try>
        <exec program="svn" workingdir="${SourceControl.GetOf}" verbose="true">
          <arg line="update" />
          <arg line="--non-interactive" />
          <arg line="--username ${SVN.Username}" />
          <arg line="--password ${SVN.Password}" />
        </exec>
      </try>
      <catch>
        <property name="Uri" value="${string::replace(SourceControl.GetOf, ProjectCodeLineDirectory, SVN.URI.ProjectCodeLine)}"/>
        <property name="Uri" value="${string::replace(Uri, '\', '/')}"/>
        <svn-checkout username="${SVN.Username}" password="${SVN.Password}" uri="${Uri}" recursive ="true" destination ="${SourceControl.GetOf}" />
      </catch>
    </trycatch>
    
  </target>

  <!--
  The following properties should be specified in the calling script.
  
  <property name="SourceControl.CheckOut.File" value="${Private.Versioning.AssemblyInfoFile}"/>
  -->
  <target name="SourceControl.CheckOut" >
    <exec program="svn" workingdir="${path::get-directory-name(SourceControl.CheckOut.File)}" verbose="true">
      <arg line="update" />
      <arg line="--non-interactive" />
      <arg line="--username ${SVN.Username}" />
      <arg line="--password ${SVN.Password}" />
      <arg line='"${path::get-file-name(SourceControl.CheckOut.File)}"' />
    </exec>
  </target>

  <!--
  The following properties should be specified in the calling script.
  
  <property name="SourceControl.CheckIn.File" value="${Private.Versioning.AssemblyInfoFile}"/>
  -->
  <target name="SourceControl.CheckIn" >
    <exec program="svn" workingdir="${path::get-directory-name(SourceControl.CheckIn.File)}" verbose="true">
      <arg line="update" />
      <arg line="--non-interactive" />
      <arg line="--username ${SVN.Username}" />
      <arg line="--password ${SVN.Password}" />
      <arg line='"${path::get-file-name(SourceControl.CheckIn.File)}"' />
    </exec>
    <exec program="svn" workingdir="${path::get-directory-name(SourceControl.CheckIn.File)}" verbose="true">
      <arg line="commit" />
      <arg line="--non-interactive" />
      <arg line="--username ${SVN.Username}" />
      <arg line="--password ${SVN.Password}" />
      <arg line='-m "Modified by build script in build ${CCNetLabel}"' />
      <arg line='"${path::get-file-name(SourceControl.CheckIn.File)}"' />
    </exec>
  </target>

  <target name="SourceControl.SetUp">
    <mkdir if="${directory::exists(Private.SVN.ReportDirectory) == false}" dir="${Private.SVN.ReportDirectory}"/>
    <delete>
      <fileset>
        <include name="${Private.SVN.ReportDirectory}\*.*"/>
      </fileset>
    </delete>
  </target>

  <target name="SourceControl.TearDown">

  </target>

  <target name="SourceControl.Repository.Create">
    <mkdir if="${directory::exists(SVN.RootShare + '\' + ProjectName) == false}" dir="${SVN.RootShare}\${ProjectName}"/>
    <unzip todir="${SVN.RootShare}" zipfile="${SVN.TemplateDB}"/>
  </target>

  <target name="SourceControl.Repository.Load">
    <mkdir dir="${ProjectRootDirectory}\Tags" unless="${directory::exists(ProjectsDirectory + '\Tags')}"/>
    <exec program="svn" workingdir="${ProjectsDirectory}" verbose="true" >
      <arg line="import"/>
      <arg line='-m "Initial Load by CI Factory Installer"'/>
      <arg line="${ProjectName}"/>
      <arg line="${SVN.URI.Root}"/>
      <arg line="--non-interactive" />
      <arg line="--username ${SVN.Username}" />
      <arg line="--password ${SVN.Password}" />
    </exec>
  </target>

  <target name="SourceControl.Bindings.Create">
    <fail message="Not yet implemented!"/>
  </target>
</project>