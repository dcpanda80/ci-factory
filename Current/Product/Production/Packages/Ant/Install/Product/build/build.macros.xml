<?xml version="1.0" encoding="UTF-8"?>
<project name="build.taskdef" xmlns:ora="antlib:net.sf.incanto">

	<!-- ###############  Begin Import of Extra Ant Tasks  ############### -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" />
	<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask"/>
	<typedef resource="AgilexAnt.properties" />
	<taskdef name="for" classname="net.sf.antcontrib.logic.ForTask" />
	
	<macrodef name="call">
		<attribute name="target"/>
		<attribute name="if" default="true"/>
		<attribute name="unless" default="false"/>
		<attribute name="once" default="false"/>
		<sequential>
			<if>
				<and>
					<istrue value="@{if}" />
					<isfalse value="@{unless}" />
					<or>
						<and>
							<istrue value="@{once}"/>
							<not>
								<isset property="${ant.project.name}.Target.@{target}.Executed"/>
							</not>
						</and>
						<isfalse value="@{once}"/>
					</or>
				</and>
				<then>
					<runtarget target="@{target}"/>
				</then>
			</if>
		</sequential>
	</macrodef>

	<macrodef name="dependcalls">
		<attribute name="target"/>
		<sequential>
			<for param="dependent.project.build.file">
				<path refid="build.project.dependencies" />
				<sequential>
					<available file="@{dependent.project.build.file}" property="build.available" value="true" />
					<if>
						<isset property="build.available" />
						<then>
							<var unset="true" name="dependent.project.directory" />
							<dirname file="@{dependent.project.build.file}" property="dependent.project.directory" />
							<echo message="begin-> ant ${dependent.project.directory}/build.xml @{target}" />
							<ant dir="${dependent.project.directory}" antfile="build.xml" target="@{target}" inheritall="false" />
							<echo message="end-> ant @{dependent.project.build.file} @{target}" />
						</then>
						<else>
							<echo level="warning" message="Could not find @{dependent.project.build.file}!" />
						</else>
					</if>
				</sequential>
			</for>
		</sequential>
	</macrodef>
	
	<macrodef name="execsql">
		<attribute name="file" />
		<sequential>
		<ora:sqlplus 
			logon="sys/oracle@XE as sysdba"
			start="@{file}"
		/></sequential>
	</macrodef>
	
	<scriptdef name="addincludetofileset" language="javascript">
		<attribute name="include" />
		<attribute name="refid"/>
		<![CDATA[
			fileset = project.getReference(attributes.get("refid"));
			fileset.createInclude().setName(attributes.get("include"));
		]]>
	</scriptdef>
	
	<scriptdef name="changeid" language="javascript">
		<attribute name="originial"/>
		<attribute name="new"/>
		<![CDATA[
			ref = project.getReference(attributes.get("originial"));
			project.addReference(attributes.get("new"), ref)
		]]>
	</scriptdef>
	
	<macrodef name="xmlpeek">
		<attribute name="file"/>
		<attribute name="xpath"/>
		<attribute name="property"/>
		<sequential>
			<var name="@{property}" unset="true"/>
			<xmltask source="@{file}" >
				<copy path="@{xpath}" property="@{property}" attrValue="true" />
			</xmltask>
			<fail unless="@{property}" message="Unable to find xpath value for @{xpath} in file @{file}."/>
		</sequential>
	</macrodef>
	
	<scriptdef name="converttopercent" language="javascript">
		<attribute name="name"/>
		<attribute name="value"/>
		<![CDATA[
			var rate = attributes.get("value");
			var percent = (rate * 100).toFixed(2);
			
			varTask = project.createTask("var");
			varTask.setName(attributes.get("name"));
			varTask.setUnset(true);
			varTask.execute();
			
			varTask.setUnset(false);
			varTask.setValue(percent);
			varTask.execute();
		]]>
	</scriptdef>
	
	<macrodef name="foreach-line">
    <attribute name="file" />
    <attribute name="var" default="line" />
    <element name="body" implicit="true" />
    <sequential>
      <loadfile property="lines4@{file}" srcfile="@{file}" />
      <for delimiter="${line.separator}" param="@{var}" list="${lines4@{file}}">
        <sequential>
          <body />
        </sequential>
      </for>
    </sequential>
  </macrodef>

</project>
