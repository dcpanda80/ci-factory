<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://nant.sf.net/schemas/nant.xsd" name="Analytics" default="test" >

  <!-- Input Properties
  <property name="Analytics.XslFilePath" value=""/>
  <property name="Analytics.XmlReportFileName" value=""/>
  <property name="Analytics.XmlInputFileName" value=""/>
  <property name="Analytics.CopyFileSetRefId" value=""/>
  <property name="Analytics.Append" value=""/>
  -->
  <target name="Analytics.CompileReport">
    <echo message="Processing ${Analytics.BuildLog}"/>
    <echo message="Analytics.XslFilePath = ${Analytics.XslFilePath}"/>
    <echo message="Analytics.XmlReportFileName = ${Analytics.XmlReportFileName}"/>
    <echo message="Analytics.XmlInputFileName = ${Analytics.XmlInputFileName}"/>
    <echo message="Analytics.CopyFileSetRefId = ${Analytics.CopyFileSetRefId}"/>
    <echo message="Analytics.Append = ${Analytics.Append}"/>

    <copy
      file="${Analytics.XslFilePath}"
      todir="${Analytics.ContentDirectoryPath}"
      overwrite="true"
    >
      <filterchain refid="Analytics.CompileReport.XmlFileToCopy.filterchain" />
    </copy>

    <xslmultiout xmlInputFilePath="${Analytics.XmlInputFileName}"
      xslTransformFilePath="${Analytics.ContentDirectoryPath}\${path::get-file-name(Analytics.XslFilePath)}" 
      outputFilePath="${Analytics.ContentDirectoryPath}\${Analytics.XmlReportFileName}" 
      append="${Analytics.Append}">
      <parameters>
        <parameter name="CCNetLabel" value="${CCNetLabel}"/>
        <parameter name="CCNetLogFilePath" value="${CCNetLogFilePath}"/>
        <parameter name="CCNetProject" value="${CCNetProject}"/>
      </parameters>
    </xslmultiout>

    <foreach item="File" property="Analytics.CompileReport.XmlFileToCopy" verbose="true">
      <in>
        <items refid="${Analytics.CopyFileSetRefId}" />
      </in>
      <do>
        <echo message="Copying ${Analytics.CompileReport.XmlFileToCopy} to ${Analytics.ContentDirectoryPath + '\' + path::get-file-name(Analytics.CompileReport.XmlFileToCopy)}"/>
        <copy
          file="${Analytics.CompileReport.XmlFileToCopy}"
          todir="${Analytics.ContentDirectoryPath}"
          overwrite="true"
        >
          <filterchain refid="Analytics.CompileReport.XmlFileToCopy.filterchain" />
        </copy>
        <xmlcopy 
          inputFilePath="${Analytics.ContentDirectoryPath}\${path::get-file-name(Analytics.CompileReport.XmlFileToCopy)}" 
          outputDirectoryPath="${Common.Directory.Artifact.Path}" 
          verbose="True"
        />
        <call target="Analytics.CompileReport.XmlFileToCopy.Reset.filterchain"/>
      </do>
    </foreach>
  </target>

  <target name="Analytics.CompileReport.XmlFileToCopy.Reset.filterchain">
    <filterchain id="Analytics.CompileReport.XmlFileToCopy.filterchain">
      <replacestring from="&amp;CCNetLabel;" to="${CCNetLabel}"/>
      <replacestring from="&amp;CCNetLogFilePath;" to="${CCNetLogFilePath}"/>
      <replacestring from="&amp;CCNetProject;" to="${CCNetProject}"/>
    </filterchain>
  </target>

  <!-- Input Properties
  <property name="Analytics.TargetListRefId" value=""/>
  -->
  <target name="Analytics.CompileReports">
    <loopthrough property="Analytics.Target">
      <items>
        <strings refid="${Analytics.TargetListRefId}" />
      </items>
      <do>
        <call target="Analytics.CompileReport.XmlFileToCopy.Reset.filterchain"/>
        <call target="${Analytics.Target}"/>
      </do>
    </loopthrough>
  </target>

  <!-- Input Properties
  <property name="Analytics.TargetListRefId" value=""/>
  <property name="Analytics.DeleteFileSetRefId" value=""/>
  -->
  <target name="Analytics.RecompileReport">
    <delete>
      <fileset refid="${Analytics.DeleteFileSetRefId}" />
    </delete>

    <foreach item="File" property="Analytics.BuildLog">
      <in>
        <items>
          <include name="${CCNet.Server.Directory.Path}\${CCNetProject}\Artifacts\buildlogs\*.xml"/>
        </items>
      </in>
      <do>
        <trycatch>
          <try>
            <regex input="${Analytics.BuildLog}" pattern="log\d+Lbuild\.(?'CCNetLabel'.*)\.xml$" />
          </try>
          <catch>
            <xmlpeek
              file="${Analytics.BuildLog}"
              property="CCNetLabel"
              xpath="/cruisecontrol/build/@label"
            />
          </catch>
        </trycatch>
        
        <property name="CCNetLogFilePath" value="${Analytics.BuildLog}"/>

        <regex pattern="^*.log(?'PrivateAnalyticsArtifactFolderName'\d+)(?(?=Lbuild)Lbuild\.[\w+|\.|-]+\.xml$|\.xml$)" input="${Analytics.BuildLog}"/>
        <property name="Common.Directory.Artifact.Name" value="${PrivateAnalyticsArtifactFolderName}"/>
        <echo message="The ArtifactFolderName is ${Common.Directory.Artifact.Name}"/>
        <property name="Common.Directory.Artifact.Path" value="${Common.Directory.ArtifactRoot.Path}\${Common.Directory.Artifact.Name}"/>
        <mkdir dir="${Common.Directory.Artifact.Path}" unless="${directory::exists(Common.Directory.Artifact.Path)}"/>

        <exec program="${Tools.NAnt.Exe}">
          <arg line='-buildfile:"${Common.Directory.Build.Path}\RecompileAnalytics.xml"'/>

          <arg line='-D:Analytics.BuildLog=${Analytics.BuildLog}'/>
          <arg line='-D:CCNetLogFilePath=${CCNetLogFilePath}'/>
          <arg line='-D:Common.Directory.Artifact.Name=${Common.Directory.Artifact.Name}'/>
          <arg line='-D:Common.Directory.Artifact.Path=${Common.Directory.Artifact.Path}'/>
          <arg line='-D:CCNetProject=${CCNetProject}'/>
          <arg line='-D:CCNetLabel=${CCNetLabel}'/>
          
          <arg line="Analytics.SetUp"/>
          <arg line="Analytics.CompileReports"/>
        </exec>
      </do>
    </foreach>
    
  </target>

  <target name="Analytics.SetUp">
    <mkdir dir="${Analytics.ContentDirectoryPath}" unless="${directory::exists(Analytics.ContentDirectoryPath)}"/>
    <write file="${Analytics.ContentDirectoryPath}\entities.dtd" >
      <text expand="true" xml="false">
        <![CDATA[<!ENTITY CCNetProject '${CCNetProject}'>]]>
      </text>
    </write>
    
    <write file="${Analytics.PackageDirectory}\entities.dtd" >
      <text expand="true" xml="false">
        <![CDATA[<!ENTITY CCNetProject '${CCNetProject}'>]]>
      </text>
    </write>
  </target>

  <target name="Analytics.TearDown">

  </target>
  
</project>