//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace CIFactory.TargetProcess.Common.ProjectWebService
{
// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ProjectServiceSoap", Namespace="http://targetprocess.com")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTransferObject))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
public partial class ProjectService : Microsoft.Web.Services3.WebServicesClientProtocol {
    
    private System.Threading.SendOrPostCallback RetrieveAllForLastCommentUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAllForProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAllForOwnerOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAllForProgramOfProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAllForProcessOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAllForCompanyOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveCommentsForProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddCommentToProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback RemoveCommentFromProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAttachmentsForProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback RemoveAttachmentFromProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddAttachmentToProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAttachedRequestsForProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddRequestGeneralToProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback RemoveRequestGeneralFromProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveReleasesForProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddReleaseToProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback RemoveReleaseFromProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveProjectMembersForProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddProjectMemberToProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback RemoveProjectMemberFromProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetByIDOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAllOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetIDsOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrievePageOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveCountOperationCompleted;
    
    /// <remarks/>
    public ProjectService() {
        this.Url = "http://ch33tp.agilexhealth.com/Services/ProjectService.asmx";
    }
    
    /// <remarks/>
    public event RetrieveAllForLastCommentUserCompletedEventHandler RetrieveAllForLastCommentUserCompleted;
    
    /// <remarks/>
    public event RetrieveAllForProjectCompletedEventHandler RetrieveAllForProjectCompleted;
    
    /// <remarks/>
    public event RetrieveAllForOwnerCompletedEventHandler RetrieveAllForOwnerCompleted;
    
    /// <remarks/>
    public event RetrieveAllForProgramOfProjectCompletedEventHandler RetrieveAllForProgramOfProjectCompleted;
    
    /// <remarks/>
    public event RetrieveAllForProcessCompletedEventHandler RetrieveAllForProcessCompleted;
    
    /// <remarks/>
    public event RetrieveAllForCompanyCompletedEventHandler RetrieveAllForCompanyCompleted;
    
    /// <remarks/>
    public event RetrieveCommentsForProjectCompletedEventHandler RetrieveCommentsForProjectCompleted;
    
    /// <remarks/>
    public event AddCommentToProjectCompletedEventHandler AddCommentToProjectCompleted;
    
    /// <remarks/>
    public event RemoveCommentFromProjectCompletedEventHandler RemoveCommentFromProjectCompleted;
    
    /// <remarks/>
    public event RetrieveAttachmentsForProjectCompletedEventHandler RetrieveAttachmentsForProjectCompleted;
    
    /// <remarks/>
    public event RemoveAttachmentFromProjectCompletedEventHandler RemoveAttachmentFromProjectCompleted;
    
    /// <remarks/>
    public event AddAttachmentToProjectCompletedEventHandler AddAttachmentToProjectCompleted;
    
    /// <remarks/>
    public event RetrieveAttachedRequestsForProjectCompletedEventHandler RetrieveAttachedRequestsForProjectCompleted;
    
    /// <remarks/>
    public event AddRequestGeneralToProjectCompletedEventHandler AddRequestGeneralToProjectCompleted;
    
    /// <remarks/>
    public event RemoveRequestGeneralFromProjectCompletedEventHandler RemoveRequestGeneralFromProjectCompleted;
    
    /// <remarks/>
    public event RetrieveReleasesForProjectCompletedEventHandler RetrieveReleasesForProjectCompleted;
    
    /// <remarks/>
    public event AddReleaseToProjectCompletedEventHandler AddReleaseToProjectCompleted;
    
    /// <remarks/>
    public event RemoveReleaseFromProjectCompletedEventHandler RemoveReleaseFromProjectCompleted;
    
    /// <remarks/>
    public event RetrieveProjectMembersForProjectCompletedEventHandler RetrieveProjectMembersForProjectCompleted;
    
    /// <remarks/>
    public event AddProjectMemberToProjectCompletedEventHandler AddProjectMemberToProjectCompleted;
    
    /// <remarks/>
    public event RemoveProjectMemberFromProjectCompletedEventHandler RemoveProjectMemberFromProjectCompleted;
    
    /// <remarks/>
    public event GetByIDCompletedEventHandler GetByIDCompleted;
    
    /// <remarks/>
    public event CreateCompletedEventHandler CreateCompleted;
    
    /// <remarks/>
    public event UpdateCompletedEventHandler UpdateCompleted;
    
    /// <remarks/>
    public event DeleteCompletedEventHandler DeleteCompleted;
    
    /// <remarks/>
    public event RetrieveAllCompletedEventHandler RetrieveAllCompleted;
    
    /// <remarks/>
    public event RetrieveCompletedEventHandler RetrieveCompleted;
    
    /// <remarks/>
    public event GetIDsCompletedEventHandler GetIDsCompleted;
    
    /// <remarks/>
    public event RetrievePageCompletedEventHandler RetrievePageCompleted;
    
    /// <remarks/>
    public event RetrieveCountCompletedEventHandler RetrieveCountCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForLastCommentUser", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ProjectDTO[] RetrieveAllForLastCommentUser(int lastCommentUserID) {
        object[] results = this.Invoke("RetrieveAllForLastCommentUser", new object[] {
                    lastCommentUserID});
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAllForLastCommentUser(int lastCommentUserID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAllForLastCommentUser", new object[] {
                    lastCommentUserID}, callback, asyncState);
    }
    
    /// <remarks/>
    public ProjectDTO[] EndRetrieveAllForLastCommentUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAllForLastCommentUserAsync(int lastCommentUserID) {
        this.RetrieveAllForLastCommentUserAsync(lastCommentUserID, null);
    }
    
    /// <remarks/>
    public void RetrieveAllForLastCommentUserAsync(int lastCommentUserID, object userState) {
        if ((this.RetrieveAllForLastCommentUserOperationCompleted == null)) {
            this.RetrieveAllForLastCommentUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForLastCommentUserOperationCompleted);
        }
        this.InvokeAsync("RetrieveAllForLastCommentUser", new object[] {
                    lastCommentUserID}, this.RetrieveAllForLastCommentUserOperationCompleted, userState);
    }
    
    private void OnRetrieveAllForLastCommentUserOperationCompleted(object arg) {
        if ((this.RetrieveAllForLastCommentUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAllForLastCommentUserCompleted(this, new RetrieveAllForLastCommentUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ProjectDTO[] RetrieveAllForProject(int projectID) {
        object[] results = this.Invoke("RetrieveAllForProject", new object[] {
                    projectID});
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAllForProject(int projectID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAllForProject", new object[] {
                    projectID}, callback, asyncState);
    }
    
    /// <remarks/>
    public ProjectDTO[] EndRetrieveAllForProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAllForProjectAsync(int projectID) {
        this.RetrieveAllForProjectAsync(projectID, null);
    }
    
    /// <remarks/>
    public void RetrieveAllForProjectAsync(int projectID, object userState) {
        if ((this.RetrieveAllForProjectOperationCompleted == null)) {
            this.RetrieveAllForProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForProjectOperationCompleted);
        }
        this.InvokeAsync("RetrieveAllForProject", new object[] {
                    projectID}, this.RetrieveAllForProjectOperationCompleted, userState);
    }
    
    private void OnRetrieveAllForProjectOperationCompleted(object arg) {
        if ((this.RetrieveAllForProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAllForProjectCompleted(this, new RetrieveAllForProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForOwner", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ProjectDTO[] RetrieveAllForOwner(int ownerID) {
        object[] results = this.Invoke("RetrieveAllForOwner", new object[] {
                    ownerID});
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAllForOwner(int ownerID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAllForOwner", new object[] {
                    ownerID}, callback, asyncState);
    }
    
    /// <remarks/>
    public ProjectDTO[] EndRetrieveAllForOwner(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAllForOwnerAsync(int ownerID) {
        this.RetrieveAllForOwnerAsync(ownerID, null);
    }
    
    /// <remarks/>
    public void RetrieveAllForOwnerAsync(int ownerID, object userState) {
        if ((this.RetrieveAllForOwnerOperationCompleted == null)) {
            this.RetrieveAllForOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForOwnerOperationCompleted);
        }
        this.InvokeAsync("RetrieveAllForOwner", new object[] {
                    ownerID}, this.RetrieveAllForOwnerOperationCompleted, userState);
    }
    
    private void OnRetrieveAllForOwnerOperationCompleted(object arg) {
        if ((this.RetrieveAllForOwnerCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAllForOwnerCompleted(this, new RetrieveAllForOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForProgramOfProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ProjectDTO[] RetrieveAllForProgramOfProject(int programOfProjectID) {
        object[] results = this.Invoke("RetrieveAllForProgramOfProject", new object[] {
                    programOfProjectID});
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAllForProgramOfProject(int programOfProjectID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAllForProgramOfProject", new object[] {
                    programOfProjectID}, callback, asyncState);
    }
    
    /// <remarks/>
    public ProjectDTO[] EndRetrieveAllForProgramOfProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAllForProgramOfProjectAsync(int programOfProjectID) {
        this.RetrieveAllForProgramOfProjectAsync(programOfProjectID, null);
    }
    
    /// <remarks/>
    public void RetrieveAllForProgramOfProjectAsync(int programOfProjectID, object userState) {
        if ((this.RetrieveAllForProgramOfProjectOperationCompleted == null)) {
            this.RetrieveAllForProgramOfProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForProgramOfProjectOperationCompleted);
        }
        this.InvokeAsync("RetrieveAllForProgramOfProject", new object[] {
                    programOfProjectID}, this.RetrieveAllForProgramOfProjectOperationCompleted, userState);
    }
    
    private void OnRetrieveAllForProgramOfProjectOperationCompleted(object arg) {
        if ((this.RetrieveAllForProgramOfProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAllForProgramOfProjectCompleted(this, new RetrieveAllForProgramOfProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForProcess", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ProjectDTO[] RetrieveAllForProcess(int processID) {
        object[] results = this.Invoke("RetrieveAllForProcess", new object[] {
                    processID});
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAllForProcess(int processID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAllForProcess", new object[] {
                    processID}, callback, asyncState);
    }
    
    /// <remarks/>
    public ProjectDTO[] EndRetrieveAllForProcess(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAllForProcessAsync(int processID) {
        this.RetrieveAllForProcessAsync(processID, null);
    }
    
    /// <remarks/>
    public void RetrieveAllForProcessAsync(int processID, object userState) {
        if ((this.RetrieveAllForProcessOperationCompleted == null)) {
            this.RetrieveAllForProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForProcessOperationCompleted);
        }
        this.InvokeAsync("RetrieveAllForProcess", new object[] {
                    processID}, this.RetrieveAllForProcessOperationCompleted, userState);
    }
    
    private void OnRetrieveAllForProcessOperationCompleted(object arg) {
        if ((this.RetrieveAllForProcessCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAllForProcessCompleted(this, new RetrieveAllForProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForCompany", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ProjectDTO[] RetrieveAllForCompany(int companyID) {
        object[] results = this.Invoke("RetrieveAllForCompany", new object[] {
                    companyID});
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAllForCompany(int companyID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAllForCompany", new object[] {
                    companyID}, callback, asyncState);
    }
    
    /// <remarks/>
    public ProjectDTO[] EndRetrieveAllForCompany(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAllForCompanyAsync(int companyID) {
        this.RetrieveAllForCompanyAsync(companyID, null);
    }
    
    /// <remarks/>
    public void RetrieveAllForCompanyAsync(int companyID, object userState) {
        if ((this.RetrieveAllForCompanyOperationCompleted == null)) {
            this.RetrieveAllForCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForCompanyOperationCompleted);
        }
        this.InvokeAsync("RetrieveAllForCompany", new object[] {
                    companyID}, this.RetrieveAllForCompanyOperationCompleted, userState);
    }
    
    private void OnRetrieveAllForCompanyOperationCompleted(object arg) {
        if ((this.RetrieveAllForCompanyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAllForCompanyCompleted(this, new RetrieveAllForCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveCommentsForProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CommentDTO[] RetrieveCommentsForProject(int projectID) {
        object[] results = this.Invoke("RetrieveCommentsForProject", new object[] {
                    projectID});
        return ((CommentDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveCommentsForProject(int projectID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveCommentsForProject", new object[] {
                    projectID}, callback, asyncState);
    }
    
    /// <remarks/>
    public CommentDTO[] EndRetrieveCommentsForProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CommentDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveCommentsForProjectAsync(int projectID) {
        this.RetrieveCommentsForProjectAsync(projectID, null);
    }
    
    /// <remarks/>
    public void RetrieveCommentsForProjectAsync(int projectID, object userState) {
        if ((this.RetrieveCommentsForProjectOperationCompleted == null)) {
            this.RetrieveCommentsForProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCommentsForProjectOperationCompleted);
        }
        this.InvokeAsync("RetrieveCommentsForProject", new object[] {
                    projectID}, this.RetrieveCommentsForProjectOperationCompleted, userState);
    }
    
    private void OnRetrieveCommentsForProjectOperationCompleted(object arg) {
        if ((this.RetrieveCommentsForProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveCommentsForProjectCompleted(this, new RetrieveCommentsForProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddCommentToProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int AddCommentToProject(int projectID, CommentDTO comment) {
        object[] results = this.Invoke("AddCommentToProject", new object[] {
                    projectID,
                    comment});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddCommentToProject(int projectID, CommentDTO comment, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddCommentToProject", new object[] {
                    projectID,
                    comment}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndAddCommentToProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void AddCommentToProjectAsync(int projectID, CommentDTO comment) {
        this.AddCommentToProjectAsync(projectID, comment, null);
    }
    
    /// <remarks/>
    public void AddCommentToProjectAsync(int projectID, CommentDTO comment, object userState) {
        if ((this.AddCommentToProjectOperationCompleted == null)) {
            this.AddCommentToProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCommentToProjectOperationCompleted);
        }
        this.InvokeAsync("AddCommentToProject", new object[] {
                    projectID,
                    comment}, this.AddCommentToProjectOperationCompleted, userState);
    }
    
    private void OnAddCommentToProjectOperationCompleted(object arg) {
        if ((this.AddCommentToProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddCommentToProjectCompleted(this, new AddCommentToProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveCommentFromProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveCommentFromProject(int projectID, int commentID) {
        this.Invoke("RemoveCommentFromProject", new object[] {
                    projectID,
                    commentID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveCommentFromProject(int projectID, int commentID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveCommentFromProject", new object[] {
                    projectID,
                    commentID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoveCommentFromProject(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoveCommentFromProjectAsync(int projectID, int commentID) {
        this.RemoveCommentFromProjectAsync(projectID, commentID, null);
    }
    
    /// <remarks/>
    public void RemoveCommentFromProjectAsync(int projectID, int commentID, object userState) {
        if ((this.RemoveCommentFromProjectOperationCompleted == null)) {
            this.RemoveCommentFromProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveCommentFromProjectOperationCompleted);
        }
        this.InvokeAsync("RemoveCommentFromProject", new object[] {
                    projectID,
                    commentID}, this.RemoveCommentFromProjectOperationCompleted, userState);
    }
    
    private void OnRemoveCommentFromProjectOperationCompleted(object arg) {
        if ((this.RemoveCommentFromProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveCommentFromProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAttachmentsForProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public AttachmentDTO[] RetrieveAttachmentsForProject(int projectID) {
        object[] results = this.Invoke("RetrieveAttachmentsForProject", new object[] {
                    projectID});
        return ((AttachmentDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAttachmentsForProject(int projectID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAttachmentsForProject", new object[] {
                    projectID}, callback, asyncState);
    }
    
    /// <remarks/>
    public AttachmentDTO[] EndRetrieveAttachmentsForProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((AttachmentDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAttachmentsForProjectAsync(int projectID) {
        this.RetrieveAttachmentsForProjectAsync(projectID, null);
    }
    
    /// <remarks/>
    public void RetrieveAttachmentsForProjectAsync(int projectID, object userState) {
        if ((this.RetrieveAttachmentsForProjectOperationCompleted == null)) {
            this.RetrieveAttachmentsForProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAttachmentsForProjectOperationCompleted);
        }
        this.InvokeAsync("RetrieveAttachmentsForProject", new object[] {
                    projectID}, this.RetrieveAttachmentsForProjectOperationCompleted, userState);
    }
    
    private void OnRetrieveAttachmentsForProjectOperationCompleted(object arg) {
        if ((this.RetrieveAttachmentsForProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAttachmentsForProjectCompleted(this, new RetrieveAttachmentsForProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveAttachmentFromProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveAttachmentFromProject(int projectID, int attachmentID) {
        this.Invoke("RemoveAttachmentFromProject", new object[] {
                    projectID,
                    attachmentID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveAttachmentFromProject(int projectID, int attachmentID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveAttachmentFromProject", new object[] {
                    projectID,
                    attachmentID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoveAttachmentFromProject(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoveAttachmentFromProjectAsync(int projectID, int attachmentID) {
        this.RemoveAttachmentFromProjectAsync(projectID, attachmentID, null);
    }
    
    /// <remarks/>
    public void RemoveAttachmentFromProjectAsync(int projectID, int attachmentID, object userState) {
        if ((this.RemoveAttachmentFromProjectOperationCompleted == null)) {
            this.RemoveAttachmentFromProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAttachmentFromProjectOperationCompleted);
        }
        this.InvokeAsync("RemoveAttachmentFromProject", new object[] {
                    projectID,
                    attachmentID}, this.RemoveAttachmentFromProjectOperationCompleted, userState);
    }
    
    private void OnRemoveAttachmentFromProjectOperationCompleted(object arg) {
        if ((this.RemoveAttachmentFromProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveAttachmentFromProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddAttachmentToProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int AddAttachmentToProject(int projectID, string fileName, string description) {
        object[] results = this.Invoke("AddAttachmentToProject", new object[] {
                    projectID,
                    fileName,
                    description});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddAttachmentToProject(int projectID, string fileName, string description, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddAttachmentToProject", new object[] {
                    projectID,
                    fileName,
                    description}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndAddAttachmentToProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void AddAttachmentToProjectAsync(int projectID, string fileName, string description) {
        this.AddAttachmentToProjectAsync(projectID, fileName, description, null);
    }
    
    /// <remarks/>
    public void AddAttachmentToProjectAsync(int projectID, string fileName, string description, object userState) {
        if ((this.AddAttachmentToProjectOperationCompleted == null)) {
            this.AddAttachmentToProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAttachmentToProjectOperationCompleted);
        }
        this.InvokeAsync("AddAttachmentToProject", new object[] {
                    projectID,
                    fileName,
                    description}, this.AddAttachmentToProjectOperationCompleted, userState);
    }
    
    private void OnAddAttachmentToProjectOperationCompleted(object arg) {
        if ((this.AddAttachmentToProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddAttachmentToProjectCompleted(this, new AddAttachmentToProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAttachedRequestsForProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RequestGeneralDTO[] RetrieveAttachedRequestsForProject(int projectID) {
        object[] results = this.Invoke("RetrieveAttachedRequestsForProject", new object[] {
                    projectID});
        return ((RequestGeneralDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAttachedRequestsForProject(int projectID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAttachedRequestsForProject", new object[] {
                    projectID}, callback, asyncState);
    }
    
    /// <remarks/>
    public RequestGeneralDTO[] EndRetrieveAttachedRequestsForProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((RequestGeneralDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAttachedRequestsForProjectAsync(int projectID) {
        this.RetrieveAttachedRequestsForProjectAsync(projectID, null);
    }
    
    /// <remarks/>
    public void RetrieveAttachedRequestsForProjectAsync(int projectID, object userState) {
        if ((this.RetrieveAttachedRequestsForProjectOperationCompleted == null)) {
            this.RetrieveAttachedRequestsForProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAttachedRequestsForProjectOperationCompleted);
        }
        this.InvokeAsync("RetrieveAttachedRequestsForProject", new object[] {
                    projectID}, this.RetrieveAttachedRequestsForProjectOperationCompleted, userState);
    }
    
    private void OnRetrieveAttachedRequestsForProjectOperationCompleted(object arg) {
        if ((this.RetrieveAttachedRequestsForProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAttachedRequestsForProjectCompleted(this, new RetrieveAttachedRequestsForProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddRequestGeneralToProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int AddRequestGeneralToProject(int projectID, RequestGeneralDTO requestGeneral) {
        object[] results = this.Invoke("AddRequestGeneralToProject", new object[] {
                    projectID,
                    requestGeneral});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddRequestGeneralToProject(int projectID, RequestGeneralDTO requestGeneral, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddRequestGeneralToProject", new object[] {
                    projectID,
                    requestGeneral}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndAddRequestGeneralToProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void AddRequestGeneralToProjectAsync(int projectID, RequestGeneralDTO requestGeneral) {
        this.AddRequestGeneralToProjectAsync(projectID, requestGeneral, null);
    }
    
    /// <remarks/>
    public void AddRequestGeneralToProjectAsync(int projectID, RequestGeneralDTO requestGeneral, object userState) {
        if ((this.AddRequestGeneralToProjectOperationCompleted == null)) {
            this.AddRequestGeneralToProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRequestGeneralToProjectOperationCompleted);
        }
        this.InvokeAsync("AddRequestGeneralToProject", new object[] {
                    projectID,
                    requestGeneral}, this.AddRequestGeneralToProjectOperationCompleted, userState);
    }
    
    private void OnAddRequestGeneralToProjectOperationCompleted(object arg) {
        if ((this.AddRequestGeneralToProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddRequestGeneralToProjectCompleted(this, new AddRequestGeneralToProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveRequestGeneralFromProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveRequestGeneralFromProject(int projectID, int requestGeneralID) {
        this.Invoke("RemoveRequestGeneralFromProject", new object[] {
                    projectID,
                    requestGeneralID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveRequestGeneralFromProject(int projectID, int requestGeneralID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveRequestGeneralFromProject", new object[] {
                    projectID,
                    requestGeneralID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoveRequestGeneralFromProject(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoveRequestGeneralFromProjectAsync(int projectID, int requestGeneralID) {
        this.RemoveRequestGeneralFromProjectAsync(projectID, requestGeneralID, null);
    }
    
    /// <remarks/>
    public void RemoveRequestGeneralFromProjectAsync(int projectID, int requestGeneralID, object userState) {
        if ((this.RemoveRequestGeneralFromProjectOperationCompleted == null)) {
            this.RemoveRequestGeneralFromProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveRequestGeneralFromProjectOperationCompleted);
        }
        this.InvokeAsync("RemoveRequestGeneralFromProject", new object[] {
                    projectID,
                    requestGeneralID}, this.RemoveRequestGeneralFromProjectOperationCompleted, userState);
    }
    
    private void OnRemoveRequestGeneralFromProjectOperationCompleted(object arg) {
        if ((this.RemoveRequestGeneralFromProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveRequestGeneralFromProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveReleasesForProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ReleaseDTO[] RetrieveReleasesForProject(int projectID) {
        object[] results = this.Invoke("RetrieveReleasesForProject", new object[] {
                    projectID});
        return ((ReleaseDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveReleasesForProject(int projectID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveReleasesForProject", new object[] {
                    projectID}, callback, asyncState);
    }
    
    /// <remarks/>
    public ReleaseDTO[] EndRetrieveReleasesForProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ReleaseDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveReleasesForProjectAsync(int projectID) {
        this.RetrieveReleasesForProjectAsync(projectID, null);
    }
    
    /// <remarks/>
    public void RetrieveReleasesForProjectAsync(int projectID, object userState) {
        if ((this.RetrieveReleasesForProjectOperationCompleted == null)) {
            this.RetrieveReleasesForProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveReleasesForProjectOperationCompleted);
        }
        this.InvokeAsync("RetrieveReleasesForProject", new object[] {
                    projectID}, this.RetrieveReleasesForProjectOperationCompleted, userState);
    }
    
    private void OnRetrieveReleasesForProjectOperationCompleted(object arg) {
        if ((this.RetrieveReleasesForProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveReleasesForProjectCompleted(this, new RetrieveReleasesForProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddReleaseToProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int AddReleaseToProject(int projectID, ReleaseDTO release) {
        object[] results = this.Invoke("AddReleaseToProject", new object[] {
                    projectID,
                    release});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddReleaseToProject(int projectID, ReleaseDTO release, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddReleaseToProject", new object[] {
                    projectID,
                    release}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndAddReleaseToProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void AddReleaseToProjectAsync(int projectID, ReleaseDTO release) {
        this.AddReleaseToProjectAsync(projectID, release, null);
    }
    
    /// <remarks/>
    public void AddReleaseToProjectAsync(int projectID, ReleaseDTO release, object userState) {
        if ((this.AddReleaseToProjectOperationCompleted == null)) {
            this.AddReleaseToProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddReleaseToProjectOperationCompleted);
        }
        this.InvokeAsync("AddReleaseToProject", new object[] {
                    projectID,
                    release}, this.AddReleaseToProjectOperationCompleted, userState);
    }
    
    private void OnAddReleaseToProjectOperationCompleted(object arg) {
        if ((this.AddReleaseToProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddReleaseToProjectCompleted(this, new AddReleaseToProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveReleaseFromProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveReleaseFromProject(int projectID, int generalID) {
        this.Invoke("RemoveReleaseFromProject", new object[] {
                    projectID,
                    generalID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveReleaseFromProject(int projectID, int generalID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveReleaseFromProject", new object[] {
                    projectID,
                    generalID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoveReleaseFromProject(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoveReleaseFromProjectAsync(int projectID, int generalID) {
        this.RemoveReleaseFromProjectAsync(projectID, generalID, null);
    }
    
    /// <remarks/>
    public void RemoveReleaseFromProjectAsync(int projectID, int generalID, object userState) {
        if ((this.RemoveReleaseFromProjectOperationCompleted == null)) {
            this.RemoveReleaseFromProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveReleaseFromProjectOperationCompleted);
        }
        this.InvokeAsync("RemoveReleaseFromProject", new object[] {
                    projectID,
                    generalID}, this.RemoveReleaseFromProjectOperationCompleted, userState);
    }
    
    private void OnRemoveReleaseFromProjectOperationCompleted(object arg) {
        if ((this.RemoveReleaseFromProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveReleaseFromProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveProjectMembersForProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ProjectMemberDTO[] RetrieveProjectMembersForProject(int projectID) {
        object[] results = this.Invoke("RetrieveProjectMembersForProject", new object[] {
                    projectID});
        return ((ProjectMemberDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveProjectMembersForProject(int projectID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveProjectMembersForProject", new object[] {
                    projectID}, callback, asyncState);
    }
    
    /// <remarks/>
    public ProjectMemberDTO[] EndRetrieveProjectMembersForProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ProjectMemberDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveProjectMembersForProjectAsync(int projectID) {
        this.RetrieveProjectMembersForProjectAsync(projectID, null);
    }
    
    /// <remarks/>
    public void RetrieveProjectMembersForProjectAsync(int projectID, object userState) {
        if ((this.RetrieveProjectMembersForProjectOperationCompleted == null)) {
            this.RetrieveProjectMembersForProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveProjectMembersForProjectOperationCompleted);
        }
        this.InvokeAsync("RetrieveProjectMembersForProject", new object[] {
                    projectID}, this.RetrieveProjectMembersForProjectOperationCompleted, userState);
    }
    
    private void OnRetrieveProjectMembersForProjectOperationCompleted(object arg) {
        if ((this.RetrieveProjectMembersForProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveProjectMembersForProjectCompleted(this, new RetrieveProjectMembersForProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddProjectMemberToProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int AddProjectMemberToProject(int projectID, ProjectMemberDTO projectMember) {
        object[] results = this.Invoke("AddProjectMemberToProject", new object[] {
                    projectID,
                    projectMember});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddProjectMemberToProject(int projectID, ProjectMemberDTO projectMember, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddProjectMemberToProject", new object[] {
                    projectID,
                    projectMember}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndAddProjectMemberToProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void AddProjectMemberToProjectAsync(int projectID, ProjectMemberDTO projectMember) {
        this.AddProjectMemberToProjectAsync(projectID, projectMember, null);
    }
    
    /// <remarks/>
    public void AddProjectMemberToProjectAsync(int projectID, ProjectMemberDTO projectMember, object userState) {
        if ((this.AddProjectMemberToProjectOperationCompleted == null)) {
            this.AddProjectMemberToProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProjectMemberToProjectOperationCompleted);
        }
        this.InvokeAsync("AddProjectMemberToProject", new object[] {
                    projectID,
                    projectMember}, this.AddProjectMemberToProjectOperationCompleted, userState);
    }
    
    private void OnAddProjectMemberToProjectOperationCompleted(object arg) {
        if ((this.AddProjectMemberToProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddProjectMemberToProjectCompleted(this, new AddProjectMemberToProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveProjectMemberFromProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveProjectMemberFromProject(int projectID, int projectMemberID) {
        this.Invoke("RemoveProjectMemberFromProject", new object[] {
                    projectID,
                    projectMemberID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveProjectMemberFromProject(int projectID, int projectMemberID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveProjectMemberFromProject", new object[] {
                    projectID,
                    projectMemberID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoveProjectMemberFromProject(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoveProjectMemberFromProjectAsync(int projectID, int projectMemberID) {
        this.RemoveProjectMemberFromProjectAsync(projectID, projectMemberID, null);
    }
    
    /// <remarks/>
    public void RemoveProjectMemberFromProjectAsync(int projectID, int projectMemberID, object userState) {
        if ((this.RemoveProjectMemberFromProjectOperationCompleted == null)) {
            this.RemoveProjectMemberFromProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveProjectMemberFromProjectOperationCompleted);
        }
        this.InvokeAsync("RemoveProjectMemberFromProject", new object[] {
                    projectID,
                    projectMemberID}, this.RemoveProjectMemberFromProjectOperationCompleted, userState);
    }
    
    private void OnRemoveProjectMemberFromProjectOperationCompleted(object arg) {
        if ((this.RemoveProjectMemberFromProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveProjectMemberFromProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/GetByID", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ProjectDTO GetByID(int id) {
        object[] results = this.Invoke("GetByID", new object[] {
                    id});
        return ((ProjectDTO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetByID(int id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetByID", new object[] {
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public ProjectDTO EndGetByID(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ProjectDTO)(results[0]));
    }
    
    /// <remarks/>
    public void GetByIDAsync(int id) {
        this.GetByIDAsync(id, null);
    }
    
    /// <remarks/>
    public void GetByIDAsync(int id, object userState) {
        if ((this.GetByIDOperationCompleted == null)) {
            this.GetByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByIDOperationCompleted);
        }
        this.InvokeAsync("GetByID", new object[] {
                    id}, this.GetByIDOperationCompleted, userState);
    }
    
    private void OnGetByIDOperationCompleted(object arg) {
        if ((this.GetByIDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetByIDCompleted(this, new GetByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/Create", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int Create(ProjectDTO entity) {
        object[] results = this.Invoke("Create", new object[] {
                    entity});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreate(ProjectDTO entity, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Create", new object[] {
                    entity}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndCreate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void CreateAsync(ProjectDTO entity) {
        this.CreateAsync(entity, null);
    }
    
    /// <remarks/>
    public void CreateAsync(ProjectDTO entity, object userState) {
        if ((this.CreateOperationCompleted == null)) {
            this.CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperationCompleted);
        }
        this.InvokeAsync("Create", new object[] {
                    entity}, this.CreateOperationCompleted, userState);
    }
    
    private void OnCreateOperationCompleted(object arg) {
        if ((this.CreateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/Update", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void Update(ProjectDTO entity) {
        this.Invoke("Update", new object[] {
                    entity});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdate(ProjectDTO entity, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Update", new object[] {
                    entity}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdate(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateAsync(ProjectDTO entity) {
        this.UpdateAsync(entity, null);
    }
    
    /// <remarks/>
    public void UpdateAsync(ProjectDTO entity, object userState) {
        if ((this.UpdateOperationCompleted == null)) {
            this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
        }
        this.InvokeAsync("Update", new object[] {
                    entity}, this.UpdateOperationCompleted, userState);
    }
    
    private void OnUpdateOperationCompleted(object arg) {
        if ((this.UpdateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/Delete", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void Delete(int id) {
        this.Invoke("Delete", new object[] {
                    id});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDelete(int id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Delete", new object[] {
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDelete(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteAsync(int id) {
        this.DeleteAsync(id, null);
    }
    
    /// <remarks/>
    public void DeleteAsync(int id, object userState) {
        if ((this.DeleteOperationCompleted == null)) {
            this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
        }
        this.InvokeAsync("Delete", new object[] {
                    id}, this.DeleteOperationCompleted, userState);
    }
    
    private void OnDeleteOperationCompleted(object arg) {
        if ((this.DeleteCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAll", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ProjectDTO[] RetrieveAll() {
        object[] results = this.Invoke("RetrieveAll", new object[0]);
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAll(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAll", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public ProjectDTO[] EndRetrieveAll(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAllAsync() {
        this.RetrieveAllAsync(null);
    }
    
    /// <remarks/>
    public void RetrieveAllAsync(object userState) {
        if ((this.RetrieveAllOperationCompleted == null)) {
            this.RetrieveAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllOperationCompleted);
        }
        this.InvokeAsync("RetrieveAll", new object[0], this.RetrieveAllOperationCompleted, userState);
    }
    
    private void OnRetrieveAllOperationCompleted(object arg) {
        if ((this.RetrieveAllCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAllCompleted(this, new RetrieveAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/Retrieve", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ProjectDTO[] Retrieve(string hql, object[] parameters) {
        object[] results = this.Invoke("Retrieve", new object[] {
                    hql,
                    parameters});
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieve(string hql, object[] parameters, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Retrieve", new object[] {
                    hql,
                    parameters}, callback, asyncState);
    }
    
    /// <remarks/>
    public ProjectDTO[] EndRetrieve(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAsync(string hql, object[] parameters) {
        this.RetrieveAsync(hql, parameters, null);
    }
    
    /// <remarks/>
    public void RetrieveAsync(string hql, object[] parameters, object userState) {
        if ((this.RetrieveOperationCompleted == null)) {
            this.RetrieveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveOperationCompleted);
        }
        this.InvokeAsync("Retrieve", new object[] {
                    hql,
                    parameters}, this.RetrieveOperationCompleted, userState);
    }
    
    private void OnRetrieveOperationCompleted(object arg) {
        if ((this.RetrieveCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveCompleted(this, new RetrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/GetIDs", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int[] GetIDs(string hql, object[] parameters) {
        object[] results = this.Invoke("GetIDs", new object[] {
                    hql,
                    parameters});
        return ((int[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetIDs(string hql, object[] parameters, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetIDs", new object[] {
                    hql,
                    parameters}, callback, asyncState);
    }
    
    /// <remarks/>
    public int[] EndGetIDs(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int[])(results[0]));
    }
    
    /// <remarks/>
    public void GetIDsAsync(string hql, object[] parameters) {
        this.GetIDsAsync(hql, parameters, null);
    }
    
    /// <remarks/>
    public void GetIDsAsync(string hql, object[] parameters, object userState) {
        if ((this.GetIDsOperationCompleted == null)) {
            this.GetIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIDsOperationCompleted);
        }
        this.InvokeAsync("GetIDs", new object[] {
                    hql,
                    parameters}, this.GetIDsOperationCompleted, userState);
    }
    
    private void OnGetIDsOperationCompleted(object arg) {
        if ((this.GetIDsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetIDsCompleted(this, new GetIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrievePage", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ProjectDTO[] RetrievePage(string hql, int page, int pageSize, object[] parameters) {
        object[] results = this.Invoke("RetrievePage", new object[] {
                    hql,
                    page,
                    pageSize,
                    parameters});
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrievePage(string hql, int page, int pageSize, object[] parameters, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrievePage", new object[] {
                    hql,
                    page,
                    pageSize,
                    parameters}, callback, asyncState);
    }
    
    /// <remarks/>
    public ProjectDTO[] EndRetrievePage(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ProjectDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrievePageAsync(string hql, int page, int pageSize, object[] parameters) {
        this.RetrievePageAsync(hql, page, pageSize, parameters, null);
    }
    
    /// <remarks/>
    public void RetrievePageAsync(string hql, int page, int pageSize, object[] parameters, object userState) {
        if ((this.RetrievePageOperationCompleted == null)) {
            this.RetrievePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrievePageOperationCompleted);
        }
        this.InvokeAsync("RetrievePage", new object[] {
                    hql,
                    page,
                    pageSize,
                    parameters}, this.RetrievePageOperationCompleted, userState);
    }
    
    private void OnRetrievePageOperationCompleted(object arg) {
        if ((this.RetrievePageCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrievePageCompleted(this, new RetrievePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveCount", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int RetrieveCount(string hql, object[] parameters) {
        object[] results = this.Invoke("RetrieveCount", new object[] {
                    hql,
                    parameters});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveCount(string hql, object[] parameters, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveCount", new object[] {
                    hql,
                    parameters}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndRetrieveCount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveCountAsync(string hql, object[] parameters) {
        this.RetrieveCountAsync(hql, parameters, null);
    }
    
    /// <remarks/>
    public void RetrieveCountAsync(string hql, object[] parameters, object userState) {
        if ((this.RetrieveCountOperationCompleted == null)) {
            this.RetrieveCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCountOperationCompleted);
        }
        this.InvokeAsync("RetrieveCount", new object[] {
                    hql,
                    parameters}, this.RetrieveCountOperationCompleted, userState);
    }
    
    private void OnRetrieveCountOperationCompleted(object arg) {
        if ((this.RetrieveCountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveCountCompleted(this, new RetrieveCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public partial class ProjectDTO : DataTransferObject {
    
    private System.Nullable<int> projectIDField;
    
    private string nameField;
    
    private string descriptionField;
    
    private System.Nullable<System.DateTime> startDateField;
    
    private System.Nullable<System.DateTime> endDateField;
    
    private System.Nullable<System.DateTime> createDateField;
    
    private System.Nullable<System.DateTime> modifyDateField;
    
    private System.Nullable<System.DateTime> lastCommentDateField;
    
    private System.Nullable<double> numericPriorityField;
    
    private string customField1Field;
    
    private string customField2Field;
    
    private string customField3Field;
    
    private string customField4Field;
    
    private string customField5Field;
    
    private string customField6Field;
    
    private string customField7Field;
    
    private string customField8Field;
    
    private string customField9Field;
    
    private string customField10Field;
    
    private string customField11Field;
    
    private string customField12Field;
    
    private string customField13Field;
    
    private string customField14Field;
    
    private string customField15Field;
    
    private System.Nullable<bool> isActiveField;
    
    private System.Nullable<System.DateTime> deleteDateField;
    
    private System.Nullable<SourceControlTypeEnum> sourceControlTypeField;
    
    private string sCConnectionStringField;
    
    private string sCUserField;
    
    private string sCPasswordField;
    
    private System.Nullable<int> sCStartingRevisionField;
    
    private System.Nullable<bool> isProductField;
    
    private System.Nullable<bool> inboundMailCreateRequestsField;
    
    private System.Nullable<int> inboundMailAutomaticalEmailCheckTimeField;
    
    private System.Nullable<bool> isInboundMailEnabledField;
    
    private string inboundMailReplyAddressField;
    
    private System.Nullable<bool> inboundMailAutoCheckField;
    
    private string inboundMailServerField;
    
    private System.Nullable<int> inboundMailPortField;
    
    private System.Nullable<bool> inboundMailUseSSLField;
    
    private string inboundMailLoginField;
    
    private string inboundMailPasswordField;
    
    private string inboundMailProtocolField;
    
    private System.Nullable<int> lastCommentUserIDField;
    
    private System.Nullable<int> parentProjectIDField;
    
    private System.Nullable<int> ownerIDField;
    
    private System.Nullable<int> lastEditorIDField;
    
    private System.Nullable<int> programOfProjectIDField;
    
    private System.Nullable<int> processIDField;
    
    private System.Nullable<int> companyIDField;
    
    private string parentProjectNameField;
    
    private string entityTypeNameField;
    
    private string programOfProjectNameField;
    
    private string processNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ProjectID {
        get {
            return this.projectIDField;
        }
        set {
            this.projectIDField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> StartDate {
        get {
            return this.startDateField;
        }
        set {
            this.startDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> EndDate {
        get {
            return this.endDateField;
        }
        set {
            this.endDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> CreateDate {
        get {
            return this.createDateField;
        }
        set {
            this.createDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> ModifyDate {
        get {
            return this.modifyDateField;
        }
        set {
            this.modifyDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> LastCommentDate {
        get {
            return this.lastCommentDateField;
        }
        set {
            this.lastCommentDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<double> NumericPriority {
        get {
            return this.numericPriorityField;
        }
        set {
            this.numericPriorityField = value;
        }
    }
    
    /// <remarks/>
    public string CustomField1 {
        get {
            return this.customField1Field;
        }
        set {
            this.customField1Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField2 {
        get {
            return this.customField2Field;
        }
        set {
            this.customField2Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField3 {
        get {
            return this.customField3Field;
        }
        set {
            this.customField3Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField4 {
        get {
            return this.customField4Field;
        }
        set {
            this.customField4Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField5 {
        get {
            return this.customField5Field;
        }
        set {
            this.customField5Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField6 {
        get {
            return this.customField6Field;
        }
        set {
            this.customField6Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField7 {
        get {
            return this.customField7Field;
        }
        set {
            this.customField7Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField8 {
        get {
            return this.customField8Field;
        }
        set {
            this.customField8Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField9 {
        get {
            return this.customField9Field;
        }
        set {
            this.customField9Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField10 {
        get {
            return this.customField10Field;
        }
        set {
            this.customField10Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField11 {
        get {
            return this.customField11Field;
        }
        set {
            this.customField11Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField12 {
        get {
            return this.customField12Field;
        }
        set {
            this.customField12Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField13 {
        get {
            return this.customField13Field;
        }
        set {
            this.customField13Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField14 {
        get {
            return this.customField14Field;
        }
        set {
            this.customField14Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField15 {
        get {
            return this.customField15Field;
        }
        set {
            this.customField15Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<bool> IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> DeleteDate {
        get {
            return this.deleteDateField;
        }
        set {
            this.deleteDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<SourceControlTypeEnum> SourceControlType {
        get {
            return this.sourceControlTypeField;
        }
        set {
            this.sourceControlTypeField = value;
        }
    }
    
    /// <remarks/>
    public string SCConnectionString {
        get {
            return this.sCConnectionStringField;
        }
        set {
            this.sCConnectionStringField = value;
        }
    }
    
    /// <remarks/>
    public string SCUser {
        get {
            return this.sCUserField;
        }
        set {
            this.sCUserField = value;
        }
    }
    
    /// <remarks/>
    public string SCPassword {
        get {
            return this.sCPasswordField;
        }
        set {
            this.sCPasswordField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> SCStartingRevision {
        get {
            return this.sCStartingRevisionField;
        }
        set {
            this.sCStartingRevisionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<bool> IsProduct {
        get {
            return this.isProductField;
        }
        set {
            this.isProductField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<bool> InboundMailCreateRequests {
        get {
            return this.inboundMailCreateRequestsField;
        }
        set {
            this.inboundMailCreateRequestsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> InboundMailAutomaticalEmailCheckTime {
        get {
            return this.inboundMailAutomaticalEmailCheckTimeField;
        }
        set {
            this.inboundMailAutomaticalEmailCheckTimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<bool> IsInboundMailEnabled {
        get {
            return this.isInboundMailEnabledField;
        }
        set {
            this.isInboundMailEnabledField = value;
        }
    }
    
    /// <remarks/>
    public string InboundMailReplyAddress {
        get {
            return this.inboundMailReplyAddressField;
        }
        set {
            this.inboundMailReplyAddressField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<bool> InboundMailAutoCheck {
        get {
            return this.inboundMailAutoCheckField;
        }
        set {
            this.inboundMailAutoCheckField = value;
        }
    }
    
    /// <remarks/>
    public string InboundMailServer {
        get {
            return this.inboundMailServerField;
        }
        set {
            this.inboundMailServerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> InboundMailPort {
        get {
            return this.inboundMailPortField;
        }
        set {
            this.inboundMailPortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<bool> InboundMailUseSSL {
        get {
            return this.inboundMailUseSSLField;
        }
        set {
            this.inboundMailUseSSLField = value;
        }
    }
    
    /// <remarks/>
    public string InboundMailLogin {
        get {
            return this.inboundMailLoginField;
        }
        set {
            this.inboundMailLoginField = value;
        }
    }
    
    /// <remarks/>
    public string InboundMailPassword {
        get {
            return this.inboundMailPasswordField;
        }
        set {
            this.inboundMailPasswordField = value;
        }
    }
    
    /// <remarks/>
    public string InboundMailProtocol {
        get {
            return this.inboundMailProtocolField;
        }
        set {
            this.inboundMailProtocolField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> LastCommentUserID {
        get {
            return this.lastCommentUserIDField;
        }
        set {
            this.lastCommentUserIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ParentProjectID {
        get {
            return this.parentProjectIDField;
        }
        set {
            this.parentProjectIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> OwnerID {
        get {
            return this.ownerIDField;
        }
        set {
            this.ownerIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> LastEditorID {
        get {
            return this.lastEditorIDField;
        }
        set {
            this.lastEditorIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ProgramOfProjectID {
        get {
            return this.programOfProjectIDField;
        }
        set {
            this.programOfProjectIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ProcessID {
        get {
            return this.processIDField;
        }
        set {
            this.processIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> CompanyID {
        get {
            return this.companyIDField;
        }
        set {
            this.companyIDField = value;
        }
    }
    
    /// <remarks/>
    public string ParentProjectName {
        get {
            return this.parentProjectNameField;
        }
        set {
            this.parentProjectNameField = value;
        }
    }
    
    /// <remarks/>
    public string EntityTypeName {
        get {
            return this.entityTypeNameField;
        }
        set {
            this.entityTypeNameField = value;
        }
    }
    
    /// <remarks/>
    public string ProgramOfProjectName {
        get {
            return this.programOfProjectNameField;
        }
        set {
            this.programOfProjectNameField = value;
        }
    }
    
    /// <remarks/>
    public string ProcessName {
        get {
            return this.processNameField;
        }
        set {
            this.processNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public enum SourceControlTypeEnum {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    Subversion,
    
    /// <remarks/>
    SourceSafe,
    
    /// <remarks/>
    Perforce,
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectMemberDTO))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ReleaseDTO))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RequestGeneralDTO))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AttachmentDTO))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CommentDTO))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectDTO))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public abstract partial class DataTransferObject {
    
    private System.Nullable<int> idField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ID {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public partial class ProjectMemberDTO : DataTransferObject {
    
    private System.Nullable<int> projectMemberIDField;
    
    private System.Nullable<decimal> weeklyAvailableHoursField;
    
    private System.Nullable<System.DateTime> membershipEndDateField;
    
    private System.Nullable<int> allocationField;
    
    private System.Nullable<int> projectIDField;
    
    private System.Nullable<int> userIDField;
    
    private System.Nullable<int> roleIDField;
    
    private string projectNameField;
    
    private string roleNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ProjectMemberID {
        get {
            return this.projectMemberIDField;
        }
        set {
            this.projectMemberIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> WeeklyAvailableHours {
        get {
            return this.weeklyAvailableHoursField;
        }
        set {
            this.weeklyAvailableHoursField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> MembershipEndDate {
        get {
            return this.membershipEndDateField;
        }
        set {
            this.membershipEndDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> Allocation {
        get {
            return this.allocationField;
        }
        set {
            this.allocationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ProjectID {
        get {
            return this.projectIDField;
        }
        set {
            this.projectIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> UserID {
        get {
            return this.userIDField;
        }
        set {
            this.userIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> RoleID {
        get {
            return this.roleIDField;
        }
        set {
            this.roleIDField = value;
        }
    }
    
    /// <remarks/>
    public string ProjectName {
        get {
            return this.projectNameField;
        }
        set {
            this.projectNameField = value;
        }
    }
    
    /// <remarks/>
    public string RoleName {
        get {
            return this.roleNameField;
        }
        set {
            this.roleNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public partial class ReleaseDTO : DataTransferObject {
    
    private System.Nullable<int> releaseIDField;
    
    private string nameField;
    
    private string descriptionField;
    
    private System.Nullable<System.DateTime> startDateField;
    
    private System.Nullable<System.DateTime> endDateField;
    
    private System.Nullable<System.DateTime> createDateField;
    
    private System.Nullable<System.DateTime> modifyDateField;
    
    private System.Nullable<System.DateTime> lastCommentDateField;
    
    private System.Nullable<double> numericPriorityField;
    
    private string customField1Field;
    
    private string customField2Field;
    
    private string customField3Field;
    
    private string customField4Field;
    
    private string customField5Field;
    
    private string customField6Field;
    
    private string customField7Field;
    
    private string customField8Field;
    
    private string customField9Field;
    
    private string customField10Field;
    
    private string customField11Field;
    
    private string customField12Field;
    
    private string customField13Field;
    
    private string customField14Field;
    
    private string customField15Field;
    
    private System.Nullable<int> lastCommentUserIDField;
    
    private System.Nullable<int> ownerIDField;
    
    private System.Nullable<int> lastEditorIDField;
    
    private System.Nullable<int> projectIDField;
    
    private string entityTypeNameField;
    
    private string projectNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ReleaseID {
        get {
            return this.releaseIDField;
        }
        set {
            this.releaseIDField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> StartDate {
        get {
            return this.startDateField;
        }
        set {
            this.startDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> EndDate {
        get {
            return this.endDateField;
        }
        set {
            this.endDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> CreateDate {
        get {
            return this.createDateField;
        }
        set {
            this.createDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> ModifyDate {
        get {
            return this.modifyDateField;
        }
        set {
            this.modifyDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> LastCommentDate {
        get {
            return this.lastCommentDateField;
        }
        set {
            this.lastCommentDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<double> NumericPriority {
        get {
            return this.numericPriorityField;
        }
        set {
            this.numericPriorityField = value;
        }
    }
    
    /// <remarks/>
    public string CustomField1 {
        get {
            return this.customField1Field;
        }
        set {
            this.customField1Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField2 {
        get {
            return this.customField2Field;
        }
        set {
            this.customField2Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField3 {
        get {
            return this.customField3Field;
        }
        set {
            this.customField3Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField4 {
        get {
            return this.customField4Field;
        }
        set {
            this.customField4Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField5 {
        get {
            return this.customField5Field;
        }
        set {
            this.customField5Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField6 {
        get {
            return this.customField6Field;
        }
        set {
            this.customField6Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField7 {
        get {
            return this.customField7Field;
        }
        set {
            this.customField7Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField8 {
        get {
            return this.customField8Field;
        }
        set {
            this.customField8Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField9 {
        get {
            return this.customField9Field;
        }
        set {
            this.customField9Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField10 {
        get {
            return this.customField10Field;
        }
        set {
            this.customField10Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField11 {
        get {
            return this.customField11Field;
        }
        set {
            this.customField11Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField12 {
        get {
            return this.customField12Field;
        }
        set {
            this.customField12Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField13 {
        get {
            return this.customField13Field;
        }
        set {
            this.customField13Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField14 {
        get {
            return this.customField14Field;
        }
        set {
            this.customField14Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField15 {
        get {
            return this.customField15Field;
        }
        set {
            this.customField15Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> LastCommentUserID {
        get {
            return this.lastCommentUserIDField;
        }
        set {
            this.lastCommentUserIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> OwnerID {
        get {
            return this.ownerIDField;
        }
        set {
            this.ownerIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> LastEditorID {
        get {
            return this.lastEditorIDField;
        }
        set {
            this.lastEditorIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ProjectID {
        get {
            return this.projectIDField;
        }
        set {
            this.projectIDField = value;
        }
    }
    
    /// <remarks/>
    public string EntityTypeName {
        get {
            return this.entityTypeNameField;
        }
        set {
            this.entityTypeNameField = value;
        }
    }
    
    /// <remarks/>
    public string ProjectName {
        get {
            return this.projectNameField;
        }
        set {
            this.projectNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public partial class RequestGeneralDTO : DataTransferObject {
    
    private System.Nullable<int> requestGeneralIDField;
    
    private System.Nullable<System.DateTime> createDateField;
    
    private System.Nullable<bool> isAttachedField;
    
    private System.Nullable<int> generalIDField;
    
    private System.Nullable<int> requestIDField;
    
    private string generalNameField;
    
    private string requestNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> RequestGeneralID {
        get {
            return this.requestGeneralIDField;
        }
        set {
            this.requestGeneralIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> CreateDate {
        get {
            return this.createDateField;
        }
        set {
            this.createDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<bool> IsAttached {
        get {
            return this.isAttachedField;
        }
        set {
            this.isAttachedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> GeneralID {
        get {
            return this.generalIDField;
        }
        set {
            this.generalIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> RequestID {
        get {
            return this.requestIDField;
        }
        set {
            this.requestIDField = value;
        }
    }
    
    /// <remarks/>
    public string GeneralName {
        get {
            return this.generalNameField;
        }
        set {
            this.generalNameField = value;
        }
    }
    
    /// <remarks/>
    public string RequestName {
        get {
            return this.requestNameField;
        }
        set {
            this.requestNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public partial class AttachmentDTO : DataTransferObject {
    
    private System.Nullable<long> fileSizeField;
    
    private System.Nullable<int> attachmentIDField;
    
    private string originalFileNameField;
    
    private string uniqueFileNameField;
    
    private System.Nullable<System.DateTime> createDateField;
    
    private string descriptionField;
    
    private System.Nullable<int> generalIDField;
    
    private System.Nullable<int> messageIDField;
    
    private System.Nullable<int> ownerIDField;
    
    private System.Nullable<int> attachmentFileIDField;
    
    private string generalNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<long> FileSize {
        get {
            return this.fileSizeField;
        }
        set {
            this.fileSizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> AttachmentID {
        get {
            return this.attachmentIDField;
        }
        set {
            this.attachmentIDField = value;
        }
    }
    
    /// <remarks/>
    public string OriginalFileName {
        get {
            return this.originalFileNameField;
        }
        set {
            this.originalFileNameField = value;
        }
    }
    
    /// <remarks/>
    public string UniqueFileName {
        get {
            return this.uniqueFileNameField;
        }
        set {
            this.uniqueFileNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> CreateDate {
        get {
            return this.createDateField;
        }
        set {
            this.createDateField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> GeneralID {
        get {
            return this.generalIDField;
        }
        set {
            this.generalIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> MessageID {
        get {
            return this.messageIDField;
        }
        set {
            this.messageIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> OwnerID {
        get {
            return this.ownerIDField;
        }
        set {
            this.ownerIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> AttachmentFileID {
        get {
            return this.attachmentFileIDField;
        }
        set {
            this.attachmentFileIDField = value;
        }
    }
    
    /// <remarks/>
    public string GeneralName {
        get {
            return this.generalNameField;
        }
        set {
            this.generalNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public partial class CommentDTO : DataTransferObject {
    
    private System.Nullable<int> commentIDField;
    
    private string descriptionField;
    
    private System.Nullable<System.DateTime> createDateField;
    
    private System.Nullable<int> generalIDField;
    
    private System.Nullable<int> ownerIDField;
    
    private System.Nullable<int> parentIDField;
    
    private string generalNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> CommentID {
        get {
            return this.commentIDField;
        }
        set {
            this.commentIDField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> CreateDate {
        get {
            return this.createDateField;
        }
        set {
            this.createDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> GeneralID {
        get {
            return this.generalIDField;
        }
        set {
            this.generalIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> OwnerID {
        get {
            return this.ownerIDField;
        }
        set {
            this.ownerIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ParentID {
        get {
            return this.parentIDField;
        }
        set {
            this.parentIDField = value;
        }
    }
    
    /// <remarks/>
    public string GeneralName {
        get {
            return this.generalNameField;
        }
        set {
            this.generalNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAllForLastCommentUserCompletedEventHandler(object sender, RetrieveAllForLastCommentUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAllForLastCommentUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAllForLastCommentUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ProjectDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ProjectDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAllForProjectCompletedEventHandler(object sender, RetrieveAllForProjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAllForProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAllForProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ProjectDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ProjectDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAllForOwnerCompletedEventHandler(object sender, RetrieveAllForOwnerCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAllForOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAllForOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ProjectDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ProjectDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAllForProgramOfProjectCompletedEventHandler(object sender, RetrieveAllForProgramOfProjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAllForProgramOfProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAllForProgramOfProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ProjectDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ProjectDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAllForProcessCompletedEventHandler(object sender, RetrieveAllForProcessCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAllForProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAllForProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ProjectDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ProjectDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAllForCompanyCompletedEventHandler(object sender, RetrieveAllForCompanyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAllForCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAllForCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ProjectDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ProjectDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveCommentsForProjectCompletedEventHandler(object sender, RetrieveCommentsForProjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveCommentsForProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveCommentsForProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CommentDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CommentDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void AddCommentToProjectCompletedEventHandler(object sender, AddCommentToProjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddCommentToProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddCommentToProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RemoveCommentFromProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAttachmentsForProjectCompletedEventHandler(object sender, RetrieveAttachmentsForProjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAttachmentsForProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAttachmentsForProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public AttachmentDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((AttachmentDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RemoveAttachmentFromProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void AddAttachmentToProjectCompletedEventHandler(object sender, AddAttachmentToProjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddAttachmentToProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddAttachmentToProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAttachedRequestsForProjectCompletedEventHandler(object sender, RetrieveAttachedRequestsForProjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAttachedRequestsForProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAttachedRequestsForProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public RequestGeneralDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((RequestGeneralDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void AddRequestGeneralToProjectCompletedEventHandler(object sender, AddRequestGeneralToProjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddRequestGeneralToProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddRequestGeneralToProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RemoveRequestGeneralFromProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveReleasesForProjectCompletedEventHandler(object sender, RetrieveReleasesForProjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveReleasesForProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveReleasesForProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ReleaseDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ReleaseDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void AddReleaseToProjectCompletedEventHandler(object sender, AddReleaseToProjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddReleaseToProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddReleaseToProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RemoveReleaseFromProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveProjectMembersForProjectCompletedEventHandler(object sender, RetrieveProjectMembersForProjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveProjectMembersForProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveProjectMembersForProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ProjectMemberDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ProjectMemberDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void AddProjectMemberToProjectCompletedEventHandler(object sender, AddProjectMemberToProjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddProjectMemberToProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddProjectMemberToProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RemoveProjectMemberFromProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void GetByIDCompletedEventHandler(object sender, GetByIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ProjectDTO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ProjectDTO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void DeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAllCompletedEventHandler(object sender, RetrieveAllCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ProjectDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ProjectDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveCompletedEventHandler(object sender, RetrieveCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ProjectDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ProjectDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void GetIDsCompletedEventHandler(object sender, GetIDsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrievePageCompletedEventHandler(object sender, RetrievePageCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrievePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrievePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ProjectDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ProjectDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveCountCompletedEventHandler(object sender, RetrieveCountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}
}