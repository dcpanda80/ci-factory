//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 

namespace CIFactory.TargetProcess.Common.UserStoryWebService
{

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="UserStoryServiceSoap", Namespace="http://targetprocess.com")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTransferObject))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
public partial class UserStoryService : Microsoft.Web.Services3.WebServicesClientProtocol {
    
    private System.Threading.SendOrPostCallback RetrieveAllForLastCommentUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAllForProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAllForOwnerOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAllForEntityStateOperationCompleted;
    
    private System.Threading.SendOrPostCallback ChangeStateOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAllForPriorityOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPrioritiesOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAllForIterationOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAllForReleaseOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAllForFeatureOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveCommentsForUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddCommentToUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback RemoveCommentFromUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAttachmentsForUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback RemoveAttachmentFromUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddAttachmentToUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAttachedRequestsForUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddRequestGeneralToUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback RemoveRequestGeneralFromUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveTeamsForUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddTeamToUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback AssignUserAsActorOperationCompleted;
    
    private System.Threading.SendOrPostCallback AssignUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback AssignUserByEmailOrLoginAsActorOperationCompleted;
    
    private System.Threading.SendOrPostCallback AssignUserByEmailOrLoginOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveOpenForUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveOpenForMeOperationCompleted;
    
    private System.Threading.SendOrPostCallback RemoveTeamFromUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveActorEffortsForUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback ChangeEffortOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveRevisionAssignablesForUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddRevisionAssignableToUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback RemoveRevisionAssignableFromUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveTasksForUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddTaskToUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback RemoveTaskFromUserStoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetByIDOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveAllOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetIDsOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrievePageOperationCompleted;
    
    private System.Threading.SendOrPostCallback RetrieveCountOperationCompleted;
    
    /// <remarks/>
    public UserStoryService() {
        this.Url = "http://ch33tp.agilexhealth.com/Services/UserStoryService.asmx";
    }
    
    /// <remarks/>
    public event RetrieveAllForLastCommentUserCompletedEventHandler RetrieveAllForLastCommentUserCompleted;
    
    /// <remarks/>
    public event RetrieveAllForProjectCompletedEventHandler RetrieveAllForProjectCompleted;
    
    /// <remarks/>
    public event RetrieveAllForOwnerCompletedEventHandler RetrieveAllForOwnerCompleted;
    
    /// <remarks/>
    public event RetrieveAllForEntityStateCompletedEventHandler RetrieveAllForEntityStateCompleted;
    
    /// <remarks/>
    public event ChangeStateCompletedEventHandler ChangeStateCompleted;
    
    /// <remarks/>
    public event RetrieveAllForPriorityCompletedEventHandler RetrieveAllForPriorityCompleted;
    
    /// <remarks/>
    public event GetPrioritiesCompletedEventHandler GetPrioritiesCompleted;
    
    /// <remarks/>
    public event RetrieveAllForIterationCompletedEventHandler RetrieveAllForIterationCompleted;
    
    /// <remarks/>
    public event RetrieveAllForReleaseCompletedEventHandler RetrieveAllForReleaseCompleted;
    
    /// <remarks/>
    public event RetrieveAllForFeatureCompletedEventHandler RetrieveAllForFeatureCompleted;
    
    /// <remarks/>
    public event RetrieveCommentsForUserStoryCompletedEventHandler RetrieveCommentsForUserStoryCompleted;
    
    /// <remarks/>
    public event AddCommentToUserStoryCompletedEventHandler AddCommentToUserStoryCompleted;
    
    /// <remarks/>
    public event RemoveCommentFromUserStoryCompletedEventHandler RemoveCommentFromUserStoryCompleted;
    
    /// <remarks/>
    public event RetrieveAttachmentsForUserStoryCompletedEventHandler RetrieveAttachmentsForUserStoryCompleted;
    
    /// <remarks/>
    public event RemoveAttachmentFromUserStoryCompletedEventHandler RemoveAttachmentFromUserStoryCompleted;
    
    /// <remarks/>
    public event AddAttachmentToUserStoryCompletedEventHandler AddAttachmentToUserStoryCompleted;
    
    /// <remarks/>
    public event RetrieveAttachedRequestsForUserStoryCompletedEventHandler RetrieveAttachedRequestsForUserStoryCompleted;
    
    /// <remarks/>
    public event AddRequestGeneralToUserStoryCompletedEventHandler AddRequestGeneralToUserStoryCompleted;
    
    /// <remarks/>
    public event RemoveRequestGeneralFromUserStoryCompletedEventHandler RemoveRequestGeneralFromUserStoryCompleted;
    
    /// <remarks/>
    public event RetrieveTeamsForUserStoryCompletedEventHandler RetrieveTeamsForUserStoryCompleted;
    
    /// <remarks/>
    public event AddTeamToUserStoryCompletedEventHandler AddTeamToUserStoryCompleted;
    
    /// <remarks/>
    public event AssignUserAsActorCompletedEventHandler AssignUserAsActorCompleted;
    
    /// <remarks/>
    public event AssignUserCompletedEventHandler AssignUserCompleted;
    
    /// <remarks/>
    public event AssignUserByEmailOrLoginAsActorCompletedEventHandler AssignUserByEmailOrLoginAsActorCompleted;
    
    /// <remarks/>
    public event AssignUserByEmailOrLoginCompletedEventHandler AssignUserByEmailOrLoginCompleted;
    
    /// <remarks/>
    public event RetrieveOpenForUserCompletedEventHandler RetrieveOpenForUserCompleted;
    
    /// <remarks/>
    public event RetrieveOpenForMeCompletedEventHandler RetrieveOpenForMeCompleted;
    
    /// <remarks/>
    public event RemoveTeamFromUserStoryCompletedEventHandler RemoveTeamFromUserStoryCompleted;
    
    /// <remarks/>
    public event RetrieveActorEffortsForUserStoryCompletedEventHandler RetrieveActorEffortsForUserStoryCompleted;
    
    /// <remarks/>
    public event ChangeEffortCompletedEventHandler ChangeEffortCompleted;
    
    /// <remarks/>
    public event RetrieveRevisionAssignablesForUserStoryCompletedEventHandler RetrieveRevisionAssignablesForUserStoryCompleted;
    
    /// <remarks/>
    public event AddRevisionAssignableToUserStoryCompletedEventHandler AddRevisionAssignableToUserStoryCompleted;
    
    /// <remarks/>
    public event RemoveRevisionAssignableFromUserStoryCompletedEventHandler RemoveRevisionAssignableFromUserStoryCompleted;
    
    /// <remarks/>
    public event RetrieveTasksForUserStoryCompletedEventHandler RetrieveTasksForUserStoryCompleted;
    
    /// <remarks/>
    public event AddTaskToUserStoryCompletedEventHandler AddTaskToUserStoryCompleted;
    
    /// <remarks/>
    public event RemoveTaskFromUserStoryCompletedEventHandler RemoveTaskFromUserStoryCompleted;
    
    /// <remarks/>
    public event GetByIDCompletedEventHandler GetByIDCompleted;
    
    /// <remarks/>
    public event CreateCompletedEventHandler CreateCompleted;
    
    /// <remarks/>
    public event UpdateCompletedEventHandler UpdateCompleted;
    
    /// <remarks/>
    public event DeleteCompletedEventHandler DeleteCompleted;
    
    /// <remarks/>
    public event RetrieveAllCompletedEventHandler RetrieveAllCompleted;
    
    /// <remarks/>
    public event RetrieveCompletedEventHandler RetrieveCompleted;
    
    /// <remarks/>
    public event GetIDsCompletedEventHandler GetIDsCompleted;
    
    /// <remarks/>
    public event RetrievePageCompletedEventHandler RetrievePageCompleted;
    
    /// <remarks/>
    public event RetrieveCountCompletedEventHandler RetrieveCountCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForLastCommentUser", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UserStoryDTO[] RetrieveAllForLastCommentUser(int lastCommentUserID) {
        object[] results = this.Invoke("RetrieveAllForLastCommentUser", new object[] {
                    lastCommentUserID});
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAllForLastCommentUser(int lastCommentUserID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAllForLastCommentUser", new object[] {
                    lastCommentUserID}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserStoryDTO[] EndRetrieveAllForLastCommentUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAllForLastCommentUserAsync(int lastCommentUserID) {
        this.RetrieveAllForLastCommentUserAsync(lastCommentUserID, null);
    }
    
    /// <remarks/>
    public void RetrieveAllForLastCommentUserAsync(int lastCommentUserID, object userState) {
        if ((this.RetrieveAllForLastCommentUserOperationCompleted == null)) {
            this.RetrieveAllForLastCommentUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForLastCommentUserOperationCompleted);
        }
        this.InvokeAsync("RetrieveAllForLastCommentUser", new object[] {
                    lastCommentUserID}, this.RetrieveAllForLastCommentUserOperationCompleted, userState);
    }
    
    private void OnRetrieveAllForLastCommentUserOperationCompleted(object arg) {
        if ((this.RetrieveAllForLastCommentUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAllForLastCommentUserCompleted(this, new RetrieveAllForLastCommentUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForProject", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UserStoryDTO[] RetrieveAllForProject(int projectID) {
        object[] results = this.Invoke("RetrieveAllForProject", new object[] {
                    projectID});
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAllForProject(int projectID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAllForProject", new object[] {
                    projectID}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserStoryDTO[] EndRetrieveAllForProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAllForProjectAsync(int projectID) {
        this.RetrieveAllForProjectAsync(projectID, null);
    }
    
    /// <remarks/>
    public void RetrieveAllForProjectAsync(int projectID, object userState) {
        if ((this.RetrieveAllForProjectOperationCompleted == null)) {
            this.RetrieveAllForProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForProjectOperationCompleted);
        }
        this.InvokeAsync("RetrieveAllForProject", new object[] {
                    projectID}, this.RetrieveAllForProjectOperationCompleted, userState);
    }
    
    private void OnRetrieveAllForProjectOperationCompleted(object arg) {
        if ((this.RetrieveAllForProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAllForProjectCompleted(this, new RetrieveAllForProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForOwner", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UserStoryDTO[] RetrieveAllForOwner(int ownerID) {
        object[] results = this.Invoke("RetrieveAllForOwner", new object[] {
                    ownerID});
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAllForOwner(int ownerID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAllForOwner", new object[] {
                    ownerID}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserStoryDTO[] EndRetrieveAllForOwner(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAllForOwnerAsync(int ownerID) {
        this.RetrieveAllForOwnerAsync(ownerID, null);
    }
    
    /// <remarks/>
    public void RetrieveAllForOwnerAsync(int ownerID, object userState) {
        if ((this.RetrieveAllForOwnerOperationCompleted == null)) {
            this.RetrieveAllForOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForOwnerOperationCompleted);
        }
        this.InvokeAsync("RetrieveAllForOwner", new object[] {
                    ownerID}, this.RetrieveAllForOwnerOperationCompleted, userState);
    }
    
    private void OnRetrieveAllForOwnerOperationCompleted(object arg) {
        if ((this.RetrieveAllForOwnerCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAllForOwnerCompleted(this, new RetrieveAllForOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForEntityState", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UserStoryDTO[] RetrieveAllForEntityState(int entityStateID) {
        object[] results = this.Invoke("RetrieveAllForEntityState", new object[] {
                    entityStateID});
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAllForEntityState(int entityStateID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAllForEntityState", new object[] {
                    entityStateID}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserStoryDTO[] EndRetrieveAllForEntityState(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAllForEntityStateAsync(int entityStateID) {
        this.RetrieveAllForEntityStateAsync(entityStateID, null);
    }
    
    /// <remarks/>
    public void RetrieveAllForEntityStateAsync(int entityStateID, object userState) {
        if ((this.RetrieveAllForEntityStateOperationCompleted == null)) {
            this.RetrieveAllForEntityStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForEntityStateOperationCompleted);
        }
        this.InvokeAsync("RetrieveAllForEntityState", new object[] {
                    entityStateID}, this.RetrieveAllForEntityStateOperationCompleted, userState);
    }
    
    private void OnRetrieveAllForEntityStateOperationCompleted(object arg) {
        if ((this.RetrieveAllForEntityStateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAllForEntityStateCompleted(this, new RetrieveAllForEntityStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/ChangeState", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void ChangeState(int userStoryID, int entityStateID) {
        this.Invoke("ChangeState", new object[] {
                    userStoryID,
                    entityStateID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginChangeState(int userStoryID, int entityStateID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ChangeState", new object[] {
                    userStoryID,
                    entityStateID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndChangeState(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void ChangeStateAsync(int userStoryID, int entityStateID) {
        this.ChangeStateAsync(userStoryID, entityStateID, null);
    }
    
    /// <remarks/>
    public void ChangeStateAsync(int userStoryID, int entityStateID, object userState) {
        if ((this.ChangeStateOperationCompleted == null)) {
            this.ChangeStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeStateOperationCompleted);
        }
        this.InvokeAsync("ChangeState", new object[] {
                    userStoryID,
                    entityStateID}, this.ChangeStateOperationCompleted, userState);
    }
    
    private void OnChangeStateOperationCompleted(object arg) {
        if ((this.ChangeStateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ChangeStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForPriority", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UserStoryDTO[] RetrieveAllForPriority(int priorityID) {
        object[] results = this.Invoke("RetrieveAllForPriority", new object[] {
                    priorityID});
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAllForPriority(int priorityID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAllForPriority", new object[] {
                    priorityID}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserStoryDTO[] EndRetrieveAllForPriority(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAllForPriorityAsync(int priorityID) {
        this.RetrieveAllForPriorityAsync(priorityID, null);
    }
    
    /// <remarks/>
    public void RetrieveAllForPriorityAsync(int priorityID, object userState) {
        if ((this.RetrieveAllForPriorityOperationCompleted == null)) {
            this.RetrieveAllForPriorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForPriorityOperationCompleted);
        }
        this.InvokeAsync("RetrieveAllForPriority", new object[] {
                    priorityID}, this.RetrieveAllForPriorityOperationCompleted, userState);
    }
    
    private void OnRetrieveAllForPriorityOperationCompleted(object arg) {
        if ((this.RetrieveAllForPriorityCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAllForPriorityCompleted(this, new RetrieveAllForPriorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/GetPriorities", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public PriorityDTO[] GetPriorities() {
        object[] results = this.Invoke("GetPriorities", new object[0]);
        return ((PriorityDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPriorities(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPriorities", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public PriorityDTO[] EndGetPriorities(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((PriorityDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void GetPrioritiesAsync() {
        this.GetPrioritiesAsync(null);
    }
    
    /// <remarks/>
    public void GetPrioritiesAsync(object userState) {
        if ((this.GetPrioritiesOperationCompleted == null)) {
            this.GetPrioritiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrioritiesOperationCompleted);
        }
        this.InvokeAsync("GetPriorities", new object[0], this.GetPrioritiesOperationCompleted, userState);
    }
    
    private void OnGetPrioritiesOperationCompleted(object arg) {
        if ((this.GetPrioritiesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPrioritiesCompleted(this, new GetPrioritiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForIteration", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UserStoryDTO[] RetrieveAllForIteration(int iterationID) {
        object[] results = this.Invoke("RetrieveAllForIteration", new object[] {
                    iterationID});
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAllForIteration(int iterationID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAllForIteration", new object[] {
                    iterationID}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserStoryDTO[] EndRetrieveAllForIteration(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAllForIterationAsync(int iterationID) {
        this.RetrieveAllForIterationAsync(iterationID, null);
    }
    
    /// <remarks/>
    public void RetrieveAllForIterationAsync(int iterationID, object userState) {
        if ((this.RetrieveAllForIterationOperationCompleted == null)) {
            this.RetrieveAllForIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForIterationOperationCompleted);
        }
        this.InvokeAsync("RetrieveAllForIteration", new object[] {
                    iterationID}, this.RetrieveAllForIterationOperationCompleted, userState);
    }
    
    private void OnRetrieveAllForIterationOperationCompleted(object arg) {
        if ((this.RetrieveAllForIterationCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAllForIterationCompleted(this, new RetrieveAllForIterationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForRelease", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UserStoryDTO[] RetrieveAllForRelease(int releaseID) {
        object[] results = this.Invoke("RetrieveAllForRelease", new object[] {
                    releaseID});
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAllForRelease(int releaseID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAllForRelease", new object[] {
                    releaseID}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserStoryDTO[] EndRetrieveAllForRelease(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAllForReleaseAsync(int releaseID) {
        this.RetrieveAllForReleaseAsync(releaseID, null);
    }
    
    /// <remarks/>
    public void RetrieveAllForReleaseAsync(int releaseID, object userState) {
        if ((this.RetrieveAllForReleaseOperationCompleted == null)) {
            this.RetrieveAllForReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForReleaseOperationCompleted);
        }
        this.InvokeAsync("RetrieveAllForRelease", new object[] {
                    releaseID}, this.RetrieveAllForReleaseOperationCompleted, userState);
    }
    
    private void OnRetrieveAllForReleaseOperationCompleted(object arg) {
        if ((this.RetrieveAllForReleaseCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAllForReleaseCompleted(this, new RetrieveAllForReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForFeature", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UserStoryDTO[] RetrieveAllForFeature(int featureID) {
        object[] results = this.Invoke("RetrieveAllForFeature", new object[] {
                    featureID});
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAllForFeature(int featureID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAllForFeature", new object[] {
                    featureID}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserStoryDTO[] EndRetrieveAllForFeature(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAllForFeatureAsync(int featureID) {
        this.RetrieveAllForFeatureAsync(featureID, null);
    }
    
    /// <remarks/>
    public void RetrieveAllForFeatureAsync(int featureID, object userState) {
        if ((this.RetrieveAllForFeatureOperationCompleted == null)) {
            this.RetrieveAllForFeatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForFeatureOperationCompleted);
        }
        this.InvokeAsync("RetrieveAllForFeature", new object[] {
                    featureID}, this.RetrieveAllForFeatureOperationCompleted, userState);
    }
    
    private void OnRetrieveAllForFeatureOperationCompleted(object arg) {
        if ((this.RetrieveAllForFeatureCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAllForFeatureCompleted(this, new RetrieveAllForFeatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveCommentsForUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CommentDTO[] RetrieveCommentsForUserStory(int userStoryID) {
        object[] results = this.Invoke("RetrieveCommentsForUserStory", new object[] {
                    userStoryID});
        return ((CommentDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveCommentsForUserStory(int userStoryID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveCommentsForUserStory", new object[] {
                    userStoryID}, callback, asyncState);
    }
    
    /// <remarks/>
    public CommentDTO[] EndRetrieveCommentsForUserStory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CommentDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveCommentsForUserStoryAsync(int userStoryID) {
        this.RetrieveCommentsForUserStoryAsync(userStoryID, null);
    }
    
    /// <remarks/>
    public void RetrieveCommentsForUserStoryAsync(int userStoryID, object userState) {
        if ((this.RetrieveCommentsForUserStoryOperationCompleted == null)) {
            this.RetrieveCommentsForUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCommentsForUserStoryOperationCompleted);
        }
        this.InvokeAsync("RetrieveCommentsForUserStory", new object[] {
                    userStoryID}, this.RetrieveCommentsForUserStoryOperationCompleted, userState);
    }
    
    private void OnRetrieveCommentsForUserStoryOperationCompleted(object arg) {
        if ((this.RetrieveCommentsForUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveCommentsForUserStoryCompleted(this, new RetrieveCommentsForUserStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddCommentToUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int AddCommentToUserStory(int userStoryID, CommentDTO comment) {
        object[] results = this.Invoke("AddCommentToUserStory", new object[] {
                    userStoryID,
                    comment});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddCommentToUserStory(int userStoryID, CommentDTO comment, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddCommentToUserStory", new object[] {
                    userStoryID,
                    comment}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndAddCommentToUserStory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void AddCommentToUserStoryAsync(int userStoryID, CommentDTO comment) {
        this.AddCommentToUserStoryAsync(userStoryID, comment, null);
    }
    
    /// <remarks/>
    public void AddCommentToUserStoryAsync(int userStoryID, CommentDTO comment, object userState) {
        if ((this.AddCommentToUserStoryOperationCompleted == null)) {
            this.AddCommentToUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCommentToUserStoryOperationCompleted);
        }
        this.InvokeAsync("AddCommentToUserStory", new object[] {
                    userStoryID,
                    comment}, this.AddCommentToUserStoryOperationCompleted, userState);
    }
    
    private void OnAddCommentToUserStoryOperationCompleted(object arg) {
        if ((this.AddCommentToUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddCommentToUserStoryCompleted(this, new AddCommentToUserStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveCommentFromUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveCommentFromUserStory(int userStoryID, int commentID) {
        this.Invoke("RemoveCommentFromUserStory", new object[] {
                    userStoryID,
                    commentID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveCommentFromUserStory(int userStoryID, int commentID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveCommentFromUserStory", new object[] {
                    userStoryID,
                    commentID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoveCommentFromUserStory(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoveCommentFromUserStoryAsync(int userStoryID, int commentID) {
        this.RemoveCommentFromUserStoryAsync(userStoryID, commentID, null);
    }
    
    /// <remarks/>
    public void RemoveCommentFromUserStoryAsync(int userStoryID, int commentID, object userState) {
        if ((this.RemoveCommentFromUserStoryOperationCompleted == null)) {
            this.RemoveCommentFromUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveCommentFromUserStoryOperationCompleted);
        }
        this.InvokeAsync("RemoveCommentFromUserStory", new object[] {
                    userStoryID,
                    commentID}, this.RemoveCommentFromUserStoryOperationCompleted, userState);
    }
    
    private void OnRemoveCommentFromUserStoryOperationCompleted(object arg) {
        if ((this.RemoveCommentFromUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveCommentFromUserStoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAttachmentsForUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public AttachmentDTO[] RetrieveAttachmentsForUserStory(int userStoryID) {
        object[] results = this.Invoke("RetrieveAttachmentsForUserStory", new object[] {
                    userStoryID});
        return ((AttachmentDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAttachmentsForUserStory(int userStoryID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAttachmentsForUserStory", new object[] {
                    userStoryID}, callback, asyncState);
    }
    
    /// <remarks/>
    public AttachmentDTO[] EndRetrieveAttachmentsForUserStory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((AttachmentDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAttachmentsForUserStoryAsync(int userStoryID) {
        this.RetrieveAttachmentsForUserStoryAsync(userStoryID, null);
    }
    
    /// <remarks/>
    public void RetrieveAttachmentsForUserStoryAsync(int userStoryID, object userState) {
        if ((this.RetrieveAttachmentsForUserStoryOperationCompleted == null)) {
            this.RetrieveAttachmentsForUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAttachmentsForUserStoryOperationCompleted);
        }
        this.InvokeAsync("RetrieveAttachmentsForUserStory", new object[] {
                    userStoryID}, this.RetrieveAttachmentsForUserStoryOperationCompleted, userState);
    }
    
    private void OnRetrieveAttachmentsForUserStoryOperationCompleted(object arg) {
        if ((this.RetrieveAttachmentsForUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAttachmentsForUserStoryCompleted(this, new RetrieveAttachmentsForUserStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveAttachmentFromUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveAttachmentFromUserStory(int userStoryID, int attachmentID) {
        this.Invoke("RemoveAttachmentFromUserStory", new object[] {
                    userStoryID,
                    attachmentID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveAttachmentFromUserStory(int userStoryID, int attachmentID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveAttachmentFromUserStory", new object[] {
                    userStoryID,
                    attachmentID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoveAttachmentFromUserStory(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoveAttachmentFromUserStoryAsync(int userStoryID, int attachmentID) {
        this.RemoveAttachmentFromUserStoryAsync(userStoryID, attachmentID, null);
    }
    
    /// <remarks/>
    public void RemoveAttachmentFromUserStoryAsync(int userStoryID, int attachmentID, object userState) {
        if ((this.RemoveAttachmentFromUserStoryOperationCompleted == null)) {
            this.RemoveAttachmentFromUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAttachmentFromUserStoryOperationCompleted);
        }
        this.InvokeAsync("RemoveAttachmentFromUserStory", new object[] {
                    userStoryID,
                    attachmentID}, this.RemoveAttachmentFromUserStoryOperationCompleted, userState);
    }
    
    private void OnRemoveAttachmentFromUserStoryOperationCompleted(object arg) {
        if ((this.RemoveAttachmentFromUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveAttachmentFromUserStoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddAttachmentToUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int AddAttachmentToUserStory(int userStoryID, string fileName, string description) {
        object[] results = this.Invoke("AddAttachmentToUserStory", new object[] {
                    userStoryID,
                    fileName,
                    description});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddAttachmentToUserStory(int userStoryID, string fileName, string description, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddAttachmentToUserStory", new object[] {
                    userStoryID,
                    fileName,
                    description}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndAddAttachmentToUserStory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void AddAttachmentToUserStoryAsync(int userStoryID, string fileName, string description) {
        this.AddAttachmentToUserStoryAsync(userStoryID, fileName, description, null);
    }
    
    /// <remarks/>
    public void AddAttachmentToUserStoryAsync(int userStoryID, string fileName, string description, object userState) {
        if ((this.AddAttachmentToUserStoryOperationCompleted == null)) {
            this.AddAttachmentToUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAttachmentToUserStoryOperationCompleted);
        }
        this.InvokeAsync("AddAttachmentToUserStory", new object[] {
                    userStoryID,
                    fileName,
                    description}, this.AddAttachmentToUserStoryOperationCompleted, userState);
    }
    
    private void OnAddAttachmentToUserStoryOperationCompleted(object arg) {
        if ((this.AddAttachmentToUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddAttachmentToUserStoryCompleted(this, new AddAttachmentToUserStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAttachedRequestsForUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RequestGeneralDTO[] RetrieveAttachedRequestsForUserStory(int userStoryID) {
        object[] results = this.Invoke("RetrieveAttachedRequestsForUserStory", new object[] {
                    userStoryID});
        return ((RequestGeneralDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAttachedRequestsForUserStory(int userStoryID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAttachedRequestsForUserStory", new object[] {
                    userStoryID}, callback, asyncState);
    }
    
    /// <remarks/>
    public RequestGeneralDTO[] EndRetrieveAttachedRequestsForUserStory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((RequestGeneralDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAttachedRequestsForUserStoryAsync(int userStoryID) {
        this.RetrieveAttachedRequestsForUserStoryAsync(userStoryID, null);
    }
    
    /// <remarks/>
    public void RetrieveAttachedRequestsForUserStoryAsync(int userStoryID, object userState) {
        if ((this.RetrieveAttachedRequestsForUserStoryOperationCompleted == null)) {
            this.RetrieveAttachedRequestsForUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAttachedRequestsForUserStoryOperationCompleted);
        }
        this.InvokeAsync("RetrieveAttachedRequestsForUserStory", new object[] {
                    userStoryID}, this.RetrieveAttachedRequestsForUserStoryOperationCompleted, userState);
    }
    
    private void OnRetrieveAttachedRequestsForUserStoryOperationCompleted(object arg) {
        if ((this.RetrieveAttachedRequestsForUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAttachedRequestsForUserStoryCompleted(this, new RetrieveAttachedRequestsForUserStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddRequestGeneralToUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int AddRequestGeneralToUserStory(int userStoryID, RequestGeneralDTO requestGeneral) {
        object[] results = this.Invoke("AddRequestGeneralToUserStory", new object[] {
                    userStoryID,
                    requestGeneral});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddRequestGeneralToUserStory(int userStoryID, RequestGeneralDTO requestGeneral, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddRequestGeneralToUserStory", new object[] {
                    userStoryID,
                    requestGeneral}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndAddRequestGeneralToUserStory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void AddRequestGeneralToUserStoryAsync(int userStoryID, RequestGeneralDTO requestGeneral) {
        this.AddRequestGeneralToUserStoryAsync(userStoryID, requestGeneral, null);
    }
    
    /// <remarks/>
    public void AddRequestGeneralToUserStoryAsync(int userStoryID, RequestGeneralDTO requestGeneral, object userState) {
        if ((this.AddRequestGeneralToUserStoryOperationCompleted == null)) {
            this.AddRequestGeneralToUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRequestGeneralToUserStoryOperationCompleted);
        }
        this.InvokeAsync("AddRequestGeneralToUserStory", new object[] {
                    userStoryID,
                    requestGeneral}, this.AddRequestGeneralToUserStoryOperationCompleted, userState);
    }
    
    private void OnAddRequestGeneralToUserStoryOperationCompleted(object arg) {
        if ((this.AddRequestGeneralToUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddRequestGeneralToUserStoryCompleted(this, new AddRequestGeneralToUserStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveRequestGeneralFromUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveRequestGeneralFromUserStory(int userStoryID, int requestGeneralID) {
        this.Invoke("RemoveRequestGeneralFromUserStory", new object[] {
                    userStoryID,
                    requestGeneralID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveRequestGeneralFromUserStory(int userStoryID, int requestGeneralID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveRequestGeneralFromUserStory", new object[] {
                    userStoryID,
                    requestGeneralID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoveRequestGeneralFromUserStory(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoveRequestGeneralFromUserStoryAsync(int userStoryID, int requestGeneralID) {
        this.RemoveRequestGeneralFromUserStoryAsync(userStoryID, requestGeneralID, null);
    }
    
    /// <remarks/>
    public void RemoveRequestGeneralFromUserStoryAsync(int userStoryID, int requestGeneralID, object userState) {
        if ((this.RemoveRequestGeneralFromUserStoryOperationCompleted == null)) {
            this.RemoveRequestGeneralFromUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveRequestGeneralFromUserStoryOperationCompleted);
        }
        this.InvokeAsync("RemoveRequestGeneralFromUserStory", new object[] {
                    userStoryID,
                    requestGeneralID}, this.RemoveRequestGeneralFromUserStoryOperationCompleted, userState);
    }
    
    private void OnRemoveRequestGeneralFromUserStoryOperationCompleted(object arg) {
        if ((this.RemoveRequestGeneralFromUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveRequestGeneralFromUserStoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveTeamsForUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public TeamDTO[] RetrieveTeamsForUserStory(int userStoryID) {
        object[] results = this.Invoke("RetrieveTeamsForUserStory", new object[] {
                    userStoryID});
        return ((TeamDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveTeamsForUserStory(int userStoryID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveTeamsForUserStory", new object[] {
                    userStoryID}, callback, asyncState);
    }
    
    /// <remarks/>
    public TeamDTO[] EndRetrieveTeamsForUserStory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TeamDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveTeamsForUserStoryAsync(int userStoryID) {
        this.RetrieveTeamsForUserStoryAsync(userStoryID, null);
    }
    
    /// <remarks/>
    public void RetrieveTeamsForUserStoryAsync(int userStoryID, object userState) {
        if ((this.RetrieveTeamsForUserStoryOperationCompleted == null)) {
            this.RetrieveTeamsForUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveTeamsForUserStoryOperationCompleted);
        }
        this.InvokeAsync("RetrieveTeamsForUserStory", new object[] {
                    userStoryID}, this.RetrieveTeamsForUserStoryOperationCompleted, userState);
    }
    
    private void OnRetrieveTeamsForUserStoryOperationCompleted(object arg) {
        if ((this.RetrieveTeamsForUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveTeamsForUserStoryCompleted(this, new RetrieveTeamsForUserStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddTeamToUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int AddTeamToUserStory(int userStoryID, TeamDTO team) {
        object[] results = this.Invoke("AddTeamToUserStory", new object[] {
                    userStoryID,
                    team});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddTeamToUserStory(int userStoryID, TeamDTO team, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddTeamToUserStory", new object[] {
                    userStoryID,
                    team}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndAddTeamToUserStory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void AddTeamToUserStoryAsync(int userStoryID, TeamDTO team) {
        this.AddTeamToUserStoryAsync(userStoryID, team, null);
    }
    
    /// <remarks/>
    public void AddTeamToUserStoryAsync(int userStoryID, TeamDTO team, object userState) {
        if ((this.AddTeamToUserStoryOperationCompleted == null)) {
            this.AddTeamToUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTeamToUserStoryOperationCompleted);
        }
        this.InvokeAsync("AddTeamToUserStory", new object[] {
                    userStoryID,
                    team}, this.AddTeamToUserStoryOperationCompleted, userState);
    }
    
    private void OnAddTeamToUserStoryOperationCompleted(object arg) {
        if ((this.AddTeamToUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddTeamToUserStoryCompleted(this, new AddTeamToUserStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AssignUserAsActor", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void AssignUserAsActor(int userStoryID, int actorID, int userID) {
        this.Invoke("AssignUserAsActor", new object[] {
                    userStoryID,
                    actorID,
                    userID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAssignUserAsActor(int userStoryID, int actorID, int userID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AssignUserAsActor", new object[] {
                    userStoryID,
                    actorID,
                    userID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndAssignUserAsActor(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void AssignUserAsActorAsync(int userStoryID, int actorID, int userID) {
        this.AssignUserAsActorAsync(userStoryID, actorID, userID, null);
    }
    
    /// <remarks/>
    public void AssignUserAsActorAsync(int userStoryID, int actorID, int userID, object userState) {
        if ((this.AssignUserAsActorOperationCompleted == null)) {
            this.AssignUserAsActorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignUserAsActorOperationCompleted);
        }
        this.InvokeAsync("AssignUserAsActor", new object[] {
                    userStoryID,
                    actorID,
                    userID}, this.AssignUserAsActorOperationCompleted, userState);
    }
    
    private void OnAssignUserAsActorOperationCompleted(object arg) {
        if ((this.AssignUserAsActorCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AssignUserAsActorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AssignUser", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void AssignUser(int userStoryID, int userID) {
        this.Invoke("AssignUser", new object[] {
                    userStoryID,
                    userID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAssignUser(int userStoryID, int userID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AssignUser", new object[] {
                    userStoryID,
                    userID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndAssignUser(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void AssignUserAsync(int userStoryID, int userID) {
        this.AssignUserAsync(userStoryID, userID, null);
    }
    
    /// <remarks/>
    public void AssignUserAsync(int userStoryID, int userID, object userState) {
        if ((this.AssignUserOperationCompleted == null)) {
            this.AssignUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignUserOperationCompleted);
        }
        this.InvokeAsync("AssignUser", new object[] {
                    userStoryID,
                    userID}, this.AssignUserOperationCompleted, userState);
    }
    
    private void OnAssignUserOperationCompleted(object arg) {
        if ((this.AssignUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AssignUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AssignUserByEmailOrLoginAsActor", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void AssignUserByEmailOrLoginAsActor(int userStoryID, string userEmailOrLogin, string actorName) {
        this.Invoke("AssignUserByEmailOrLoginAsActor", new object[] {
                    userStoryID,
                    userEmailOrLogin,
                    actorName});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAssignUserByEmailOrLoginAsActor(int userStoryID, string userEmailOrLogin, string actorName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AssignUserByEmailOrLoginAsActor", new object[] {
                    userStoryID,
                    userEmailOrLogin,
                    actorName}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndAssignUserByEmailOrLoginAsActor(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void AssignUserByEmailOrLoginAsActorAsync(int userStoryID, string userEmailOrLogin, string actorName) {
        this.AssignUserByEmailOrLoginAsActorAsync(userStoryID, userEmailOrLogin, actorName, null);
    }
    
    /// <remarks/>
    public void AssignUserByEmailOrLoginAsActorAsync(int userStoryID, string userEmailOrLogin, string actorName, object userState) {
        if ((this.AssignUserByEmailOrLoginAsActorOperationCompleted == null)) {
            this.AssignUserByEmailOrLoginAsActorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignUserByEmailOrLoginAsActorOperationCompleted);
        }
        this.InvokeAsync("AssignUserByEmailOrLoginAsActor", new object[] {
                    userStoryID,
                    userEmailOrLogin,
                    actorName}, this.AssignUserByEmailOrLoginAsActorOperationCompleted, userState);
    }
    
    private void OnAssignUserByEmailOrLoginAsActorOperationCompleted(object arg) {
        if ((this.AssignUserByEmailOrLoginAsActorCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AssignUserByEmailOrLoginAsActorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AssignUserByEmailOrLogin", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void AssignUserByEmailOrLogin(int userStoryID, string userEmailOrLogin) {
        this.Invoke("AssignUserByEmailOrLogin", new object[] {
                    userStoryID,
                    userEmailOrLogin});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAssignUserByEmailOrLogin(int userStoryID, string userEmailOrLogin, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AssignUserByEmailOrLogin", new object[] {
                    userStoryID,
                    userEmailOrLogin}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndAssignUserByEmailOrLogin(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void AssignUserByEmailOrLoginAsync(int userStoryID, string userEmailOrLogin) {
        this.AssignUserByEmailOrLoginAsync(userStoryID, userEmailOrLogin, null);
    }
    
    /// <remarks/>
    public void AssignUserByEmailOrLoginAsync(int userStoryID, string userEmailOrLogin, object userState) {
        if ((this.AssignUserByEmailOrLoginOperationCompleted == null)) {
            this.AssignUserByEmailOrLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignUserByEmailOrLoginOperationCompleted);
        }
        this.InvokeAsync("AssignUserByEmailOrLogin", new object[] {
                    userStoryID,
                    userEmailOrLogin}, this.AssignUserByEmailOrLoginOperationCompleted, userState);
    }
    
    private void OnAssignUserByEmailOrLoginOperationCompleted(object arg) {
        if ((this.AssignUserByEmailOrLoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AssignUserByEmailOrLoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveOpenForUser", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UserStoryDTO[] RetrieveOpenForUser(int userID) {
        object[] results = this.Invoke("RetrieveOpenForUser", new object[] {
                    userID});
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveOpenForUser(int userID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveOpenForUser", new object[] {
                    userID}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserStoryDTO[] EndRetrieveOpenForUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveOpenForUserAsync(int userID) {
        this.RetrieveOpenForUserAsync(userID, null);
    }
    
    /// <remarks/>
    public void RetrieveOpenForUserAsync(int userID, object userState) {
        if ((this.RetrieveOpenForUserOperationCompleted == null)) {
            this.RetrieveOpenForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveOpenForUserOperationCompleted);
        }
        this.InvokeAsync("RetrieveOpenForUser", new object[] {
                    userID}, this.RetrieveOpenForUserOperationCompleted, userState);
    }
    
    private void OnRetrieveOpenForUserOperationCompleted(object arg) {
        if ((this.RetrieveOpenForUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveOpenForUserCompleted(this, new RetrieveOpenForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveOpenForMe", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UserStoryDTO[] RetrieveOpenForMe() {
        object[] results = this.Invoke("RetrieveOpenForMe", new object[0]);
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveOpenForMe(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveOpenForMe", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public UserStoryDTO[] EndRetrieveOpenForMe(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveOpenForMeAsync() {
        this.RetrieveOpenForMeAsync(null);
    }
    
    /// <remarks/>
    public void RetrieveOpenForMeAsync(object userState) {
        if ((this.RetrieveOpenForMeOperationCompleted == null)) {
            this.RetrieveOpenForMeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveOpenForMeOperationCompleted);
        }
        this.InvokeAsync("RetrieveOpenForMe", new object[0], this.RetrieveOpenForMeOperationCompleted, userState);
    }
    
    private void OnRetrieveOpenForMeOperationCompleted(object arg) {
        if ((this.RetrieveOpenForMeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveOpenForMeCompleted(this, new RetrieveOpenForMeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveTeamFromUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveTeamFromUserStory(int userStoryID, int teamID) {
        this.Invoke("RemoveTeamFromUserStory", new object[] {
                    userStoryID,
                    teamID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveTeamFromUserStory(int userStoryID, int teamID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveTeamFromUserStory", new object[] {
                    userStoryID,
                    teamID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoveTeamFromUserStory(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoveTeamFromUserStoryAsync(int userStoryID, int teamID) {
        this.RemoveTeamFromUserStoryAsync(userStoryID, teamID, null);
    }
    
    /// <remarks/>
    public void RemoveTeamFromUserStoryAsync(int userStoryID, int teamID, object userState) {
        if ((this.RemoveTeamFromUserStoryOperationCompleted == null)) {
            this.RemoveTeamFromUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveTeamFromUserStoryOperationCompleted);
        }
        this.InvokeAsync("RemoveTeamFromUserStory", new object[] {
                    userStoryID,
                    teamID}, this.RemoveTeamFromUserStoryOperationCompleted, userState);
    }
    
    private void OnRemoveTeamFromUserStoryOperationCompleted(object arg) {
        if ((this.RemoveTeamFromUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveTeamFromUserStoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveActorEffortsForUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ActorEffortDTO[] RetrieveActorEffortsForUserStory(int userStoryID) {
        object[] results = this.Invoke("RetrieveActorEffortsForUserStory", new object[] {
                    userStoryID});
        return ((ActorEffortDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveActorEffortsForUserStory(int userStoryID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveActorEffortsForUserStory", new object[] {
                    userStoryID}, callback, asyncState);
    }
    
    /// <remarks/>
    public ActorEffortDTO[] EndRetrieveActorEffortsForUserStory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ActorEffortDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveActorEffortsForUserStoryAsync(int userStoryID) {
        this.RetrieveActorEffortsForUserStoryAsync(userStoryID, null);
    }
    
    /// <remarks/>
    public void RetrieveActorEffortsForUserStoryAsync(int userStoryID, object userState) {
        if ((this.RetrieveActorEffortsForUserStoryOperationCompleted == null)) {
            this.RetrieveActorEffortsForUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveActorEffortsForUserStoryOperationCompleted);
        }
        this.InvokeAsync("RetrieveActorEffortsForUserStory", new object[] {
                    userStoryID}, this.RetrieveActorEffortsForUserStoryOperationCompleted, userState);
    }
    
    private void OnRetrieveActorEffortsForUserStoryOperationCompleted(object arg) {
        if ((this.RetrieveActorEffortsForUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveActorEffortsForUserStoryCompleted(this, new RetrieveActorEffortsForUserStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/ChangeEffort", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void ChangeEffort(int userStoryID, int actorID, decimal effort) {
        this.Invoke("ChangeEffort", new object[] {
                    userStoryID,
                    actorID,
                    effort});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginChangeEffort(int userStoryID, int actorID, decimal effort, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ChangeEffort", new object[] {
                    userStoryID,
                    actorID,
                    effort}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndChangeEffort(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void ChangeEffortAsync(int userStoryID, int actorID, decimal effort) {
        this.ChangeEffortAsync(userStoryID, actorID, effort, null);
    }
    
    /// <remarks/>
    public void ChangeEffortAsync(int userStoryID, int actorID, decimal effort, object userState) {
        if ((this.ChangeEffortOperationCompleted == null)) {
            this.ChangeEffortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeEffortOperationCompleted);
        }
        this.InvokeAsync("ChangeEffort", new object[] {
                    userStoryID,
                    actorID,
                    effort}, this.ChangeEffortOperationCompleted, userState);
    }
    
    private void OnChangeEffortOperationCompleted(object arg) {
        if ((this.ChangeEffortCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ChangeEffortCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveRevisionAssignablesForUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public RevisionAssignableDTO[] RetrieveRevisionAssignablesForUserStory(int userStoryID) {
        object[] results = this.Invoke("RetrieveRevisionAssignablesForUserStory", new object[] {
                    userStoryID});
        return ((RevisionAssignableDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveRevisionAssignablesForUserStory(int userStoryID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveRevisionAssignablesForUserStory", new object[] {
                    userStoryID}, callback, asyncState);
    }
    
    /// <remarks/>
    public RevisionAssignableDTO[] EndRetrieveRevisionAssignablesForUserStory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((RevisionAssignableDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveRevisionAssignablesForUserStoryAsync(int userStoryID) {
        this.RetrieveRevisionAssignablesForUserStoryAsync(userStoryID, null);
    }
    
    /// <remarks/>
    public void RetrieveRevisionAssignablesForUserStoryAsync(int userStoryID, object userState) {
        if ((this.RetrieveRevisionAssignablesForUserStoryOperationCompleted == null)) {
            this.RetrieveRevisionAssignablesForUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveRevisionAssignablesForUserStoryOperationCompleted);
        }
        this.InvokeAsync("RetrieveRevisionAssignablesForUserStory", new object[] {
                    userStoryID}, this.RetrieveRevisionAssignablesForUserStoryOperationCompleted, userState);
    }
    
    private void OnRetrieveRevisionAssignablesForUserStoryOperationCompleted(object arg) {
        if ((this.RetrieveRevisionAssignablesForUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveRevisionAssignablesForUserStoryCompleted(this, new RetrieveRevisionAssignablesForUserStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddRevisionAssignableToUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int AddRevisionAssignableToUserStory(int userStoryID, RevisionAssignableDTO revisionAssignable) {
        object[] results = this.Invoke("AddRevisionAssignableToUserStory", new object[] {
                    userStoryID,
                    revisionAssignable});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddRevisionAssignableToUserStory(int userStoryID, RevisionAssignableDTO revisionAssignable, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddRevisionAssignableToUserStory", new object[] {
                    userStoryID,
                    revisionAssignable}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndAddRevisionAssignableToUserStory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void AddRevisionAssignableToUserStoryAsync(int userStoryID, RevisionAssignableDTO revisionAssignable) {
        this.AddRevisionAssignableToUserStoryAsync(userStoryID, revisionAssignable, null);
    }
    
    /// <remarks/>
    public void AddRevisionAssignableToUserStoryAsync(int userStoryID, RevisionAssignableDTO revisionAssignable, object userState) {
        if ((this.AddRevisionAssignableToUserStoryOperationCompleted == null)) {
            this.AddRevisionAssignableToUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRevisionAssignableToUserStoryOperationCompleted);
        }
        this.InvokeAsync("AddRevisionAssignableToUserStory", new object[] {
                    userStoryID,
                    revisionAssignable}, this.AddRevisionAssignableToUserStoryOperationCompleted, userState);
    }
    
    private void OnAddRevisionAssignableToUserStoryOperationCompleted(object arg) {
        if ((this.AddRevisionAssignableToUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddRevisionAssignableToUserStoryCompleted(this, new AddRevisionAssignableToUserStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveRevisionAssignableFromUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveRevisionAssignableFromUserStory(int userStoryID, int revisionAssignableID) {
        this.Invoke("RemoveRevisionAssignableFromUserStory", new object[] {
                    userStoryID,
                    revisionAssignableID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveRevisionAssignableFromUserStory(int userStoryID, int revisionAssignableID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveRevisionAssignableFromUserStory", new object[] {
                    userStoryID,
                    revisionAssignableID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoveRevisionAssignableFromUserStory(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoveRevisionAssignableFromUserStoryAsync(int userStoryID, int revisionAssignableID) {
        this.RemoveRevisionAssignableFromUserStoryAsync(userStoryID, revisionAssignableID, null);
    }
    
    /// <remarks/>
    public void RemoveRevisionAssignableFromUserStoryAsync(int userStoryID, int revisionAssignableID, object userState) {
        if ((this.RemoveRevisionAssignableFromUserStoryOperationCompleted == null)) {
            this.RemoveRevisionAssignableFromUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveRevisionAssignableFromUserStoryOperationCompleted);
        }
        this.InvokeAsync("RemoveRevisionAssignableFromUserStory", new object[] {
                    userStoryID,
                    revisionAssignableID}, this.RemoveRevisionAssignableFromUserStoryOperationCompleted, userState);
    }
    
    private void OnRemoveRevisionAssignableFromUserStoryOperationCompleted(object arg) {
        if ((this.RemoveRevisionAssignableFromUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveRevisionAssignableFromUserStoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveTasksForUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public TaskDTO[] RetrieveTasksForUserStory(int userStoryID) {
        object[] results = this.Invoke("RetrieveTasksForUserStory", new object[] {
                    userStoryID});
        return ((TaskDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveTasksForUserStory(int userStoryID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveTasksForUserStory", new object[] {
                    userStoryID}, callback, asyncState);
    }
    
    /// <remarks/>
    public TaskDTO[] EndRetrieveTasksForUserStory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TaskDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveTasksForUserStoryAsync(int userStoryID) {
        this.RetrieveTasksForUserStoryAsync(userStoryID, null);
    }
    
    /// <remarks/>
    public void RetrieveTasksForUserStoryAsync(int userStoryID, object userState) {
        if ((this.RetrieveTasksForUserStoryOperationCompleted == null)) {
            this.RetrieveTasksForUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveTasksForUserStoryOperationCompleted);
        }
        this.InvokeAsync("RetrieveTasksForUserStory", new object[] {
                    userStoryID}, this.RetrieveTasksForUserStoryOperationCompleted, userState);
    }
    
    private void OnRetrieveTasksForUserStoryOperationCompleted(object arg) {
        if ((this.RetrieveTasksForUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveTasksForUserStoryCompleted(this, new RetrieveTasksForUserStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddTaskToUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int AddTaskToUserStory(int userStoryID, TaskDTO task) {
        object[] results = this.Invoke("AddTaskToUserStory", new object[] {
                    userStoryID,
                    task});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddTaskToUserStory(int userStoryID, TaskDTO task, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddTaskToUserStory", new object[] {
                    userStoryID,
                    task}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndAddTaskToUserStory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void AddTaskToUserStoryAsync(int userStoryID, TaskDTO task) {
        this.AddTaskToUserStoryAsync(userStoryID, task, null);
    }
    
    /// <remarks/>
    public void AddTaskToUserStoryAsync(int userStoryID, TaskDTO task, object userState) {
        if ((this.AddTaskToUserStoryOperationCompleted == null)) {
            this.AddTaskToUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTaskToUserStoryOperationCompleted);
        }
        this.InvokeAsync("AddTaskToUserStory", new object[] {
                    userStoryID,
                    task}, this.AddTaskToUserStoryOperationCompleted, userState);
    }
    
    private void OnAddTaskToUserStoryOperationCompleted(object arg) {
        if ((this.AddTaskToUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddTaskToUserStoryCompleted(this, new AddTaskToUserStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveTaskFromUserStory", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveTaskFromUserStory(int userStoryID, int generalID) {
        this.Invoke("RemoveTaskFromUserStory", new object[] {
                    userStoryID,
                    generalID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveTaskFromUserStory(int userStoryID, int generalID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveTaskFromUserStory", new object[] {
                    userStoryID,
                    generalID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoveTaskFromUserStory(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoveTaskFromUserStoryAsync(int userStoryID, int generalID) {
        this.RemoveTaskFromUserStoryAsync(userStoryID, generalID, null);
    }
    
    /// <remarks/>
    public void RemoveTaskFromUserStoryAsync(int userStoryID, int generalID, object userState) {
        if ((this.RemoveTaskFromUserStoryOperationCompleted == null)) {
            this.RemoveTaskFromUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveTaskFromUserStoryOperationCompleted);
        }
        this.InvokeAsync("RemoveTaskFromUserStory", new object[] {
                    userStoryID,
                    generalID}, this.RemoveTaskFromUserStoryOperationCompleted, userState);
    }
    
    private void OnRemoveTaskFromUserStoryOperationCompleted(object arg) {
        if ((this.RemoveTaskFromUserStoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveTaskFromUserStoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/GetByID", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UserStoryDTO GetByID(int id) {
        object[] results = this.Invoke("GetByID", new object[] {
                    id});
        return ((UserStoryDTO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetByID(int id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetByID", new object[] {
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserStoryDTO EndGetByID(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserStoryDTO)(results[0]));
    }
    
    /// <remarks/>
    public void GetByIDAsync(int id) {
        this.GetByIDAsync(id, null);
    }
    
    /// <remarks/>
    public void GetByIDAsync(int id, object userState) {
        if ((this.GetByIDOperationCompleted == null)) {
            this.GetByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByIDOperationCompleted);
        }
        this.InvokeAsync("GetByID", new object[] {
                    id}, this.GetByIDOperationCompleted, userState);
    }
    
    private void OnGetByIDOperationCompleted(object arg) {
        if ((this.GetByIDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetByIDCompleted(this, new GetByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/Create", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int Create(UserStoryDTO entity) {
        object[] results = this.Invoke("Create", new object[] {
                    entity});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreate(UserStoryDTO entity, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Create", new object[] {
                    entity}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndCreate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void CreateAsync(UserStoryDTO entity) {
        this.CreateAsync(entity, null);
    }
    
    /// <remarks/>
    public void CreateAsync(UserStoryDTO entity, object userState) {
        if ((this.CreateOperationCompleted == null)) {
            this.CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperationCompleted);
        }
        this.InvokeAsync("Create", new object[] {
                    entity}, this.CreateOperationCompleted, userState);
    }
    
    private void OnCreateOperationCompleted(object arg) {
        if ((this.CreateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/Update", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void Update(UserStoryDTO entity) {
        this.Invoke("Update", new object[] {
                    entity});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdate(UserStoryDTO entity, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Update", new object[] {
                    entity}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdate(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateAsync(UserStoryDTO entity) {
        this.UpdateAsync(entity, null);
    }
    
    /// <remarks/>
    public void UpdateAsync(UserStoryDTO entity, object userState) {
        if ((this.UpdateOperationCompleted == null)) {
            this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
        }
        this.InvokeAsync("Update", new object[] {
                    entity}, this.UpdateOperationCompleted, userState);
    }
    
    private void OnUpdateOperationCompleted(object arg) {
        if ((this.UpdateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/Delete", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void Delete(int id) {
        this.Invoke("Delete", new object[] {
                    id});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDelete(int id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Delete", new object[] {
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDelete(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteAsync(int id) {
        this.DeleteAsync(id, null);
    }
    
    /// <remarks/>
    public void DeleteAsync(int id, object userState) {
        if ((this.DeleteOperationCompleted == null)) {
            this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
        }
        this.InvokeAsync("Delete", new object[] {
                    id}, this.DeleteOperationCompleted, userState);
    }
    
    private void OnDeleteOperationCompleted(object arg) {
        if ((this.DeleteCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAll", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UserStoryDTO[] RetrieveAll() {
        object[] results = this.Invoke("RetrieveAll", new object[0]);
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveAll(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveAll", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public UserStoryDTO[] EndRetrieveAll(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAllAsync() {
        this.RetrieveAllAsync(null);
    }
    
    /// <remarks/>
    public void RetrieveAllAsync(object userState) {
        if ((this.RetrieveAllOperationCompleted == null)) {
            this.RetrieveAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllOperationCompleted);
        }
        this.InvokeAsync("RetrieveAll", new object[0], this.RetrieveAllOperationCompleted, userState);
    }
    
    private void OnRetrieveAllOperationCompleted(object arg) {
        if ((this.RetrieveAllCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveAllCompleted(this, new RetrieveAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/Retrieve", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UserStoryDTO[] Retrieve(string hql, object[] parameters) {
        object[] results = this.Invoke("Retrieve", new object[] {
                    hql,
                    parameters});
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieve(string hql, object[] parameters, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Retrieve", new object[] {
                    hql,
                    parameters}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserStoryDTO[] EndRetrieve(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveAsync(string hql, object[] parameters) {
        this.RetrieveAsync(hql, parameters, null);
    }
    
    /// <remarks/>
    public void RetrieveAsync(string hql, object[] parameters, object userState) {
        if ((this.RetrieveOperationCompleted == null)) {
            this.RetrieveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveOperationCompleted);
        }
        this.InvokeAsync("Retrieve", new object[] {
                    hql,
                    parameters}, this.RetrieveOperationCompleted, userState);
    }
    
    private void OnRetrieveOperationCompleted(object arg) {
        if ((this.RetrieveCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveCompleted(this, new RetrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/GetIDs", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int[] GetIDs(string hql, object[] parameters) {
        object[] results = this.Invoke("GetIDs", new object[] {
                    hql,
                    parameters});
        return ((int[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetIDs(string hql, object[] parameters, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetIDs", new object[] {
                    hql,
                    parameters}, callback, asyncState);
    }
    
    /// <remarks/>
    public int[] EndGetIDs(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int[])(results[0]));
    }
    
    /// <remarks/>
    public void GetIDsAsync(string hql, object[] parameters) {
        this.GetIDsAsync(hql, parameters, null);
    }
    
    /// <remarks/>
    public void GetIDsAsync(string hql, object[] parameters, object userState) {
        if ((this.GetIDsOperationCompleted == null)) {
            this.GetIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIDsOperationCompleted);
        }
        this.InvokeAsync("GetIDs", new object[] {
                    hql,
                    parameters}, this.GetIDsOperationCompleted, userState);
    }
    
    private void OnGetIDsOperationCompleted(object arg) {
        if ((this.GetIDsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetIDsCompleted(this, new GetIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrievePage", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UserStoryDTO[] RetrievePage(string hql, int page, int pageSize, object[] parameters) {
        object[] results = this.Invoke("RetrievePage", new object[] {
                    hql,
                    page,
                    pageSize,
                    parameters});
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrievePage(string hql, int page, int pageSize, object[] parameters, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrievePage", new object[] {
                    hql,
                    page,
                    pageSize,
                    parameters}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserStoryDTO[] EndRetrievePage(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserStoryDTO[])(results[0]));
    }
    
    /// <remarks/>
    public void RetrievePageAsync(string hql, int page, int pageSize, object[] parameters) {
        this.RetrievePageAsync(hql, page, pageSize, parameters, null);
    }
    
    /// <remarks/>
    public void RetrievePageAsync(string hql, int page, int pageSize, object[] parameters, object userState) {
        if ((this.RetrievePageOperationCompleted == null)) {
            this.RetrievePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrievePageOperationCompleted);
        }
        this.InvokeAsync("RetrievePage", new object[] {
                    hql,
                    page,
                    pageSize,
                    parameters}, this.RetrievePageOperationCompleted, userState);
    }
    
    private void OnRetrievePageOperationCompleted(object arg) {
        if ((this.RetrievePageCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrievePageCompleted(this, new RetrievePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveCount", RequestNamespace="http://targetprocess.com", ResponseNamespace="http://targetprocess.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int RetrieveCount(string hql, object[] parameters) {
        object[] results = this.Invoke("RetrieveCount", new object[] {
                    hql,
                    parameters});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRetrieveCount(string hql, object[] parameters, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RetrieveCount", new object[] {
                    hql,
                    parameters}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndRetrieveCount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void RetrieveCountAsync(string hql, object[] parameters) {
        this.RetrieveCountAsync(hql, parameters, null);
    }
    
    /// <remarks/>
    public void RetrieveCountAsync(string hql, object[] parameters, object userState) {
        if ((this.RetrieveCountOperationCompleted == null)) {
            this.RetrieveCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCountOperationCompleted);
        }
        this.InvokeAsync("RetrieveCount", new object[] {
                    hql,
                    parameters}, this.RetrieveCountOperationCompleted, userState);
    }
    
    private void OnRetrieveCountOperationCompleted(object arg) {
        if ((this.RetrieveCountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RetrieveCountCompleted(this, new RetrieveCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public partial class UserStoryDTO : DataTransferObject {
    
    private string commentOnChangingStateField;
    
    private System.Nullable<int> userStoryIDField;
    
    private string nameField;
    
    private string descriptionField;
    
    private System.Nullable<System.DateTime> startDateField;
    
    private System.Nullable<System.DateTime> endDateField;
    
    private System.Nullable<System.DateTime> createDateField;
    
    private System.Nullable<System.DateTime> modifyDateField;
    
    private System.Nullable<System.DateTime> lastCommentDateField;
    
    private System.Nullable<double> numericPriorityField;
    
    private string customField1Field;
    
    private string customField2Field;
    
    private string customField3Field;
    
    private string customField4Field;
    
    private string customField5Field;
    
    private string customField6Field;
    
    private string customField7Field;
    
    private string customField8Field;
    
    private string customField9Field;
    
    private string customField10Field;
    
    private string customField11Field;
    
    private string customField12Field;
    
    private string customField13Field;
    
    private string customField14Field;
    
    private string customField15Field;
    
    private System.Nullable<decimal> effortField;
    
    private System.Nullable<decimal> effortCompletedField;
    
    private System.Nullable<decimal> effortToDoField;
    
    private System.Nullable<decimal> timeSpentField;
    
    private System.Nullable<decimal> timeRemainField;
    
    private System.Nullable<decimal> initialEstimateField;
    
    private System.Nullable<int> lastCommentUserIDField;
    
    private System.Nullable<int> ownerIDField;
    
    private System.Nullable<int> lastEditorIDField;
    
    private System.Nullable<int> entityStateIDField;
    
    private System.Nullable<int> priorityIDField;
    
    private System.Nullable<int> projectIDField;
    
    private System.Nullable<int> iterationIDField;
    
    private System.Nullable<int> parentIDField;
    
    private System.Nullable<int> releaseIDField;
    
    private System.Nullable<int> featureIDField;
    
    private string entityTypeNameField;
    
    private string entityStateNameField;
    
    private string priorityNameField;
    
    private string projectNameField;
    
    private string iterationNameField;
    
    private string parentNameField;
    
    private string releaseNameField;
    
    private string featureNameField;
    
    /// <remarks/>
    public string CommentOnChangingState {
        get {
            return this.commentOnChangingStateField;
        }
        set {
            this.commentOnChangingStateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> UserStoryID {
        get {
            return this.userStoryIDField;
        }
        set {
            this.userStoryIDField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> StartDate {
        get {
            return this.startDateField;
        }
        set {
            this.startDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> EndDate {
        get {
            return this.endDateField;
        }
        set {
            this.endDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> CreateDate {
        get {
            return this.createDateField;
        }
        set {
            this.createDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> ModifyDate {
        get {
            return this.modifyDateField;
        }
        set {
            this.modifyDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> LastCommentDate {
        get {
            return this.lastCommentDateField;
        }
        set {
            this.lastCommentDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<double> NumericPriority {
        get {
            return this.numericPriorityField;
        }
        set {
            this.numericPriorityField = value;
        }
    }
    
    /// <remarks/>
    public string CustomField1 {
        get {
            return this.customField1Field;
        }
        set {
            this.customField1Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField2 {
        get {
            return this.customField2Field;
        }
        set {
            this.customField2Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField3 {
        get {
            return this.customField3Field;
        }
        set {
            this.customField3Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField4 {
        get {
            return this.customField4Field;
        }
        set {
            this.customField4Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField5 {
        get {
            return this.customField5Field;
        }
        set {
            this.customField5Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField6 {
        get {
            return this.customField6Field;
        }
        set {
            this.customField6Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField7 {
        get {
            return this.customField7Field;
        }
        set {
            this.customField7Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField8 {
        get {
            return this.customField8Field;
        }
        set {
            this.customField8Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField9 {
        get {
            return this.customField9Field;
        }
        set {
            this.customField9Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField10 {
        get {
            return this.customField10Field;
        }
        set {
            this.customField10Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField11 {
        get {
            return this.customField11Field;
        }
        set {
            this.customField11Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField12 {
        get {
            return this.customField12Field;
        }
        set {
            this.customField12Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField13 {
        get {
            return this.customField13Field;
        }
        set {
            this.customField13Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField14 {
        get {
            return this.customField14Field;
        }
        set {
            this.customField14Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField15 {
        get {
            return this.customField15Field;
        }
        set {
            this.customField15Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> Effort {
        get {
            return this.effortField;
        }
        set {
            this.effortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> EffortCompleted {
        get {
            return this.effortCompletedField;
        }
        set {
            this.effortCompletedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> EffortToDo {
        get {
            return this.effortToDoField;
        }
        set {
            this.effortToDoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> TimeSpent {
        get {
            return this.timeSpentField;
        }
        set {
            this.timeSpentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> TimeRemain {
        get {
            return this.timeRemainField;
        }
        set {
            this.timeRemainField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> InitialEstimate {
        get {
            return this.initialEstimateField;
        }
        set {
            this.initialEstimateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> LastCommentUserID {
        get {
            return this.lastCommentUserIDField;
        }
        set {
            this.lastCommentUserIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> OwnerID {
        get {
            return this.ownerIDField;
        }
        set {
            this.ownerIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> LastEditorID {
        get {
            return this.lastEditorIDField;
        }
        set {
            this.lastEditorIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> EntityStateID {
        get {
            return this.entityStateIDField;
        }
        set {
            this.entityStateIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> PriorityID {
        get {
            return this.priorityIDField;
        }
        set {
            this.priorityIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ProjectID {
        get {
            return this.projectIDField;
        }
        set {
            this.projectIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> IterationID {
        get {
            return this.iterationIDField;
        }
        set {
            this.iterationIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ParentID {
        get {
            return this.parentIDField;
        }
        set {
            this.parentIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ReleaseID {
        get {
            return this.releaseIDField;
        }
        set {
            this.releaseIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> FeatureID {
        get {
            return this.featureIDField;
        }
        set {
            this.featureIDField = value;
        }
    }
    
    /// <remarks/>
    public string EntityTypeName {
        get {
            return this.entityTypeNameField;
        }
        set {
            this.entityTypeNameField = value;
        }
    }
    
    /// <remarks/>
    public string EntityStateName {
        get {
            return this.entityStateNameField;
        }
        set {
            this.entityStateNameField = value;
        }
    }
    
    /// <remarks/>
    public string PriorityName {
        get {
            return this.priorityNameField;
        }
        set {
            this.priorityNameField = value;
        }
    }
    
    /// <remarks/>
    public string ProjectName {
        get {
            return this.projectNameField;
        }
        set {
            this.projectNameField = value;
        }
    }
    
    /// <remarks/>
    public string IterationName {
        get {
            return this.iterationNameField;
        }
        set {
            this.iterationNameField = value;
        }
    }
    
    /// <remarks/>
    public string ParentName {
        get {
            return this.parentNameField;
        }
        set {
            this.parentNameField = value;
        }
    }
    
    /// <remarks/>
    public string ReleaseName {
        get {
            return this.releaseNameField;
        }
        set {
            this.releaseNameField = value;
        }
    }
    
    /// <remarks/>
    public string FeatureName {
        get {
            return this.featureNameField;
        }
        set {
            this.featureNameField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(TaskDTO))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RevisionAssignableDTO))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActorEffortDTO))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(TeamDTO))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RequestGeneralDTO))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AttachmentDTO))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CommentDTO))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PriorityDTO))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UserStoryDTO))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public abstract partial class DataTransferObject {
    
    private System.Nullable<int> idField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ID {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public partial class TaskDTO : DataTransferObject {
    
    private string commentOnChangingStateField;
    
    private System.Nullable<int> taskIDField;
    
    private string nameField;
    
    private string descriptionField;
    
    private System.Nullable<System.DateTime> startDateField;
    
    private System.Nullable<System.DateTime> endDateField;
    
    private System.Nullable<System.DateTime> createDateField;
    
    private System.Nullable<System.DateTime> modifyDateField;
    
    private System.Nullable<System.DateTime> lastCommentDateField;
    
    private System.Nullable<double> numericPriorityField;
    
    private string customField1Field;
    
    private string customField2Field;
    
    private string customField3Field;
    
    private string customField4Field;
    
    private string customField5Field;
    
    private string customField6Field;
    
    private string customField7Field;
    
    private string customField8Field;
    
    private string customField9Field;
    
    private string customField10Field;
    
    private string customField11Field;
    
    private string customField12Field;
    
    private string customField13Field;
    
    private string customField14Field;
    
    private string customField15Field;
    
    private System.Nullable<decimal> effortField;
    
    private System.Nullable<decimal> effortCompletedField;
    
    private System.Nullable<decimal> effortToDoField;
    
    private System.Nullable<decimal> timeSpentField;
    
    private System.Nullable<decimal> timeRemainField;
    
    private System.Nullable<int> lastCommentUserIDField;
    
    private System.Nullable<int> ownerIDField;
    
    private System.Nullable<int> lastEditorIDField;
    
    private System.Nullable<int> entityStateIDField;
    
    private System.Nullable<int> priorityIDField;
    
    private System.Nullable<int> projectIDField;
    
    private System.Nullable<int> iterationIDField;
    
    private System.Nullable<int> parentIDField;
    
    private System.Nullable<int> releaseIDField;
    
    private System.Nullable<int> userStoryIDField;
    
    private string entityTypeNameField;
    
    private string entityStateNameField;
    
    private string priorityNameField;
    
    private string projectNameField;
    
    private string iterationNameField;
    
    private string parentNameField;
    
    private string releaseNameField;
    
    private string userStoryNameField;
    
    /// <remarks/>
    public string CommentOnChangingState {
        get {
            return this.commentOnChangingStateField;
        }
        set {
            this.commentOnChangingStateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> TaskID {
        get {
            return this.taskIDField;
        }
        set {
            this.taskIDField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> StartDate {
        get {
            return this.startDateField;
        }
        set {
            this.startDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> EndDate {
        get {
            return this.endDateField;
        }
        set {
            this.endDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> CreateDate {
        get {
            return this.createDateField;
        }
        set {
            this.createDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> ModifyDate {
        get {
            return this.modifyDateField;
        }
        set {
            this.modifyDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> LastCommentDate {
        get {
            return this.lastCommentDateField;
        }
        set {
            this.lastCommentDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<double> NumericPriority {
        get {
            return this.numericPriorityField;
        }
        set {
            this.numericPriorityField = value;
        }
    }
    
    /// <remarks/>
    public string CustomField1 {
        get {
            return this.customField1Field;
        }
        set {
            this.customField1Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField2 {
        get {
            return this.customField2Field;
        }
        set {
            this.customField2Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField3 {
        get {
            return this.customField3Field;
        }
        set {
            this.customField3Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField4 {
        get {
            return this.customField4Field;
        }
        set {
            this.customField4Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField5 {
        get {
            return this.customField5Field;
        }
        set {
            this.customField5Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField6 {
        get {
            return this.customField6Field;
        }
        set {
            this.customField6Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField7 {
        get {
            return this.customField7Field;
        }
        set {
            this.customField7Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField8 {
        get {
            return this.customField8Field;
        }
        set {
            this.customField8Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField9 {
        get {
            return this.customField9Field;
        }
        set {
            this.customField9Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField10 {
        get {
            return this.customField10Field;
        }
        set {
            this.customField10Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField11 {
        get {
            return this.customField11Field;
        }
        set {
            this.customField11Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField12 {
        get {
            return this.customField12Field;
        }
        set {
            this.customField12Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField13 {
        get {
            return this.customField13Field;
        }
        set {
            this.customField13Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField14 {
        get {
            return this.customField14Field;
        }
        set {
            this.customField14Field = value;
        }
    }
    
    /// <remarks/>
    public string CustomField15 {
        get {
            return this.customField15Field;
        }
        set {
            this.customField15Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> Effort {
        get {
            return this.effortField;
        }
        set {
            this.effortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> EffortCompleted {
        get {
            return this.effortCompletedField;
        }
        set {
            this.effortCompletedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> EffortToDo {
        get {
            return this.effortToDoField;
        }
        set {
            this.effortToDoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> TimeSpent {
        get {
            return this.timeSpentField;
        }
        set {
            this.timeSpentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> TimeRemain {
        get {
            return this.timeRemainField;
        }
        set {
            this.timeRemainField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> LastCommentUserID {
        get {
            return this.lastCommentUserIDField;
        }
        set {
            this.lastCommentUserIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> OwnerID {
        get {
            return this.ownerIDField;
        }
        set {
            this.ownerIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> LastEditorID {
        get {
            return this.lastEditorIDField;
        }
        set {
            this.lastEditorIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> EntityStateID {
        get {
            return this.entityStateIDField;
        }
        set {
            this.entityStateIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> PriorityID {
        get {
            return this.priorityIDField;
        }
        set {
            this.priorityIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ProjectID {
        get {
            return this.projectIDField;
        }
        set {
            this.projectIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> IterationID {
        get {
            return this.iterationIDField;
        }
        set {
            this.iterationIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ParentID {
        get {
            return this.parentIDField;
        }
        set {
            this.parentIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ReleaseID {
        get {
            return this.releaseIDField;
        }
        set {
            this.releaseIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> UserStoryID {
        get {
            return this.userStoryIDField;
        }
        set {
            this.userStoryIDField = value;
        }
    }
    
    /// <remarks/>
    public string EntityTypeName {
        get {
            return this.entityTypeNameField;
        }
        set {
            this.entityTypeNameField = value;
        }
    }
    
    /// <remarks/>
    public string EntityStateName {
        get {
            return this.entityStateNameField;
        }
        set {
            this.entityStateNameField = value;
        }
    }
    
    /// <remarks/>
    public string PriorityName {
        get {
            return this.priorityNameField;
        }
        set {
            this.priorityNameField = value;
        }
    }
    
    /// <remarks/>
    public string ProjectName {
        get {
            return this.projectNameField;
        }
        set {
            this.projectNameField = value;
        }
    }
    
    /// <remarks/>
    public string IterationName {
        get {
            return this.iterationNameField;
        }
        set {
            this.iterationNameField = value;
        }
    }
    
    /// <remarks/>
    public string ParentName {
        get {
            return this.parentNameField;
        }
        set {
            this.parentNameField = value;
        }
    }
    
    /// <remarks/>
    public string ReleaseName {
        get {
            return this.releaseNameField;
        }
        set {
            this.releaseNameField = value;
        }
    }
    
    /// <remarks/>
    public string UserStoryName {
        get {
            return this.userStoryNameField;
        }
        set {
            this.userStoryNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public partial class RevisionAssignableDTO : DataTransferObject {
    
    private System.Nullable<int> revisionAssignableIDField;
    
    private System.Nullable<int> assignableIDField;
    
    private System.Nullable<int> revisionIDField;
    
    private string assignableNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> RevisionAssignableID {
        get {
            return this.revisionAssignableIDField;
        }
        set {
            this.revisionAssignableIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> AssignableID {
        get {
            return this.assignableIDField;
        }
        set {
            this.assignableIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> RevisionID {
        get {
            return this.revisionIDField;
        }
        set {
            this.revisionIDField = value;
        }
    }
    
    /// <remarks/>
    public string AssignableName {
        get {
            return this.assignableNameField;
        }
        set {
            this.assignableNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public partial class ActorEffortDTO : DataTransferObject {
    
    private System.Nullable<int> actorEffortIDField;
    
    private System.Nullable<decimal> initialEstimateField;
    
    private System.Nullable<decimal> effortField;
    
    private System.Nullable<decimal> effortCompletedField;
    
    private System.Nullable<decimal> effortToDoField;
    
    private System.Nullable<decimal> timeSpentField;
    
    private System.Nullable<decimal> timeRemainField;
    
    private System.Nullable<bool> substractionFromParentEffortField;
    
    private System.Nullable<int> assignableIDField;
    
    private System.Nullable<int> actorIDField;
    
    private string assignableNameField;
    
    private string actorNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ActorEffortID {
        get {
            return this.actorEffortIDField;
        }
        set {
            this.actorEffortIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> InitialEstimate {
        get {
            return this.initialEstimateField;
        }
        set {
            this.initialEstimateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> Effort {
        get {
            return this.effortField;
        }
        set {
            this.effortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> EffortCompleted {
        get {
            return this.effortCompletedField;
        }
        set {
            this.effortCompletedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> EffortToDo {
        get {
            return this.effortToDoField;
        }
        set {
            this.effortToDoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> TimeSpent {
        get {
            return this.timeSpentField;
        }
        set {
            this.timeSpentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<decimal> TimeRemain {
        get {
            return this.timeRemainField;
        }
        set {
            this.timeRemainField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<bool> SubstractionFromParentEffort {
        get {
            return this.substractionFromParentEffortField;
        }
        set {
            this.substractionFromParentEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> AssignableID {
        get {
            return this.assignableIDField;
        }
        set {
            this.assignableIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ActorID {
        get {
            return this.actorIDField;
        }
        set {
            this.actorIDField = value;
        }
    }
    
    /// <remarks/>
    public string AssignableName {
        get {
            return this.assignableNameField;
        }
        set {
            this.assignableNameField = value;
        }
    }
    
    /// <remarks/>
    public string ActorName {
        get {
            return this.actorNameField;
        }
        set {
            this.actorNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public partial class TeamDTO : DataTransferObject {
    
    private System.Nullable<int> teamIDField;
    
    private System.Nullable<int> assignableIDField;
    
    private System.Nullable<int> userIDField;
    
    private System.Nullable<int> actorIDField;
    
    private string assignableNameField;
    
    private string actorNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> TeamID {
        get {
            return this.teamIDField;
        }
        set {
            this.teamIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> AssignableID {
        get {
            return this.assignableIDField;
        }
        set {
            this.assignableIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> UserID {
        get {
            return this.userIDField;
        }
        set {
            this.userIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ActorID {
        get {
            return this.actorIDField;
        }
        set {
            this.actorIDField = value;
        }
    }
    
    /// <remarks/>
    public string AssignableName {
        get {
            return this.assignableNameField;
        }
        set {
            this.assignableNameField = value;
        }
    }
    
    /// <remarks/>
    public string ActorName {
        get {
            return this.actorNameField;
        }
        set {
            this.actorNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public partial class RequestGeneralDTO : DataTransferObject {
    
    private System.Nullable<int> requestGeneralIDField;
    
    private System.Nullable<System.DateTime> createDateField;
    
    private System.Nullable<bool> isAttachedField;
    
    private System.Nullable<int> generalIDField;
    
    private System.Nullable<int> requestIDField;
    
    private string generalNameField;
    
    private string requestNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> RequestGeneralID {
        get {
            return this.requestGeneralIDField;
        }
        set {
            this.requestGeneralIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> CreateDate {
        get {
            return this.createDateField;
        }
        set {
            this.createDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<bool> IsAttached {
        get {
            return this.isAttachedField;
        }
        set {
            this.isAttachedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> GeneralID {
        get {
            return this.generalIDField;
        }
        set {
            this.generalIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> RequestID {
        get {
            return this.requestIDField;
        }
        set {
            this.requestIDField = value;
        }
    }
    
    /// <remarks/>
    public string GeneralName {
        get {
            return this.generalNameField;
        }
        set {
            this.generalNameField = value;
        }
    }
    
    /// <remarks/>
    public string RequestName {
        get {
            return this.requestNameField;
        }
        set {
            this.requestNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public partial class AttachmentDTO : DataTransferObject {
    
    private System.Nullable<long> fileSizeField;
    
    private System.Nullable<int> attachmentIDField;
    
    private string originalFileNameField;
    
    private string uniqueFileNameField;
    
    private System.Nullable<System.DateTime> createDateField;
    
    private string descriptionField;
    
    private System.Nullable<int> generalIDField;
    
    private System.Nullable<int> messageIDField;
    
    private System.Nullable<int> ownerIDField;
    
    private System.Nullable<int> attachmentFileIDField;
    
    private string generalNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<long> FileSize {
        get {
            return this.fileSizeField;
        }
        set {
            this.fileSizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> AttachmentID {
        get {
            return this.attachmentIDField;
        }
        set {
            this.attachmentIDField = value;
        }
    }
    
    /// <remarks/>
    public string OriginalFileName {
        get {
            return this.originalFileNameField;
        }
        set {
            this.originalFileNameField = value;
        }
    }
    
    /// <remarks/>
    public string UniqueFileName {
        get {
            return this.uniqueFileNameField;
        }
        set {
            this.uniqueFileNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> CreateDate {
        get {
            return this.createDateField;
        }
        set {
            this.createDateField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> GeneralID {
        get {
            return this.generalIDField;
        }
        set {
            this.generalIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> MessageID {
        get {
            return this.messageIDField;
        }
        set {
            this.messageIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> OwnerID {
        get {
            return this.ownerIDField;
        }
        set {
            this.ownerIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> AttachmentFileID {
        get {
            return this.attachmentFileIDField;
        }
        set {
            this.attachmentFileIDField = value;
        }
    }
    
    /// <remarks/>
    public string GeneralName {
        get {
            return this.generalNameField;
        }
        set {
            this.generalNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public partial class CommentDTO : DataTransferObject {
    
    private System.Nullable<int> commentIDField;
    
    private string descriptionField;
    
    private System.Nullable<System.DateTime> createDateField;
    
    private System.Nullable<int> generalIDField;
    
    private System.Nullable<int> ownerIDField;
    
    private System.Nullable<int> parentIDField;
    
    private string generalNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> CommentID {
        get {
            return this.commentIDField;
        }
        set {
            this.commentIDField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> CreateDate {
        get {
            return this.createDateField;
        }
        set {
            this.createDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> GeneralID {
        get {
            return this.generalIDField;
        }
        set {
            this.generalIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> OwnerID {
        get {
            return this.ownerIDField;
        }
        set {
            this.ownerIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ParentID {
        get {
            return this.parentIDField;
        }
        set {
            this.parentIDField = value;
        }
    }
    
    /// <remarks/>
    public string GeneralName {
        get {
            return this.generalNameField;
        }
        set {
            this.generalNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://targetprocess.com")]
public partial class PriorityDTO : DataTransferObject {
    
    private System.Nullable<int> priorityIDField;
    
    private string nameField;
    
    private System.Nullable<int> importanceField;
    
    private System.Nullable<bool> isDefaultField;
    
    private string entityTypeNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> PriorityID {
        get {
            return this.priorityIDField;
        }
        set {
            this.priorityIDField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> Importance {
        get {
            return this.importanceField;
        }
        set {
            this.importanceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<bool> IsDefault {
        get {
            return this.isDefaultField;
        }
        set {
            this.isDefaultField = value;
        }
    }
    
    /// <remarks/>
    public string EntityTypeName {
        get {
            return this.entityTypeNameField;
        }
        set {
            this.entityTypeNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAllForLastCommentUserCompletedEventHandler(object sender, RetrieveAllForLastCommentUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAllForLastCommentUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAllForLastCommentUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserStoryDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserStoryDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAllForProjectCompletedEventHandler(object sender, RetrieveAllForProjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAllForProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAllForProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserStoryDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserStoryDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAllForOwnerCompletedEventHandler(object sender, RetrieveAllForOwnerCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAllForOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAllForOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserStoryDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserStoryDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAllForEntityStateCompletedEventHandler(object sender, RetrieveAllForEntityStateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAllForEntityStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAllForEntityStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserStoryDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserStoryDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ChangeStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAllForPriorityCompletedEventHandler(object sender, RetrieveAllForPriorityCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAllForPriorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAllForPriorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserStoryDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserStoryDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void GetPrioritiesCompletedEventHandler(object sender, GetPrioritiesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPrioritiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPrioritiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public PriorityDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((PriorityDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAllForIterationCompletedEventHandler(object sender, RetrieveAllForIterationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAllForIterationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAllForIterationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserStoryDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserStoryDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAllForReleaseCompletedEventHandler(object sender, RetrieveAllForReleaseCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAllForReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAllForReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserStoryDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserStoryDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAllForFeatureCompletedEventHandler(object sender, RetrieveAllForFeatureCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAllForFeatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAllForFeatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserStoryDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserStoryDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveCommentsForUserStoryCompletedEventHandler(object sender, RetrieveCommentsForUserStoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveCommentsForUserStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveCommentsForUserStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CommentDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CommentDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void AddCommentToUserStoryCompletedEventHandler(object sender, AddCommentToUserStoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddCommentToUserStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddCommentToUserStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RemoveCommentFromUserStoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAttachmentsForUserStoryCompletedEventHandler(object sender, RetrieveAttachmentsForUserStoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAttachmentsForUserStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAttachmentsForUserStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public AttachmentDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((AttachmentDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RemoveAttachmentFromUserStoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void AddAttachmentToUserStoryCompletedEventHandler(object sender, AddAttachmentToUserStoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddAttachmentToUserStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddAttachmentToUserStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAttachedRequestsForUserStoryCompletedEventHandler(object sender, RetrieveAttachedRequestsForUserStoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAttachedRequestsForUserStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAttachedRequestsForUserStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public RequestGeneralDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((RequestGeneralDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void AddRequestGeneralToUserStoryCompletedEventHandler(object sender, AddRequestGeneralToUserStoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddRequestGeneralToUserStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddRequestGeneralToUserStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RemoveRequestGeneralFromUserStoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveTeamsForUserStoryCompletedEventHandler(object sender, RetrieveTeamsForUserStoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveTeamsForUserStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveTeamsForUserStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TeamDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TeamDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void AddTeamToUserStoryCompletedEventHandler(object sender, AddTeamToUserStoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddTeamToUserStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddTeamToUserStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void AssignUserAsActorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void AssignUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void AssignUserByEmailOrLoginAsActorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void AssignUserByEmailOrLoginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveOpenForUserCompletedEventHandler(object sender, RetrieveOpenForUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveOpenForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveOpenForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserStoryDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserStoryDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveOpenForMeCompletedEventHandler(object sender, RetrieveOpenForMeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveOpenForMeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveOpenForMeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserStoryDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserStoryDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RemoveTeamFromUserStoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveActorEffortsForUserStoryCompletedEventHandler(object sender, RetrieveActorEffortsForUserStoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveActorEffortsForUserStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveActorEffortsForUserStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ActorEffortDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ActorEffortDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ChangeEffortCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveRevisionAssignablesForUserStoryCompletedEventHandler(object sender, RetrieveRevisionAssignablesForUserStoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveRevisionAssignablesForUserStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveRevisionAssignablesForUserStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public RevisionAssignableDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((RevisionAssignableDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void AddRevisionAssignableToUserStoryCompletedEventHandler(object sender, AddRevisionAssignableToUserStoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddRevisionAssignableToUserStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddRevisionAssignableToUserStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RemoveRevisionAssignableFromUserStoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveTasksForUserStoryCompletedEventHandler(object sender, RetrieveTasksForUserStoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveTasksForUserStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveTasksForUserStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TaskDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TaskDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void AddTaskToUserStoryCompletedEventHandler(object sender, AddTaskToUserStoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddTaskToUserStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddTaskToUserStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RemoveTaskFromUserStoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void GetByIDCompletedEventHandler(object sender, GetByIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserStoryDTO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserStoryDTO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void DeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveAllCompletedEventHandler(object sender, RetrieveAllCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserStoryDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserStoryDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveCompletedEventHandler(object sender, RetrieveCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserStoryDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserStoryDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void GetIDsCompletedEventHandler(object sender, GetIDsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrievePageCompletedEventHandler(object sender, RetrievePageCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrievePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrievePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserStoryDTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserStoryDTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void RetrieveCountCompletedEventHandler(object sender, RetrieveCountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RetrieveCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RetrieveCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}
}