//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;
using CIFactory.TargetProcess.NAnt;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 

namespace CIFactory.TargetProcess.BugWebService
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "BugServiceSoap", Namespace = "http://targetprocess.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTransferObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class BugService : Microsoft.Web.Services3.WebServicesClientProtocol
    {

        private System.Threading.SendOrPostCallback GetSeveritiesOperationCompleted;

        private System.Threading.SendOrPostCallback AddBugWithAttachmentOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAllForLastCommentUserOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAllForProjectOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAllForOwnerOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAllForEntityStateOperationCompleted;

        private System.Threading.SendOrPostCallback ChangeStateOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAllForPriorityOperationCompleted;

        private System.Threading.SendOrPostCallback GetPrioritiesOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAllForIterationOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAllForReleaseOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAllForSeverityOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAllForBuildOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAllForUserStoryOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveCommentsForBugOperationCompleted;

        private System.Threading.SendOrPostCallback AddCommentToBugOperationCompleted;

        private System.Threading.SendOrPostCallback RemoveCommentFromBugOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAttachmentsForBugOperationCompleted;

        private System.Threading.SendOrPostCallback RemoveAttachmentFromBugOperationCompleted;

        private System.Threading.SendOrPostCallback AddAttachmentToBugOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAttachedRequestsForBugOperationCompleted;

        private System.Threading.SendOrPostCallback AddRequestGeneralToBugOperationCompleted;

        private System.Threading.SendOrPostCallback RemoveRequestGeneralFromBugOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveTeamsForBugOperationCompleted;

        private System.Threading.SendOrPostCallback AddTeamToBugOperationCompleted;

        private System.Threading.SendOrPostCallback AssignUserAsActorOperationCompleted;

        private System.Threading.SendOrPostCallback AssignUserOperationCompleted;

        private System.Threading.SendOrPostCallback AssignUserByEmailOrLoginAsActorOperationCompleted;

        private System.Threading.SendOrPostCallback AssignUserByEmailOrLoginOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveOpenForUserOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveOpenForMeOperationCompleted;

        private System.Threading.SendOrPostCallback RemoveTeamFromBugOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveActorEffortsForBugOperationCompleted;

        private System.Threading.SendOrPostCallback ChangeEffortOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveRevisionAssignablesForBugOperationCompleted;

        private System.Threading.SendOrPostCallback AddRevisionAssignableToBugOperationCompleted;

        private System.Threading.SendOrPostCallback RemoveRevisionAssignableFromBugOperationCompleted;

        private System.Threading.SendOrPostCallback GetByIDOperationCompleted;

        private System.Threading.SendOrPostCallback CreateOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateOperationCompleted;

        private System.Threading.SendOrPostCallback DeleteOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAllOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveOperationCompleted;

        private System.Threading.SendOrPostCallback GetIDsOperationCompleted;

        private System.Threading.SendOrPostCallback RetrievePageOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveCountOperationCompleted;

        /// <remarks/>
        public BugService()
        {
            this.Url = "http://agilex.tpondemand.com/Services/BugService.asmx";
        }

        /// <remarks/>
        public event GetSeveritiesCompletedEventHandler GetSeveritiesCompleted;

        /// <remarks/>
        public event AddBugWithAttachmentCompletedEventHandler AddBugWithAttachmentCompleted;

        /// <remarks/>
        public event RetrieveAllForLastCommentUserCompletedEventHandler RetrieveAllForLastCommentUserCompleted;

        /// <remarks/>
        public event RetrieveAllForProjectCompletedEventHandler RetrieveAllForProjectCompleted;

        /// <remarks/>
        public event RetrieveAllForOwnerCompletedEventHandler RetrieveAllForOwnerCompleted;

        /// <remarks/>
        public event RetrieveAllForEntityStateCompletedEventHandler RetrieveAllForEntityStateCompleted;

        /// <remarks/>
        public event ChangeStateCompletedEventHandler ChangeStateCompleted;

        /// <remarks/>
        public event RetrieveAllForPriorityCompletedEventHandler RetrieveAllForPriorityCompleted;

        /// <remarks/>
        public event GetPrioritiesCompletedEventHandler GetPrioritiesCompleted;

        /// <remarks/>
        public event RetrieveAllForIterationCompletedEventHandler RetrieveAllForIterationCompleted;

        /// <remarks/>
        public event RetrieveAllForReleaseCompletedEventHandler RetrieveAllForReleaseCompleted;

        /// <remarks/>
        public event RetrieveAllForSeverityCompletedEventHandler RetrieveAllForSeverityCompleted;

        /// <remarks/>
        public event RetrieveAllForBuildCompletedEventHandler RetrieveAllForBuildCompleted;

        /// <remarks/>
        public event RetrieveAllForUserStoryCompletedEventHandler RetrieveAllForUserStoryCompleted;

        /// <remarks/>
        public event RetrieveCommentsForBugCompletedEventHandler RetrieveCommentsForBugCompleted;

        /// <remarks/>
        public event AddCommentToBugCompletedEventHandler AddCommentToBugCompleted;

        /// <remarks/>
        public event RemoveCommentFromBugCompletedEventHandler RemoveCommentFromBugCompleted;

        /// <remarks/>
        public event RetrieveAttachmentsForBugCompletedEventHandler RetrieveAttachmentsForBugCompleted;

        /// <remarks/>
        public event RemoveAttachmentFromBugCompletedEventHandler RemoveAttachmentFromBugCompleted;

        /// <remarks/>
        public event AddAttachmentToBugCompletedEventHandler AddAttachmentToBugCompleted;

        /// <remarks/>
        public event RetrieveAttachedRequestsForBugCompletedEventHandler RetrieveAttachedRequestsForBugCompleted;

        /// <remarks/>
        public event AddRequestGeneralToBugCompletedEventHandler AddRequestGeneralToBugCompleted;

        /// <remarks/>
        public event RemoveRequestGeneralFromBugCompletedEventHandler RemoveRequestGeneralFromBugCompleted;

        /// <remarks/>
        public event RetrieveTeamsForBugCompletedEventHandler RetrieveTeamsForBugCompleted;

        /// <remarks/>
        public event AddTeamToBugCompletedEventHandler AddTeamToBugCompleted;

        /// <remarks/>
        public event AssignUserAsActorCompletedEventHandler AssignUserAsActorCompleted;

        /// <remarks/>
        public event AssignUserCompletedEventHandler AssignUserCompleted;

        /// <remarks/>
        public event AssignUserByEmailOrLoginAsActorCompletedEventHandler AssignUserByEmailOrLoginAsActorCompleted;

        /// <remarks/>
        public event AssignUserByEmailOrLoginCompletedEventHandler AssignUserByEmailOrLoginCompleted;

        /// <remarks/>
        public event RetrieveOpenForUserCompletedEventHandler RetrieveOpenForUserCompleted;

        /// <remarks/>
        public event RetrieveOpenForMeCompletedEventHandler RetrieveOpenForMeCompleted;

        /// <remarks/>
        public event RemoveTeamFromBugCompletedEventHandler RemoveTeamFromBugCompleted;

        /// <remarks/>
        public event RetrieveActorEffortsForBugCompletedEventHandler RetrieveActorEffortsForBugCompleted;

        /// <remarks/>
        public event ChangeEffortCompletedEventHandler ChangeEffortCompleted;

        /// <remarks/>
        public event RetrieveRevisionAssignablesForBugCompletedEventHandler RetrieveRevisionAssignablesForBugCompleted;

        /// <remarks/>
        public event AddRevisionAssignableToBugCompletedEventHandler AddRevisionAssignableToBugCompleted;

        /// <remarks/>
        public event RemoveRevisionAssignableFromBugCompletedEventHandler RemoveRevisionAssignableFromBugCompleted;

        /// <remarks/>
        public event GetByIDCompletedEventHandler GetByIDCompleted;

        /// <remarks/>
        public event CreateCompletedEventHandler CreateCompleted;

        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;

        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;

        /// <remarks/>
        public event RetrieveAllCompletedEventHandler RetrieveAllCompleted;

        /// <remarks/>
        public event RetrieveCompletedEventHandler RetrieveCompleted;

        /// <remarks/>
        public event GetIDsCompletedEventHandler GetIDsCompleted;

        /// <remarks/>
        public event RetrievePageCompletedEventHandler RetrievePageCompleted;

        /// <remarks/>
        public event RetrieveCountCompletedEventHandler RetrieveCountCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/GetSeverities", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SeverityDTO[] GetSeverities()
        {
            object[] results = this.Invoke("GetSeverities", new object[0]);
            return ((SeverityDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSeverities(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSeverities", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public SeverityDTO[] EndGetSeverities(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SeverityDTO[])(results[0]));
        }

        /// <remarks/>
        public void GetSeveritiesAsync()
        {
            this.GetSeveritiesAsync(null);
        }

        /// <remarks/>
        public void GetSeveritiesAsync(object userState)
        {
            if ((this.GetSeveritiesOperationCompleted == null))
            {
                this.GetSeveritiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeveritiesOperationCompleted);
            }
            this.InvokeAsync("GetSeverities", new object[0], this.GetSeveritiesOperationCompleted, userState);
        }

        private void OnGetSeveritiesOperationCompleted(object arg)
        {
            if ((this.GetSeveritiesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeveritiesCompleted(this, new GetSeveritiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddBugWithAttachment", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddBugWithAttachment(BugDTO bug, string fileName, string description)
        {
            object[] results = this.Invoke("AddBugWithAttachment", new object[] {
                    bug,
                    fileName,
                    description});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddBugWithAttachment(BugDTO bug, string fileName, string description, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddBugWithAttachment", new object[] {
                    bug,
                    fileName,
                    description}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddBugWithAttachment(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddBugWithAttachmentAsync(BugDTO bug, string fileName, string description)
        {
            this.AddBugWithAttachmentAsync(bug, fileName, description, null);
        }

        /// <remarks/>
        public void AddBugWithAttachmentAsync(BugDTO bug, string fileName, string description, object userState)
        {
            if ((this.AddBugWithAttachmentOperationCompleted == null))
            {
                this.AddBugWithAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBugWithAttachmentOperationCompleted);
            }
            this.InvokeAsync("AddBugWithAttachment", new object[] {
                    bug,
                    fileName,
                    description}, this.AddBugWithAttachmentOperationCompleted, userState);
        }

        private void OnAddBugWithAttachmentOperationCompleted(object arg)
        {
            if ((this.AddBugWithAttachmentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBugWithAttachmentCompleted(this, new AddBugWithAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForLastCommentUser", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BugDTO[] RetrieveAllForLastCommentUser(int lastCommentUserID)
        {
            object[] results = this.Invoke("RetrieveAllForLastCommentUser", new object[] {
                    lastCommentUserID});
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAllForLastCommentUser(int lastCommentUserID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAllForLastCommentUser", new object[] {
                    lastCommentUserID}, callback, asyncState);
        }

        /// <remarks/>
        public BugDTO[] EndRetrieveAllForLastCommentUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAllForLastCommentUserAsync(int lastCommentUserID)
        {
            this.RetrieveAllForLastCommentUserAsync(lastCommentUserID, null);
        }

        /// <remarks/>
        public void RetrieveAllForLastCommentUserAsync(int lastCommentUserID, object userState)
        {
            if ((this.RetrieveAllForLastCommentUserOperationCompleted == null))
            {
                this.RetrieveAllForLastCommentUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForLastCommentUserOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllForLastCommentUser", new object[] {
                    lastCommentUserID}, this.RetrieveAllForLastCommentUserOperationCompleted, userState);
        }

        private void OnRetrieveAllForLastCommentUserOperationCompleted(object arg)
        {
            if ((this.RetrieveAllForLastCommentUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllForLastCommentUserCompleted(this, new RetrieveAllForLastCommentUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForProject", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BugDTO[] RetrieveAllForProject(int projectID)
        {
            object[] results = this.Invoke("RetrieveAllForProject", new object[] {
                    projectID});
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAllForProject(int projectID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAllForProject", new object[] {
                    projectID}, callback, asyncState);
        }

        /// <remarks/>
        public BugDTO[] EndRetrieveAllForProject(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAllForProjectAsync(int projectID)
        {
            this.RetrieveAllForProjectAsync(projectID, null);
        }

        /// <remarks/>
        public void RetrieveAllForProjectAsync(int projectID, object userState)
        {
            if ((this.RetrieveAllForProjectOperationCompleted == null))
            {
                this.RetrieveAllForProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForProjectOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllForProject", new object[] {
                    projectID}, this.RetrieveAllForProjectOperationCompleted, userState);
        }

        private void OnRetrieveAllForProjectOperationCompleted(object arg)
        {
            if ((this.RetrieveAllForProjectCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllForProjectCompleted(this, new RetrieveAllForProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForOwner", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BugDTO[] RetrieveAllForOwner(int ownerID)
        {
            object[] results = this.Invoke("RetrieveAllForOwner", new object[] {
                    ownerID});
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAllForOwner(int ownerID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAllForOwner", new object[] {
                    ownerID}, callback, asyncState);
        }

        /// <remarks/>
        public BugDTO[] EndRetrieveAllForOwner(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAllForOwnerAsync(int ownerID)
        {
            this.RetrieveAllForOwnerAsync(ownerID, null);
        }

        /// <remarks/>
        public void RetrieveAllForOwnerAsync(int ownerID, object userState)
        {
            if ((this.RetrieveAllForOwnerOperationCompleted == null))
            {
                this.RetrieveAllForOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForOwnerOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllForOwner", new object[] {
                    ownerID}, this.RetrieveAllForOwnerOperationCompleted, userState);
        }

        private void OnRetrieveAllForOwnerOperationCompleted(object arg)
        {
            if ((this.RetrieveAllForOwnerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllForOwnerCompleted(this, new RetrieveAllForOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForEntityState", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BugDTO[] RetrieveAllForEntityState(int entityStateID)
        {
            object[] results = this.Invoke("RetrieveAllForEntityState", new object[] {
                    entityStateID});
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAllForEntityState(int entityStateID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAllForEntityState", new object[] {
                    entityStateID}, callback, asyncState);
        }

        /// <remarks/>
        public BugDTO[] EndRetrieveAllForEntityState(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAllForEntityStateAsync(int entityStateID)
        {
            this.RetrieveAllForEntityStateAsync(entityStateID, null);
        }

        /// <remarks/>
        public void RetrieveAllForEntityStateAsync(int entityStateID, object userState)
        {
            if ((this.RetrieveAllForEntityStateOperationCompleted == null))
            {
                this.RetrieveAllForEntityStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForEntityStateOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllForEntityState", new object[] {
                    entityStateID}, this.RetrieveAllForEntityStateOperationCompleted, userState);
        }

        private void OnRetrieveAllForEntityStateOperationCompleted(object arg)
        {
            if ((this.RetrieveAllForEntityStateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllForEntityStateCompleted(this, new RetrieveAllForEntityStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/ChangeState", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeState(int bugID, int entityStateID)
        {
            this.Invoke("ChangeState", new object[] {
                    bugID,
                    entityStateID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginChangeState(int bugID, int entityStateID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ChangeState", new object[] {
                    bugID,
                    entityStateID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndChangeState(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ChangeStateAsync(int bugID, int entityStateID)
        {
            this.ChangeStateAsync(bugID, entityStateID, null);
        }

        /// <remarks/>
        public void ChangeStateAsync(int bugID, int entityStateID, object userState)
        {
            if ((this.ChangeStateOperationCompleted == null))
            {
                this.ChangeStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeStateOperationCompleted);
            }
            this.InvokeAsync("ChangeState", new object[] {
                    bugID,
                    entityStateID}, this.ChangeStateOperationCompleted, userState);
        }

        private void OnChangeStateOperationCompleted(object arg)
        {
            if ((this.ChangeStateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForPriority", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BugDTO[] RetrieveAllForPriority(int priorityID)
        {
            object[] results = this.Invoke("RetrieveAllForPriority", new object[] {
                    priorityID});
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAllForPriority(int priorityID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAllForPriority", new object[] {
                    priorityID}, callback, asyncState);
        }

        /// <remarks/>
        public BugDTO[] EndRetrieveAllForPriority(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAllForPriorityAsync(int priorityID)
        {
            this.RetrieveAllForPriorityAsync(priorityID, null);
        }

        /// <remarks/>
        public void RetrieveAllForPriorityAsync(int priorityID, object userState)
        {
            if ((this.RetrieveAllForPriorityOperationCompleted == null))
            {
                this.RetrieveAllForPriorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForPriorityOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllForPriority", new object[] {
                    priorityID}, this.RetrieveAllForPriorityOperationCompleted, userState);
        }

        private void OnRetrieveAllForPriorityOperationCompleted(object arg)
        {
            if ((this.RetrieveAllForPriorityCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllForPriorityCompleted(this, new RetrieveAllForPriorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/GetPriorities", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PriorityDTO[] GetPriorities()
        {
            object[] results = this.Invoke("GetPriorities", new object[0]);
            return ((PriorityDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetPriorities(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetPriorities", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public PriorityDTO[] EndGetPriorities(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((PriorityDTO[])(results[0]));
        }

        /// <remarks/>
        public void GetPrioritiesAsync()
        {
            this.GetPrioritiesAsync(null);
        }

        /// <remarks/>
        public void GetPrioritiesAsync(object userState)
        {
            if ((this.GetPrioritiesOperationCompleted == null))
            {
                this.GetPrioritiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrioritiesOperationCompleted);
            }
            this.InvokeAsync("GetPriorities", new object[0], this.GetPrioritiesOperationCompleted, userState);
        }

        private void OnGetPrioritiesOperationCompleted(object arg)
        {
            if ((this.GetPrioritiesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrioritiesCompleted(this, new GetPrioritiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForIteration", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BugDTO[] RetrieveAllForIteration(int iterationID)
        {
            object[] results = this.Invoke("RetrieveAllForIteration", new object[] {
                    iterationID});
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAllForIteration(int iterationID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAllForIteration", new object[] {
                    iterationID}, callback, asyncState);
        }

        /// <remarks/>
        public BugDTO[] EndRetrieveAllForIteration(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAllForIterationAsync(int iterationID)
        {
            this.RetrieveAllForIterationAsync(iterationID, null);
        }

        /// <remarks/>
        public void RetrieveAllForIterationAsync(int iterationID, object userState)
        {
            if ((this.RetrieveAllForIterationOperationCompleted == null))
            {
                this.RetrieveAllForIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForIterationOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllForIteration", new object[] {
                    iterationID}, this.RetrieveAllForIterationOperationCompleted, userState);
        }

        private void OnRetrieveAllForIterationOperationCompleted(object arg)
        {
            if ((this.RetrieveAllForIterationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllForIterationCompleted(this, new RetrieveAllForIterationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForRelease", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BugDTO[] RetrieveAllForRelease(int releaseID)
        {
            object[] results = this.Invoke("RetrieveAllForRelease", new object[] {
                    releaseID});
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAllForRelease(int releaseID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAllForRelease", new object[] {
                    releaseID}, callback, asyncState);
        }

        /// <remarks/>
        public BugDTO[] EndRetrieveAllForRelease(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAllForReleaseAsync(int releaseID)
        {
            this.RetrieveAllForReleaseAsync(releaseID, null);
        }

        /// <remarks/>
        public void RetrieveAllForReleaseAsync(int releaseID, object userState)
        {
            if ((this.RetrieveAllForReleaseOperationCompleted == null))
            {
                this.RetrieveAllForReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForReleaseOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllForRelease", new object[] {
                    releaseID}, this.RetrieveAllForReleaseOperationCompleted, userState);
        }

        private void OnRetrieveAllForReleaseOperationCompleted(object arg)
        {
            if ((this.RetrieveAllForReleaseCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllForReleaseCompleted(this, new RetrieveAllForReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForSeverity", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BugDTO[] RetrieveAllForSeverity(int severityID)
        {
            object[] results = this.Invoke("RetrieveAllForSeverity", new object[] {
                    severityID});
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAllForSeverity(int severityID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAllForSeverity", new object[] {
                    severityID}, callback, asyncState);
        }

        /// <remarks/>
        public BugDTO[] EndRetrieveAllForSeverity(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAllForSeverityAsync(int severityID)
        {
            this.RetrieveAllForSeverityAsync(severityID, null);
        }

        /// <remarks/>
        public void RetrieveAllForSeverityAsync(int severityID, object userState)
        {
            if ((this.RetrieveAllForSeverityOperationCompleted == null))
            {
                this.RetrieveAllForSeverityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForSeverityOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllForSeverity", new object[] {
                    severityID}, this.RetrieveAllForSeverityOperationCompleted, userState);
        }

        private void OnRetrieveAllForSeverityOperationCompleted(object arg)
        {
            if ((this.RetrieveAllForSeverityCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllForSeverityCompleted(this, new RetrieveAllForSeverityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForBuild", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BugDTO[] RetrieveAllForBuild(int buildID)
        {
            object[] results = this.Invoke("RetrieveAllForBuild", new object[] {
                    buildID});
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAllForBuild(int buildID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAllForBuild", new object[] {
                    buildID}, callback, asyncState);
        }

        /// <remarks/>
        public BugDTO[] EndRetrieveAllForBuild(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAllForBuildAsync(int buildID)
        {
            this.RetrieveAllForBuildAsync(buildID, null);
        }

        /// <remarks/>
        public void RetrieveAllForBuildAsync(int buildID, object userState)
        {
            if ((this.RetrieveAllForBuildOperationCompleted == null))
            {
                this.RetrieveAllForBuildOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForBuildOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllForBuild", new object[] {
                    buildID}, this.RetrieveAllForBuildOperationCompleted, userState);
        }

        private void OnRetrieveAllForBuildOperationCompleted(object arg)
        {
            if ((this.RetrieveAllForBuildCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllForBuildCompleted(this, new RetrieveAllForBuildCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForUserStory", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BugDTO[] RetrieveAllForUserStory(int userStoryID)
        {
            object[] results = this.Invoke("RetrieveAllForUserStory", new object[] {
                    userStoryID});
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAllForUserStory(int userStoryID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAllForUserStory", new object[] {
                    userStoryID}, callback, asyncState);
        }

        /// <remarks/>
        public BugDTO[] EndRetrieveAllForUserStory(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAllForUserStoryAsync(int userStoryID)
        {
            this.RetrieveAllForUserStoryAsync(userStoryID, null);
        }

        /// <remarks/>
        public void RetrieveAllForUserStoryAsync(int userStoryID, object userState)
        {
            if ((this.RetrieveAllForUserStoryOperationCompleted == null))
            {
                this.RetrieveAllForUserStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForUserStoryOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllForUserStory", new object[] {
                    userStoryID}, this.RetrieveAllForUserStoryOperationCompleted, userState);
        }

        private void OnRetrieveAllForUserStoryOperationCompleted(object arg)
        {
            if ((this.RetrieveAllForUserStoryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllForUserStoryCompleted(this, new RetrieveAllForUserStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveCommentsForBug", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CommentDTO[] RetrieveCommentsForBug(int bugID)
        {
            object[] results = this.Invoke("RetrieveCommentsForBug", new object[] {
                    bugID});
            return ((CommentDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveCommentsForBug(int bugID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveCommentsForBug", new object[] {
                    bugID}, callback, asyncState);
        }

        /// <remarks/>
        public CommentDTO[] EndRetrieveCommentsForBug(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CommentDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveCommentsForBugAsync(int bugID)
        {
            this.RetrieveCommentsForBugAsync(bugID, null);
        }

        /// <remarks/>
        public void RetrieveCommentsForBugAsync(int bugID, object userState)
        {
            if ((this.RetrieveCommentsForBugOperationCompleted == null))
            {
                this.RetrieveCommentsForBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCommentsForBugOperationCompleted);
            }
            this.InvokeAsync("RetrieveCommentsForBug", new object[] {
                    bugID}, this.RetrieveCommentsForBugOperationCompleted, userState);
        }

        private void OnRetrieveCommentsForBugOperationCompleted(object arg)
        {
            if ((this.RetrieveCommentsForBugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCommentsForBugCompleted(this, new RetrieveCommentsForBugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddCommentToBug", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddCommentToBug(int bugID, CommentDTO comment)
        {
            object[] results = this.Invoke("AddCommentToBug", new object[] {
                    bugID,
                    comment});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddCommentToBug(int bugID, CommentDTO comment, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddCommentToBug", new object[] {
                    bugID,
                    comment}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddCommentToBug(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddCommentToBugAsync(int bugID, CommentDTO comment)
        {
            this.AddCommentToBugAsync(bugID, comment, null);
        }

        /// <remarks/>
        public void AddCommentToBugAsync(int bugID, CommentDTO comment, object userState)
        {
            if ((this.AddCommentToBugOperationCompleted == null))
            {
                this.AddCommentToBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCommentToBugOperationCompleted);
            }
            this.InvokeAsync("AddCommentToBug", new object[] {
                    bugID,
                    comment}, this.AddCommentToBugOperationCompleted, userState);
        }

        private void OnAddCommentToBugOperationCompleted(object arg)
        {
            if ((this.AddCommentToBugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCommentToBugCompleted(this, new AddCommentToBugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveCommentFromBug", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveCommentFromBug(int bugID, int commentID)
        {
            this.Invoke("RemoveCommentFromBug", new object[] {
                    bugID,
                    commentID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginRemoveCommentFromBug(int bugID, int commentID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RemoveCommentFromBug", new object[] {
                    bugID,
                    commentID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndRemoveCommentFromBug(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void RemoveCommentFromBugAsync(int bugID, int commentID)
        {
            this.RemoveCommentFromBugAsync(bugID, commentID, null);
        }

        /// <remarks/>
        public void RemoveCommentFromBugAsync(int bugID, int commentID, object userState)
        {
            if ((this.RemoveCommentFromBugOperationCompleted == null))
            {
                this.RemoveCommentFromBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveCommentFromBugOperationCompleted);
            }
            this.InvokeAsync("RemoveCommentFromBug", new object[] {
                    bugID,
                    commentID}, this.RemoveCommentFromBugOperationCompleted, userState);
        }

        private void OnRemoveCommentFromBugOperationCompleted(object arg)
        {
            if ((this.RemoveCommentFromBugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveCommentFromBugCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAttachmentsForBug", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AttachmentDTO[] RetrieveAttachmentsForBug(int bugID)
        {
            object[] results = this.Invoke("RetrieveAttachmentsForBug", new object[] {
                    bugID});
            return ((AttachmentDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAttachmentsForBug(int bugID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAttachmentsForBug", new object[] {
                    bugID}, callback, asyncState);
        }

        /// <remarks/>
        public AttachmentDTO[] EndRetrieveAttachmentsForBug(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((AttachmentDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAttachmentsForBugAsync(int bugID)
        {
            this.RetrieveAttachmentsForBugAsync(bugID, null);
        }

        /// <remarks/>
        public void RetrieveAttachmentsForBugAsync(int bugID, object userState)
        {
            if ((this.RetrieveAttachmentsForBugOperationCompleted == null))
            {
                this.RetrieveAttachmentsForBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAttachmentsForBugOperationCompleted);
            }
            this.InvokeAsync("RetrieveAttachmentsForBug", new object[] {
                    bugID}, this.RetrieveAttachmentsForBugOperationCompleted, userState);
        }

        private void OnRetrieveAttachmentsForBugOperationCompleted(object arg)
        {
            if ((this.RetrieveAttachmentsForBugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAttachmentsForBugCompleted(this, new RetrieveAttachmentsForBugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveAttachmentFromBug", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveAttachmentFromBug(int bugID, int attachmentID)
        {
            this.Invoke("RemoveAttachmentFromBug", new object[] {
                    bugID,
                    attachmentID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginRemoveAttachmentFromBug(int bugID, int attachmentID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RemoveAttachmentFromBug", new object[] {
                    bugID,
                    attachmentID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndRemoveAttachmentFromBug(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void RemoveAttachmentFromBugAsync(int bugID, int attachmentID)
        {
            this.RemoveAttachmentFromBugAsync(bugID, attachmentID, null);
        }

        /// <remarks/>
        public void RemoveAttachmentFromBugAsync(int bugID, int attachmentID, object userState)
        {
            if ((this.RemoveAttachmentFromBugOperationCompleted == null))
            {
                this.RemoveAttachmentFromBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAttachmentFromBugOperationCompleted);
            }
            this.InvokeAsync("RemoveAttachmentFromBug", new object[] {
                    bugID,
                    attachmentID}, this.RemoveAttachmentFromBugOperationCompleted, userState);
        }

        private void OnRemoveAttachmentFromBugOperationCompleted(object arg)
        {
            if ((this.RemoveAttachmentFromBugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAttachmentFromBugCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddAttachmentToBug", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddAttachmentToBug(int bugID, string fileName, string description)
        {
            object[] results = this.Invoke("AddAttachmentToBug", new object[] {
                    bugID,
                    fileName,
                    description});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddAttachmentToBug(int bugID, string fileName, string description, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddAttachmentToBug", new object[] {
                    bugID,
                    fileName,
                    description}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddAttachmentToBug(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddAttachmentToBugAsync(int bugID, string fileName, string description)
        {
            this.AddAttachmentToBugAsync(bugID, fileName, description, null);
        }

        /// <remarks/>
        public void AddAttachmentToBugAsync(int bugID, string fileName, string description, object userState)
        {
            if ((this.AddAttachmentToBugOperationCompleted == null))
            {
                this.AddAttachmentToBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAttachmentToBugOperationCompleted);
            }
            this.InvokeAsync("AddAttachmentToBug", new object[] {
                    bugID,
                    fileName,
                    description}, this.AddAttachmentToBugOperationCompleted, userState);
        }

        private void OnAddAttachmentToBugOperationCompleted(object arg)
        {
            if ((this.AddAttachmentToBugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAttachmentToBugCompleted(this, new AddAttachmentToBugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAttachedRequestsForBug", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RequestGeneralDTO[] RetrieveAttachedRequestsForBug(int bugID)
        {
            object[] results = this.Invoke("RetrieveAttachedRequestsForBug", new object[] {
                    bugID});
            return ((RequestGeneralDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAttachedRequestsForBug(int bugID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAttachedRequestsForBug", new object[] {
                    bugID}, callback, asyncState);
        }

        /// <remarks/>
        public RequestGeneralDTO[] EndRetrieveAttachedRequestsForBug(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((RequestGeneralDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAttachedRequestsForBugAsync(int bugID)
        {
            this.RetrieveAttachedRequestsForBugAsync(bugID, null);
        }

        /// <remarks/>
        public void RetrieveAttachedRequestsForBugAsync(int bugID, object userState)
        {
            if ((this.RetrieveAttachedRequestsForBugOperationCompleted == null))
            {
                this.RetrieveAttachedRequestsForBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAttachedRequestsForBugOperationCompleted);
            }
            this.InvokeAsync("RetrieveAttachedRequestsForBug", new object[] {
                    bugID}, this.RetrieveAttachedRequestsForBugOperationCompleted, userState);
        }

        private void OnRetrieveAttachedRequestsForBugOperationCompleted(object arg)
        {
            if ((this.RetrieveAttachedRequestsForBugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAttachedRequestsForBugCompleted(this, new RetrieveAttachedRequestsForBugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddRequestGeneralToBug", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddRequestGeneralToBug(int bugID, RequestGeneralDTO requestGeneral)
        {
            object[] results = this.Invoke("AddRequestGeneralToBug", new object[] {
                    bugID,
                    requestGeneral});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddRequestGeneralToBug(int bugID, RequestGeneralDTO requestGeneral, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddRequestGeneralToBug", new object[] {
                    bugID,
                    requestGeneral}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddRequestGeneralToBug(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddRequestGeneralToBugAsync(int bugID, RequestGeneralDTO requestGeneral)
        {
            this.AddRequestGeneralToBugAsync(bugID, requestGeneral, null);
        }

        /// <remarks/>
        public void AddRequestGeneralToBugAsync(int bugID, RequestGeneralDTO requestGeneral, object userState)
        {
            if ((this.AddRequestGeneralToBugOperationCompleted == null))
            {
                this.AddRequestGeneralToBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRequestGeneralToBugOperationCompleted);
            }
            this.InvokeAsync("AddRequestGeneralToBug", new object[] {
                    bugID,
                    requestGeneral}, this.AddRequestGeneralToBugOperationCompleted, userState);
        }

        private void OnAddRequestGeneralToBugOperationCompleted(object arg)
        {
            if ((this.AddRequestGeneralToBugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRequestGeneralToBugCompleted(this, new AddRequestGeneralToBugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveRequestGeneralFromBug", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveRequestGeneralFromBug(int bugID, int requestGeneralID)
        {
            this.Invoke("RemoveRequestGeneralFromBug", new object[] {
                    bugID,
                    requestGeneralID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginRemoveRequestGeneralFromBug(int bugID, int requestGeneralID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RemoveRequestGeneralFromBug", new object[] {
                    bugID,
                    requestGeneralID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndRemoveRequestGeneralFromBug(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void RemoveRequestGeneralFromBugAsync(int bugID, int requestGeneralID)
        {
            this.RemoveRequestGeneralFromBugAsync(bugID, requestGeneralID, null);
        }

        /// <remarks/>
        public void RemoveRequestGeneralFromBugAsync(int bugID, int requestGeneralID, object userState)
        {
            if ((this.RemoveRequestGeneralFromBugOperationCompleted == null))
            {
                this.RemoveRequestGeneralFromBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveRequestGeneralFromBugOperationCompleted);
            }
            this.InvokeAsync("RemoveRequestGeneralFromBug", new object[] {
                    bugID,
                    requestGeneralID}, this.RemoveRequestGeneralFromBugOperationCompleted, userState);
        }

        private void OnRemoveRequestGeneralFromBugOperationCompleted(object arg)
        {
            if ((this.RemoveRequestGeneralFromBugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveRequestGeneralFromBugCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveTeamsForBug", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TeamDTO[] RetrieveTeamsForBug(int bugID)
        {
            object[] results = this.Invoke("RetrieveTeamsForBug", new object[] {
                    bugID});
            return ((TeamDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveTeamsForBug(int bugID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveTeamsForBug", new object[] {
                    bugID}, callback, asyncState);
        }

        /// <remarks/>
        public TeamDTO[] EndRetrieveTeamsForBug(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((TeamDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveTeamsForBugAsync(int bugID)
        {
            this.RetrieveTeamsForBugAsync(bugID, null);
        }

        /// <remarks/>
        public void RetrieveTeamsForBugAsync(int bugID, object userState)
        {
            if ((this.RetrieveTeamsForBugOperationCompleted == null))
            {
                this.RetrieveTeamsForBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveTeamsForBugOperationCompleted);
            }
            this.InvokeAsync("RetrieveTeamsForBug", new object[] {
                    bugID}, this.RetrieveTeamsForBugOperationCompleted, userState);
        }

        private void OnRetrieveTeamsForBugOperationCompleted(object arg)
        {
            if ((this.RetrieveTeamsForBugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveTeamsForBugCompleted(this, new RetrieveTeamsForBugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddTeamToBug", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddTeamToBug(int bugID, TeamDTO team)
        {
            object[] results = this.Invoke("AddTeamToBug", new object[] {
                    bugID,
                    team});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddTeamToBug(int bugID, TeamDTO team, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddTeamToBug", new object[] {
                    bugID,
                    team}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddTeamToBug(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddTeamToBugAsync(int bugID, TeamDTO team)
        {
            this.AddTeamToBugAsync(bugID, team, null);
        }

        /// <remarks/>
        public void AddTeamToBugAsync(int bugID, TeamDTO team, object userState)
        {
            if ((this.AddTeamToBugOperationCompleted == null))
            {
                this.AddTeamToBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTeamToBugOperationCompleted);
            }
            this.InvokeAsync("AddTeamToBug", new object[] {
                    bugID,
                    team}, this.AddTeamToBugOperationCompleted, userState);
        }

        private void OnAddTeamToBugOperationCompleted(object arg)
        {
            if ((this.AddTeamToBugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTeamToBugCompleted(this, new AddTeamToBugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AssignUserAsActor", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AssignUserAsActor(int bugID, int actorID, int userID)
        {
            this.Invoke("AssignUserAsActor", new object[] {
                    bugID,
                    actorID,
                    userID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginAssignUserAsActor(int bugID, int actorID, int userID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AssignUserAsActor", new object[] {
                    bugID,
                    actorID,
                    userID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndAssignUserAsActor(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void AssignUserAsActorAsync(int bugID, int actorID, int userID)
        {
            this.AssignUserAsActorAsync(bugID, actorID, userID, null);
        }

        /// <remarks/>
        public void AssignUserAsActorAsync(int bugID, int actorID, int userID, object userState)
        {
            if ((this.AssignUserAsActorOperationCompleted == null))
            {
                this.AssignUserAsActorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignUserAsActorOperationCompleted);
            }
            this.InvokeAsync("AssignUserAsActor", new object[] {
                    bugID,
                    actorID,
                    userID}, this.AssignUserAsActorOperationCompleted, userState);
        }

        private void OnAssignUserAsActorOperationCompleted(object arg)
        {
            if ((this.AssignUserAsActorCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignUserAsActorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AssignUser", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AssignUser(int bugID, int userID)
        {
            this.Invoke("AssignUser", new object[] {
                    bugID,
                    userID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginAssignUser(int bugID, int userID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AssignUser", new object[] {
                    bugID,
                    userID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndAssignUser(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void AssignUserAsync(int bugID, int userID)
        {
            this.AssignUserAsync(bugID, userID, null);
        }

        /// <remarks/>
        public void AssignUserAsync(int bugID, int userID, object userState)
        {
            if ((this.AssignUserOperationCompleted == null))
            {
                this.AssignUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignUserOperationCompleted);
            }
            this.InvokeAsync("AssignUser", new object[] {
                    bugID,
                    userID}, this.AssignUserOperationCompleted, userState);
        }

        private void OnAssignUserOperationCompleted(object arg)
        {
            if ((this.AssignUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AssignUserByEmailOrLoginAsActor", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AssignUserByEmailOrLoginAsActor(int bugID, string userEmailOrLogin, string actorName)
        {
            this.Invoke("AssignUserByEmailOrLoginAsActor", new object[] {
                    bugID,
                    userEmailOrLogin,
                    actorName});
        }

        /// <remarks/>
        public System.IAsyncResult BeginAssignUserByEmailOrLoginAsActor(int bugID, string userEmailOrLogin, string actorName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AssignUserByEmailOrLoginAsActor", new object[] {
                    bugID,
                    userEmailOrLogin,
                    actorName}, callback, asyncState);
        }

        /// <remarks/>
        public void EndAssignUserByEmailOrLoginAsActor(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void AssignUserByEmailOrLoginAsActorAsync(int bugID, string userEmailOrLogin, string actorName)
        {
            this.AssignUserByEmailOrLoginAsActorAsync(bugID, userEmailOrLogin, actorName, null);
        }

        /// <remarks/>
        public void AssignUserByEmailOrLoginAsActorAsync(int bugID, string userEmailOrLogin, string actorName, object userState)
        {
            if ((this.AssignUserByEmailOrLoginAsActorOperationCompleted == null))
            {
                this.AssignUserByEmailOrLoginAsActorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignUserByEmailOrLoginAsActorOperationCompleted);
            }
            this.InvokeAsync("AssignUserByEmailOrLoginAsActor", new object[] {
                    bugID,
                    userEmailOrLogin,
                    actorName}, this.AssignUserByEmailOrLoginAsActorOperationCompleted, userState);
        }

        private void OnAssignUserByEmailOrLoginAsActorOperationCompleted(object arg)
        {
            if ((this.AssignUserByEmailOrLoginAsActorCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignUserByEmailOrLoginAsActorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AssignUserByEmailOrLogin", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AssignUserByEmailOrLogin(int bugID, string userEmailOrLogin)
        {
            this.Invoke("AssignUserByEmailOrLogin", new object[] {
                    bugID,
                    userEmailOrLogin});
        }

        /// <remarks/>
        public System.IAsyncResult BeginAssignUserByEmailOrLogin(int bugID, string userEmailOrLogin, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AssignUserByEmailOrLogin", new object[] {
                    bugID,
                    userEmailOrLogin}, callback, asyncState);
        }

        /// <remarks/>
        public void EndAssignUserByEmailOrLogin(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void AssignUserByEmailOrLoginAsync(int bugID, string userEmailOrLogin)
        {
            this.AssignUserByEmailOrLoginAsync(bugID, userEmailOrLogin, null);
        }

        /// <remarks/>
        public void AssignUserByEmailOrLoginAsync(int bugID, string userEmailOrLogin, object userState)
        {
            if ((this.AssignUserByEmailOrLoginOperationCompleted == null))
            {
                this.AssignUserByEmailOrLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignUserByEmailOrLoginOperationCompleted);
            }
            this.InvokeAsync("AssignUserByEmailOrLogin", new object[] {
                    bugID,
                    userEmailOrLogin}, this.AssignUserByEmailOrLoginOperationCompleted, userState);
        }

        private void OnAssignUserByEmailOrLoginOperationCompleted(object arg)
        {
            if ((this.AssignUserByEmailOrLoginCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignUserByEmailOrLoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveOpenForUser", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BugDTO[] RetrieveOpenForUser(int userID)
        {
            object[] results = this.Invoke("RetrieveOpenForUser", new object[] {
                    userID});
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveOpenForUser(int userID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveOpenForUser", new object[] {
                    userID}, callback, asyncState);
        }

        /// <remarks/>
        public BugDTO[] EndRetrieveOpenForUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveOpenForUserAsync(int userID)
        {
            this.RetrieveOpenForUserAsync(userID, null);
        }

        /// <remarks/>
        public void RetrieveOpenForUserAsync(int userID, object userState)
        {
            if ((this.RetrieveOpenForUserOperationCompleted == null))
            {
                this.RetrieveOpenForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveOpenForUserOperationCompleted);
            }
            this.InvokeAsync("RetrieveOpenForUser", new object[] {
                    userID}, this.RetrieveOpenForUserOperationCompleted, userState);
        }

        private void OnRetrieveOpenForUserOperationCompleted(object arg)
        {
            if ((this.RetrieveOpenForUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveOpenForUserCompleted(this, new RetrieveOpenForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveOpenForMe", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BugDTO[] RetrieveOpenForMe()
        {
            object[] results = this.Invoke("RetrieveOpenForMe", new object[0]);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveOpenForMe(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveOpenForMe", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public BugDTO[] EndRetrieveOpenForMe(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveOpenForMeAsync()
        {
            this.RetrieveOpenForMeAsync(null);
        }

        /// <remarks/>
        public void RetrieveOpenForMeAsync(object userState)
        {
            if ((this.RetrieveOpenForMeOperationCompleted == null))
            {
                this.RetrieveOpenForMeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveOpenForMeOperationCompleted);
            }
            this.InvokeAsync("RetrieveOpenForMe", new object[0], this.RetrieveOpenForMeOperationCompleted, userState);
        }

        private void OnRetrieveOpenForMeOperationCompleted(object arg)
        {
            if ((this.RetrieveOpenForMeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveOpenForMeCompleted(this, new RetrieveOpenForMeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveTeamFromBug", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveTeamFromBug(int bugID, int teamID)
        {
            this.Invoke("RemoveTeamFromBug", new object[] {
                    bugID,
                    teamID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginRemoveTeamFromBug(int bugID, int teamID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RemoveTeamFromBug", new object[] {
                    bugID,
                    teamID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndRemoveTeamFromBug(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void RemoveTeamFromBugAsync(int bugID, int teamID)
        {
            this.RemoveTeamFromBugAsync(bugID, teamID, null);
        }

        /// <remarks/>
        public void RemoveTeamFromBugAsync(int bugID, int teamID, object userState)
        {
            if ((this.RemoveTeamFromBugOperationCompleted == null))
            {
                this.RemoveTeamFromBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveTeamFromBugOperationCompleted);
            }
            this.InvokeAsync("RemoveTeamFromBug", new object[] {
                    bugID,
                    teamID}, this.RemoveTeamFromBugOperationCompleted, userState);
        }

        private void OnRemoveTeamFromBugOperationCompleted(object arg)
        {
            if ((this.RemoveTeamFromBugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveTeamFromBugCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveActorEffortsForBug", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActorEffortDTO[] RetrieveActorEffortsForBug(int bugID)
        {
            object[] results = this.Invoke("RetrieveActorEffortsForBug", new object[] {
                    bugID});
            return ((ActorEffortDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveActorEffortsForBug(int bugID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveActorEffortsForBug", new object[] {
                    bugID}, callback, asyncState);
        }

        /// <remarks/>
        public ActorEffortDTO[] EndRetrieveActorEffortsForBug(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ActorEffortDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveActorEffortsForBugAsync(int bugID)
        {
            this.RetrieveActorEffortsForBugAsync(bugID, null);
        }

        /// <remarks/>
        public void RetrieveActorEffortsForBugAsync(int bugID, object userState)
        {
            if ((this.RetrieveActorEffortsForBugOperationCompleted == null))
            {
                this.RetrieveActorEffortsForBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveActorEffortsForBugOperationCompleted);
            }
            this.InvokeAsync("RetrieveActorEffortsForBug", new object[] {
                    bugID}, this.RetrieveActorEffortsForBugOperationCompleted, userState);
        }

        private void OnRetrieveActorEffortsForBugOperationCompleted(object arg)
        {
            if ((this.RetrieveActorEffortsForBugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveActorEffortsForBugCompleted(this, new RetrieveActorEffortsForBugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/ChangeEffort", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeEffort(int bugID, int actorID, decimal effort)
        {
            this.Invoke("ChangeEffort", new object[] {
                    bugID,
                    actorID,
                    effort});
        }

        /// <remarks/>
        public System.IAsyncResult BeginChangeEffort(int bugID, int actorID, decimal effort, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ChangeEffort", new object[] {
                    bugID,
                    actorID,
                    effort}, callback, asyncState);
        }

        /// <remarks/>
        public void EndChangeEffort(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ChangeEffortAsync(int bugID, int actorID, decimal effort)
        {
            this.ChangeEffortAsync(bugID, actorID, effort, null);
        }

        /// <remarks/>
        public void ChangeEffortAsync(int bugID, int actorID, decimal effort, object userState)
        {
            if ((this.ChangeEffortOperationCompleted == null))
            {
                this.ChangeEffortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeEffortOperationCompleted);
            }
            this.InvokeAsync("ChangeEffort", new object[] {
                    bugID,
                    actorID,
                    effort}, this.ChangeEffortOperationCompleted, userState);
        }

        private void OnChangeEffortOperationCompleted(object arg)
        {
            if ((this.ChangeEffortCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeEffortCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveRevisionAssignablesForBug", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RevisionAssignableDTO[] RetrieveRevisionAssignablesForBug(int bugID)
        {
            object[] results = this.Invoke("RetrieveRevisionAssignablesForBug", new object[] {
                    bugID});
            return ((RevisionAssignableDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveRevisionAssignablesForBug(int bugID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveRevisionAssignablesForBug", new object[] {
                    bugID}, callback, asyncState);
        }

        /// <remarks/>
        public RevisionAssignableDTO[] EndRetrieveRevisionAssignablesForBug(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((RevisionAssignableDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveRevisionAssignablesForBugAsync(int bugID)
        {
            this.RetrieveRevisionAssignablesForBugAsync(bugID, null);
        }

        /// <remarks/>
        public void RetrieveRevisionAssignablesForBugAsync(int bugID, object userState)
        {
            if ((this.RetrieveRevisionAssignablesForBugOperationCompleted == null))
            {
                this.RetrieveRevisionAssignablesForBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveRevisionAssignablesForBugOperationCompleted);
            }
            this.InvokeAsync("RetrieveRevisionAssignablesForBug", new object[] {
                    bugID}, this.RetrieveRevisionAssignablesForBugOperationCompleted, userState);
        }

        private void OnRetrieveRevisionAssignablesForBugOperationCompleted(object arg)
        {
            if ((this.RetrieveRevisionAssignablesForBugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveRevisionAssignablesForBugCompleted(this, new RetrieveRevisionAssignablesForBugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddRevisionAssignableToBug", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddRevisionAssignableToBug(int bugID, RevisionAssignableDTO revisionAssignable)
        {
            object[] results = this.Invoke("AddRevisionAssignableToBug", new object[] {
                    bugID,
                    revisionAssignable});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddRevisionAssignableToBug(int bugID, RevisionAssignableDTO revisionAssignable, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddRevisionAssignableToBug", new object[] {
                    bugID,
                    revisionAssignable}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddRevisionAssignableToBug(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddRevisionAssignableToBugAsync(int bugID, RevisionAssignableDTO revisionAssignable)
        {
            this.AddRevisionAssignableToBugAsync(bugID, revisionAssignable, null);
        }

        /// <remarks/>
        public void AddRevisionAssignableToBugAsync(int bugID, RevisionAssignableDTO revisionAssignable, object userState)
        {
            if ((this.AddRevisionAssignableToBugOperationCompleted == null))
            {
                this.AddRevisionAssignableToBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRevisionAssignableToBugOperationCompleted);
            }
            this.InvokeAsync("AddRevisionAssignableToBug", new object[] {
                    bugID,
                    revisionAssignable}, this.AddRevisionAssignableToBugOperationCompleted, userState);
        }

        private void OnAddRevisionAssignableToBugOperationCompleted(object arg)
        {
            if ((this.AddRevisionAssignableToBugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRevisionAssignableToBugCompleted(this, new AddRevisionAssignableToBugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveRevisionAssignableFromBug", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveRevisionAssignableFromBug(int bugID, int revisionAssignableID)
        {
            this.Invoke("RemoveRevisionAssignableFromBug", new object[] {
                    bugID,
                    revisionAssignableID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginRemoveRevisionAssignableFromBug(int bugID, int revisionAssignableID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RemoveRevisionAssignableFromBug", new object[] {
                    bugID,
                    revisionAssignableID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndRemoveRevisionAssignableFromBug(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void RemoveRevisionAssignableFromBugAsync(int bugID, int revisionAssignableID)
        {
            this.RemoveRevisionAssignableFromBugAsync(bugID, revisionAssignableID, null);
        }

        /// <remarks/>
        public void RemoveRevisionAssignableFromBugAsync(int bugID, int revisionAssignableID, object userState)
        {
            if ((this.RemoveRevisionAssignableFromBugOperationCompleted == null))
            {
                this.RemoveRevisionAssignableFromBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveRevisionAssignableFromBugOperationCompleted);
            }
            this.InvokeAsync("RemoveRevisionAssignableFromBug", new object[] {
                    bugID,
                    revisionAssignableID}, this.RemoveRevisionAssignableFromBugOperationCompleted, userState);
        }

        private void OnRemoveRevisionAssignableFromBugOperationCompleted(object arg)
        {
            if ((this.RemoveRevisionAssignableFromBugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveRevisionAssignableFromBugCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/GetByID", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BugDTO GetByID(int id)
        {
            object[] results = this.Invoke("GetByID", new object[] {
                    id});
            return ((BugDTO)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetByID(int id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetByID", new object[] {
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public BugDTO EndGetByID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BugDTO)(results[0]));
        }

        /// <remarks/>
        public void GetByIDAsync(int id)
        {
            this.GetByIDAsync(id, null);
        }

        /// <remarks/>
        public void GetByIDAsync(int id, object userState)
        {
            if ((this.GetByIDOperationCompleted == null))
            {
                this.GetByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByIDOperationCompleted);
            }
            this.InvokeAsync("GetByID", new object[] {
                    id}, this.GetByIDOperationCompleted, userState);
        }

        private void OnGetByIDOperationCompleted(object arg)
        {
            if ((this.GetByIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByIDCompleted(this, new GetByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/Create", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Create(BugDTO entity)
        {
            object[] results = this.Invoke("Create", new object[] {
                    entity});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCreate(BugDTO entity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Create", new object[] {
                    entity}, callback, asyncState);
        }

        /// <remarks/>
        public int EndCreate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void CreateAsync(BugDTO entity)
        {
            this.CreateAsync(entity, null);
        }

        /// <remarks/>
        public void CreateAsync(BugDTO entity, object userState)
        {
            if ((this.CreateOperationCompleted == null))
            {
                this.CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperationCompleted);
            }
            this.InvokeAsync("Create", new object[] {
                    entity}, this.CreateOperationCompleted, userState);
        }

        private void OnCreateOperationCompleted(object arg)
        {
            if ((this.CreateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/Update", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update(BugDTO entity)
        {
            this.Invoke("Update", new object[] {
                    entity});
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdate(BugDTO entity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Update", new object[] {
                    entity}, callback, asyncState);
        }

        /// <remarks/>
        public void EndUpdate(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void UpdateAsync(BugDTO entity)
        {
            this.UpdateAsync(entity, null);
        }

        /// <remarks/>
        public void UpdateAsync(BugDTO entity, object userState)
        {
            if ((this.UpdateOperationCompleted == null))
            {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                    entity}, this.UpdateOperationCompleted, userState);
        }

        private void OnUpdateOperationCompleted(object arg)
        {
            if ((this.UpdateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/Delete", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete(int id)
        {
            this.Invoke("Delete", new object[] {
                    id});
        }

        /// <remarks/>
        public System.IAsyncResult BeginDelete(int id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Delete", new object[] {
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public void EndDelete(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void DeleteAsync(int id)
        {
            this.DeleteAsync(id, null);
        }

        /// <remarks/>
        public void DeleteAsync(int id, object userState)
        {
            if ((this.DeleteOperationCompleted == null))
            {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                    id}, this.DeleteOperationCompleted, userState);
        }

        private void OnDeleteOperationCompleted(object arg)
        {
            if ((this.DeleteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAll", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BugDTO[] RetrieveAll()
        {
            object[] results = this.Invoke("RetrieveAll", new object[0]);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAll(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAll", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public BugDTO[] EndRetrieveAll(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAllAsync()
        {
            this.RetrieveAllAsync(null);
        }

        /// <remarks/>
        public void RetrieveAllAsync(object userState)
        {
            if ((this.RetrieveAllOperationCompleted == null))
            {
                this.RetrieveAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllOperationCompleted);
            }
            this.InvokeAsync("RetrieveAll", new object[0], this.RetrieveAllOperationCompleted, userState);
        }

        private void OnRetrieveAllOperationCompleted(object arg)
        {
            if ((this.RetrieveAllCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllCompleted(this, new RetrieveAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/Retrieve", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BugDTO[] Retrieve(string hql, object[] parameters)
        {
            object[] results = this.Invoke("Retrieve", new object[] {
                    hql,
                    parameters});
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieve(string hql, object[] parameters, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Retrieve", new object[] {
                    hql,
                    parameters}, callback, asyncState);
        }

        /// <remarks/>
        public BugDTO[] EndRetrieve(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAsync(string hql, object[] parameters)
        {
            this.RetrieveAsync(hql, parameters, null);
        }

        /// <remarks/>
        public void RetrieveAsync(string hql, object[] parameters, object userState)
        {
            if ((this.RetrieveOperationCompleted == null))
            {
                this.RetrieveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveOperationCompleted);
            }
            this.InvokeAsync("Retrieve", new object[] {
                    hql,
                    parameters}, this.RetrieveOperationCompleted, userState);
        }

        private void OnRetrieveOperationCompleted(object arg)
        {
            if ((this.RetrieveCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCompleted(this, new RetrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/GetIDs", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetIDs(string hql, object[] parameters)
        {
            object[] results = this.Invoke("GetIDs", new object[] {
                    hql,
                    parameters});
            return ((int[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetIDs(string hql, object[] parameters, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetIDs", new object[] {
                    hql,
                    parameters}, callback, asyncState);
        }

        /// <remarks/>
        public int[] EndGetIDs(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }

        /// <remarks/>
        public void GetIDsAsync(string hql, object[] parameters)
        {
            this.GetIDsAsync(hql, parameters, null);
        }

        /// <remarks/>
        public void GetIDsAsync(string hql, object[] parameters, object userState)
        {
            if ((this.GetIDsOperationCompleted == null))
            {
                this.GetIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIDsOperationCompleted);
            }
            this.InvokeAsync("GetIDs", new object[] {
                    hql,
                    parameters}, this.GetIDsOperationCompleted, userState);
        }

        private void OnGetIDsOperationCompleted(object arg)
        {
            if ((this.GetIDsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIDsCompleted(this, new GetIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrievePage", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BugDTO[] RetrievePage(string hql, int page, int pageSize, object[] parameters)
        {
            object[] results = this.Invoke("RetrievePage", new object[] {
                    hql,
                    page,
                    pageSize,
                    parameters});
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrievePage(string hql, int page, int pageSize, object[] parameters, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrievePage", new object[] {
                    hql,
                    page,
                    pageSize,
                    parameters}, callback, asyncState);
        }

        /// <remarks/>
        public BugDTO[] EndRetrievePage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BugDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrievePageAsync(string hql, int page, int pageSize, object[] parameters)
        {
            this.RetrievePageAsync(hql, page, pageSize, parameters, null);
        }

        /// <remarks/>
        public void RetrievePageAsync(string hql, int page, int pageSize, object[] parameters, object userState)
        {
            if ((this.RetrievePageOperationCompleted == null))
            {
                this.RetrievePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrievePageOperationCompleted);
            }
            this.InvokeAsync("RetrievePage", new object[] {
                    hql,
                    page,
                    pageSize,
                    parameters}, this.RetrievePageOperationCompleted, userState);
        }

        private void OnRetrievePageOperationCompleted(object arg)
        {
            if ((this.RetrievePageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrievePageCompleted(this, new RetrievePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveCount", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RetrieveCount(string hql, object[] parameters)
        {
            object[] results = this.Invoke("RetrieveCount", new object[] {
                    hql,
                    parameters});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveCount(string hql, object[] parameters, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveCount", new object[] {
                    hql,
                    parameters}, callback, asyncState);
        }

        /// <remarks/>
        public int EndRetrieveCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void RetrieveCountAsync(string hql, object[] parameters)
        {
            this.RetrieveCountAsync(hql, parameters, null);
        }

        /// <remarks/>
        public void RetrieveCountAsync(string hql, object[] parameters, object userState)
        {
            if ((this.RetrieveCountOperationCompleted == null))
            {
                this.RetrieveCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCountOperationCompleted);
            }
            this.InvokeAsync("RetrieveCount", new object[] {
                    hql,
                    parameters}, this.RetrieveCountOperationCompleted, userState);
        }

        private void OnRetrieveCountOperationCompleted(object arg)
        {
            if ((this.RetrieveCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCountCompleted(this, new RetrieveCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public partial class SeverityDTO : DataTransferObject
    {

        private System.Nullable<int> severityIDField;

        private string nameField;

        private System.Nullable<int> importanceField;

        private System.Nullable<bool> isDefaultField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> SeverityID
        {
            get
            {
                return this.severityIDField;
            }
            set
            {
                this.severityIDField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> Importance
        {
            get
            {
                return this.importanceField;
            }
            set
            {
                this.importanceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<bool> IsDefault
        {
            get
            {
                return this.isDefaultField;
            }
            set
            {
                this.isDefaultField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RevisionAssignableDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ActorEffortDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TeamDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RequestGeneralDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AttachmentDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CommentDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PriorityDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BugDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SeverityDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public abstract partial class DataTransferObject
    {

        private System.Nullable<int> idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public partial class RevisionAssignableDTO : DataTransferObject
    {

        private System.Nullable<int> revisionAssignableIDField;

        private System.Nullable<int> assignableIDField;

        private System.Nullable<int> revisionIDField;

        private string assignableNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> RevisionAssignableID
        {
            get
            {
                return this.revisionAssignableIDField;
            }
            set
            {
                this.revisionAssignableIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> AssignableID
        {
            get
            {
                return this.assignableIDField;
            }
            set
            {
                this.assignableIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> RevisionID
        {
            get
            {
                return this.revisionIDField;
            }
            set
            {
                this.revisionIDField = value;
            }
        }

        /// <remarks/>
        public string AssignableName
        {
            get
            {
                return this.assignableNameField;
            }
            set
            {
                this.assignableNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public partial class ActorEffortDTO : DataTransferObject
    {

        private System.Nullable<int> actorEffortIDField;

        private System.Nullable<decimal> initialEstimateField;

        private System.Nullable<decimal> effortField;

        private System.Nullable<decimal> effortCompletedField;

        private System.Nullable<decimal> effortToDoField;

        private System.Nullable<decimal> timeSpentField;

        private System.Nullable<decimal> timeRemainField;

        private System.Nullable<bool> substractionFromParentEffortField;

        private System.Nullable<int> assignableIDField;

        private System.Nullable<int> actorIDField;

        private string assignableNameField;

        private string actorNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ActorEffortID
        {
            get
            {
                return this.actorEffortIDField;
            }
            set
            {
                this.actorEffortIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> InitialEstimate
        {
            get
            {
                return this.initialEstimateField;
            }
            set
            {
                this.initialEstimateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> Effort
        {
            get
            {
                return this.effortField;
            }
            set
            {
                this.effortField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> EffortCompleted
        {
            get
            {
                return this.effortCompletedField;
            }
            set
            {
                this.effortCompletedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> EffortToDo
        {
            get
            {
                return this.effortToDoField;
            }
            set
            {
                this.effortToDoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> TimeSpent
        {
            get
            {
                return this.timeSpentField;
            }
            set
            {
                this.timeSpentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> TimeRemain
        {
            get
            {
                return this.timeRemainField;
            }
            set
            {
                this.timeRemainField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<bool> SubstractionFromParentEffort
        {
            get
            {
                return this.substractionFromParentEffortField;
            }
            set
            {
                this.substractionFromParentEffortField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> AssignableID
        {
            get
            {
                return this.assignableIDField;
            }
            set
            {
                this.assignableIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ActorID
        {
            get
            {
                return this.actorIDField;
            }
            set
            {
                this.actorIDField = value;
            }
        }

        /// <remarks/>
        public string AssignableName
        {
            get
            {
                return this.assignableNameField;
            }
            set
            {
                this.assignableNameField = value;
            }
        }

        /// <remarks/>
        public string ActorName
        {
            get
            {
                return this.actorNameField;
            }
            set
            {
                this.actorNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public partial class TeamDTO : DataTransferObject
    {

        private System.Nullable<int> teamIDField;

        private System.Nullable<int> assignableIDField;

        private System.Nullable<int> userIDField;

        private System.Nullable<int> actorIDField;

        private string assignableNameField;

        private string actorNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> TeamID
        {
            get
            {
                return this.teamIDField;
            }
            set
            {
                this.teamIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> AssignableID
        {
            get
            {
                return this.assignableIDField;
            }
            set
            {
                this.assignableIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> UserID
        {
            get
            {
                return this.userIDField;
            }
            set
            {
                this.userIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ActorID
        {
            get
            {
                return this.actorIDField;
            }
            set
            {
                this.actorIDField = value;
            }
        }

        /// <remarks/>
        public string AssignableName
        {
            get
            {
                return this.assignableNameField;
            }
            set
            {
                this.assignableNameField = value;
            }
        }

        /// <remarks/>
        public string ActorName
        {
            get
            {
                return this.actorNameField;
            }
            set
            {
                this.actorNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public partial class RequestGeneralDTO : DataTransferObject
    {

        private System.Nullable<int> requestGeneralIDField;

        private System.Nullable<System.DateTime> createDateField;

        private System.Nullable<bool> isAttachedField;

        private System.Nullable<int> generalIDField;

        private System.Nullable<int> requestIDField;

        private string generalNameField;

        private string requestNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> RequestGeneralID
        {
            get
            {
                return this.requestGeneralIDField;
            }
            set
            {
                this.requestGeneralIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> CreateDate
        {
            get
            {
                return this.createDateField;
            }
            set
            {
                this.createDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<bool> IsAttached
        {
            get
            {
                return this.isAttachedField;
            }
            set
            {
                this.isAttachedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> GeneralID
        {
            get
            {
                return this.generalIDField;
            }
            set
            {
                this.generalIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> RequestID
        {
            get
            {
                return this.requestIDField;
            }
            set
            {
                this.requestIDField = value;
            }
        }

        /// <remarks/>
        public string GeneralName
        {
            get
            {
                return this.generalNameField;
            }
            set
            {
                this.generalNameField = value;
            }
        }

        /// <remarks/>
        public string RequestName
        {
            get
            {
                return this.requestNameField;
            }
            set
            {
                this.requestNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public partial class AttachmentDTO : DataTransferObject
    {

        private System.Nullable<int> attachmentIDField;

        private string originalFileNameField;

        private string uniqueFileNameField;

        private System.Nullable<System.DateTime> createDateField;

        private string descriptionField;

        private System.Nullable<int> generalIDField;

        private System.Nullable<int> messageIDField;

        private System.Nullable<int> ownerIDField;

        private System.Nullable<int> attachmentFileIDField;

        private string generalNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> AttachmentID
        {
            get
            {
                return this.attachmentIDField;
            }
            set
            {
                this.attachmentIDField = value;
            }
        }

        /// <remarks/>
        public string OriginalFileName
        {
            get
            {
                return this.originalFileNameField;
            }
            set
            {
                this.originalFileNameField = value;
            }
        }

        /// <remarks/>
        public string UniqueFileName
        {
            get
            {
                return this.uniqueFileNameField;
            }
            set
            {
                this.uniqueFileNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> CreateDate
        {
            get
            {
                return this.createDateField;
            }
            set
            {
                this.createDateField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> GeneralID
        {
            get
            {
                return this.generalIDField;
            }
            set
            {
                this.generalIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> MessageID
        {
            get
            {
                return this.messageIDField;
            }
            set
            {
                this.messageIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> OwnerID
        {
            get
            {
                return this.ownerIDField;
            }
            set
            {
                this.ownerIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> AttachmentFileID
        {
            get
            {
                return this.attachmentFileIDField;
            }
            set
            {
                this.attachmentFileIDField = value;
            }
        }

        /// <remarks/>
        public string GeneralName
        {
            get
            {
                return this.generalNameField;
            }
            set
            {
                this.generalNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public partial class CommentDTO : DataTransferObject
    {

        private System.Nullable<int> commentIDField;

        private string descriptionField;

        private System.Nullable<System.DateTime> createDateField;

        private System.Nullable<int> generalIDField;

        private System.Nullable<int> ownerIDField;

        private System.Nullable<int> parentIDField;

        private string generalNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> CommentID
        {
            get
            {
                return this.commentIDField;
            }
            set
            {
                this.commentIDField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> CreateDate
        {
            get
            {
                return this.createDateField;
            }
            set
            {
                this.createDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> GeneralID
        {
            get
            {
                return this.generalIDField;
            }
            set
            {
                this.generalIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> OwnerID
        {
            get
            {
                return this.ownerIDField;
            }
            set
            {
                this.ownerIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ParentID
        {
            get
            {
                return this.parentIDField;
            }
            set
            {
                this.parentIDField = value;
            }
        }

        /// <remarks/>
        public string GeneralName
        {
            get
            {
                return this.generalNameField;
            }
            set
            {
                this.generalNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public partial class PriorityDTO : DataTransferObject
    {

        private System.Nullable<int> priorityIDField;

        private string nameField;

        private System.Nullable<int> importanceField;

        private System.Nullable<bool> isDefaultField;

        private string entityTypeNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> PriorityID
        {
            get
            {
                return this.priorityIDField;
            }
            set
            {
                this.priorityIDField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> Importance
        {
            get
            {
                return this.importanceField;
            }
            set
            {
                this.importanceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<bool> IsDefault
        {
            get
            {
                return this.isDefaultField;
            }
            set
            {
                this.isDefaultField = value;
            }
        }

        /// <remarks/>
        public string EntityTypeName
        {
            get
            {
                return this.entityTypeNameField;
            }
            set
            {
                this.entityTypeNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public partial class BugDTO : DataTransferObject, ITpDto
    {

        private System.Nullable<int> bugIDField;

        private string nameField;

        private string descriptionField;

        private System.Nullable<System.DateTime> startDateField;

        private System.Nullable<System.DateTime> endDateField;

        private System.Nullable<System.DateTime> createDateField;

        private System.Nullable<System.DateTime> modifyDateField;

        private System.Nullable<System.DateTime> lastCommentDateField;

        private System.Nullable<double> numericPriorityField;

        private string customField1Field;

        private string customField2Field;

        private string customField3Field;

        private string customField4Field;

        private string customField5Field;

        private string customField6Field;

        private string customField7Field;

        private string customField8Field;

        private string customField9Field;

        private string customField10Field;

        private string customField11Field;

        private string customField12Field;

        private string customField13Field;

        private string customField14Field;

        private string customField15Field;

        private System.Nullable<decimal> effortField;

        private System.Nullable<decimal> effortCompletedField;

        private System.Nullable<decimal> effortToDoField;

        private System.Nullable<decimal> timeSpentField;

        private System.Nullable<decimal> timeRemainField;

        private System.Nullable<int> lastCommentUserIDField;

        private System.Nullable<int> ownerIDField;

        private System.Nullable<int> lastEditorIDField;

        private System.Nullable<int> entityStateIDField;

        private System.Nullable<int> priorityIDField;

        private System.Nullable<int> projectIDField;

        private System.Nullable<int> iterationIDField;

        private System.Nullable<int> parentIDField;

        private System.Nullable<int> releaseIDField;

        private System.Nullable<int> severityIDField;

        private System.Nullable<int> buildIDField;

        private System.Nullable<int> userStoryIDField;

        private string entityTypeNameField;

        private string entityStateNameField;

        private string priorityNameField;

        private string projectNameField;

        private string iterationNameField;

        private string parentNameField;

        private string releaseNameField;

        private string severityNameField;

        private string buildNameField;

        private string userStoryNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> BugID
        {
            get
            {
                return this.bugIDField;
            }
            set
            {
                this.bugIDField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> StartDate
        {
            get
            {
                return this.startDateField;
            }
            set
            {
                this.startDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> EndDate
        {
            get
            {
                return this.endDateField;
            }
            set
            {
                this.endDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> CreateDate
        {
            get
            {
                return this.createDateField;
            }
            set
            {
                this.createDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> ModifyDate
        {
            get
            {
                return this.modifyDateField;
            }
            set
            {
                this.modifyDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> LastCommentDate
        {
            get
            {
                return this.lastCommentDateField;
            }
            set
            {
                this.lastCommentDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<double> NumericPriority
        {
            get
            {
                return this.numericPriorityField;
            }
            set
            {
                this.numericPriorityField = value;
            }
        }

        /// <remarks/>
        public string CustomField1
        {
            get
            {
                return this.customField1Field;
            }
            set
            {
                this.customField1Field = value;
            }
        }

        /// <remarks/>
        public string CustomField2
        {
            get
            {
                return this.customField2Field;
            }
            set
            {
                this.customField2Field = value;
            }
        }

        /// <remarks/>
        public string CustomField3
        {
            get
            {
                return this.customField3Field;
            }
            set
            {
                this.customField3Field = value;
            }
        }

        /// <remarks/>
        public string CustomField4
        {
            get
            {
                return this.customField4Field;
            }
            set
            {
                this.customField4Field = value;
            }
        }

        /// <remarks/>
        public string CustomField5
        {
            get
            {
                return this.customField5Field;
            }
            set
            {
                this.customField5Field = value;
            }
        }

        /// <remarks/>
        public string CustomField6
        {
            get
            {
                return this.customField6Field;
            }
            set
            {
                this.customField6Field = value;
            }
        }

        /// <remarks/>
        public string CustomField7
        {
            get
            {
                return this.customField7Field;
            }
            set
            {
                this.customField7Field = value;
            }
        }

        /// <remarks/>
        public string CustomField8
        {
            get
            {
                return this.customField8Field;
            }
            set
            {
                this.customField8Field = value;
            }
        }

        /// <remarks/>
        public string CustomField9
        {
            get
            {
                return this.customField9Field;
            }
            set
            {
                this.customField9Field = value;
            }
        }

        /// <remarks/>
        public string CustomField10
        {
            get
            {
                return this.customField10Field;
            }
            set
            {
                this.customField10Field = value;
            }
        }

        /// <remarks/>
        public string CustomField11
        {
            get
            {
                return this.customField11Field;
            }
            set
            {
                this.customField11Field = value;
            }
        }

        /// <remarks/>
        public string CustomField12
        {
            get
            {
                return this.customField12Field;
            }
            set
            {
                this.customField12Field = value;
            }
        }

        /// <remarks/>
        public string CustomField13
        {
            get
            {
                return this.customField13Field;
            }
            set
            {
                this.customField13Field = value;
            }
        }

        /// <remarks/>
        public string CustomField14
        {
            get
            {
                return this.customField14Field;
            }
            set
            {
                this.customField14Field = value;
            }
        }

        /// <remarks/>
        public string CustomField15
        {
            get
            {
                return this.customField15Field;
            }
            set
            {
                this.customField15Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> Effort
        {
            get
            {
                return this.effortField;
            }
            set
            {
                this.effortField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> EffortCompleted
        {
            get
            {
                return this.effortCompletedField;
            }
            set
            {
                this.effortCompletedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> EffortToDo
        {
            get
            {
                return this.effortToDoField;
            }
            set
            {
                this.effortToDoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> TimeSpent
        {
            get
            {
                return this.timeSpentField;
            }
            set
            {
                this.timeSpentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> TimeRemain
        {
            get
            {
                return this.timeRemainField;
            }
            set
            {
                this.timeRemainField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> LastCommentUserID
        {
            get
            {
                return this.lastCommentUserIDField;
            }
            set
            {
                this.lastCommentUserIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> OwnerID
        {
            get
            {
                return this.ownerIDField;
            }
            set
            {
                this.ownerIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> LastEditorID
        {
            get
            {
                return this.lastEditorIDField;
            }
            set
            {
                this.lastEditorIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> EntityStateID
        {
            get
            {
                return this.entityStateIDField;
            }
            set
            {
                this.entityStateIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> PriorityID
        {
            get
            {
                return this.priorityIDField;
            }
            set
            {
                this.priorityIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ProjectID
        {
            get
            {
                return this.projectIDField;
            }
            set
            {
                this.projectIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> IterationID
        {
            get
            {
                return this.iterationIDField;
            }
            set
            {
                this.iterationIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ParentID
        {
            get
            {
                return this.parentIDField;
            }
            set
            {
                this.parentIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ReleaseID
        {
            get
            {
                return this.releaseIDField;
            }
            set
            {
                this.releaseIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> SeverityID
        {
            get
            {
                return this.severityIDField;
            }
            set
            {
                this.severityIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> BuildID
        {
            get
            {
                return this.buildIDField;
            }
            set
            {
                this.buildIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> UserStoryID
        {
            get
            {
                return this.userStoryIDField;
            }
            set
            {
                this.userStoryIDField = value;
            }
        }

        /// <remarks/>
        public string EntityTypeName
        {
            get
            {
                return this.entityTypeNameField;
            }
            set
            {
                this.entityTypeNameField = value;
            }
        }

        /// <remarks/>
        public string EntityStateName
        {
            get
            {
                return this.entityStateNameField;
            }
            set
            {
                this.entityStateNameField = value;
            }
        }

        /// <remarks/>
        public string PriorityName
        {
            get
            {
                return this.priorityNameField;
            }
            set
            {
                this.priorityNameField = value;
            }
        }

        /// <remarks/>
        public string ProjectName
        {
            get
            {
                return this.projectNameField;
            }
            set
            {
                this.projectNameField = value;
            }
        }

        /// <remarks/>
        public string IterationName
        {
            get
            {
                return this.iterationNameField;
            }
            set
            {
                this.iterationNameField = value;
            }
        }

        /// <remarks/>
        public string ParentName
        {
            get
            {
                return this.parentNameField;
            }
            set
            {
                this.parentNameField = value;
            }
        }

        /// <remarks/>
        public string ReleaseName
        {
            get
            {
                return this.releaseNameField;
            }
            set
            {
                this.releaseNameField = value;
            }
        }

        /// <remarks/>
        public string SeverityName
        {
            get
            {
                return this.severityNameField;
            }
            set
            {
                this.severityNameField = value;
            }
        }

        /// <remarks/>
        public string BuildName
        {
            get
            {
                return this.buildNameField;
            }
            set
            {
                this.buildNameField = value;
            }
        }

        /// <remarks/>
        public string UserStoryName
        {
            get
            {
                return this.userStoryNameField;
            }
            set
            {
                this.userStoryNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetSeveritiesCompletedEventHandler(object sender, GetSeveritiesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeveritiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSeveritiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SeverityDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SeverityDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AddBugWithAttachmentCompletedEventHandler(object sender, AddBugWithAttachmentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBugWithAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddBugWithAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAllForLastCommentUserCompletedEventHandler(object sender, RetrieveAllForLastCommentUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllForLastCommentUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAllForLastCommentUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BugDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BugDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAllForProjectCompletedEventHandler(object sender, RetrieveAllForProjectCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllForProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAllForProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BugDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BugDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAllForOwnerCompletedEventHandler(object sender, RetrieveAllForOwnerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllForOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAllForOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BugDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BugDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAllForEntityStateCompletedEventHandler(object sender, RetrieveAllForEntityStateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllForEntityStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAllForEntityStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BugDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BugDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ChangeStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAllForPriorityCompletedEventHandler(object sender, RetrieveAllForPriorityCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllForPriorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAllForPriorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BugDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BugDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetPrioritiesCompletedEventHandler(object sender, GetPrioritiesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrioritiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetPrioritiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public PriorityDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((PriorityDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAllForIterationCompletedEventHandler(object sender, RetrieveAllForIterationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllForIterationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAllForIterationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BugDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BugDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAllForReleaseCompletedEventHandler(object sender, RetrieveAllForReleaseCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllForReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAllForReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BugDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BugDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAllForSeverityCompletedEventHandler(object sender, RetrieveAllForSeverityCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllForSeverityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAllForSeverityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BugDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BugDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAllForBuildCompletedEventHandler(object sender, RetrieveAllForBuildCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllForBuildCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAllForBuildCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BugDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BugDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAllForUserStoryCompletedEventHandler(object sender, RetrieveAllForUserStoryCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllForUserStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAllForUserStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BugDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BugDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveCommentsForBugCompletedEventHandler(object sender, RetrieveCommentsForBugCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCommentsForBugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveCommentsForBugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CommentDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CommentDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AddCommentToBugCompletedEventHandler(object sender, AddCommentToBugCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCommentToBugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddCommentToBugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RemoveCommentFromBugCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAttachmentsForBugCompletedEventHandler(object sender, RetrieveAttachmentsForBugCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAttachmentsForBugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAttachmentsForBugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public AttachmentDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((AttachmentDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RemoveAttachmentFromBugCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AddAttachmentToBugCompletedEventHandler(object sender, AddAttachmentToBugCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAttachmentToBugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddAttachmentToBugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAttachedRequestsForBugCompletedEventHandler(object sender, RetrieveAttachedRequestsForBugCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAttachedRequestsForBugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAttachedRequestsForBugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public RequestGeneralDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((RequestGeneralDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AddRequestGeneralToBugCompletedEventHandler(object sender, AddRequestGeneralToBugCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRequestGeneralToBugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddRequestGeneralToBugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RemoveRequestGeneralFromBugCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveTeamsForBugCompletedEventHandler(object sender, RetrieveTeamsForBugCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveTeamsForBugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveTeamsForBugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public TeamDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((TeamDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AddTeamToBugCompletedEventHandler(object sender, AddTeamToBugCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTeamToBugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddTeamToBugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AssignUserAsActorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AssignUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AssignUserByEmailOrLoginAsActorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AssignUserByEmailOrLoginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveOpenForUserCompletedEventHandler(object sender, RetrieveOpenForUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveOpenForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveOpenForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BugDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BugDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveOpenForMeCompletedEventHandler(object sender, RetrieveOpenForMeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveOpenForMeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveOpenForMeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BugDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BugDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RemoveTeamFromBugCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveActorEffortsForBugCompletedEventHandler(object sender, RetrieveActorEffortsForBugCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveActorEffortsForBugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveActorEffortsForBugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ActorEffortDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ActorEffortDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ChangeEffortCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveRevisionAssignablesForBugCompletedEventHandler(object sender, RetrieveRevisionAssignablesForBugCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveRevisionAssignablesForBugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveRevisionAssignablesForBugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public RevisionAssignableDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((RevisionAssignableDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AddRevisionAssignableToBugCompletedEventHandler(object sender, AddRevisionAssignableToBugCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRevisionAssignableToBugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddRevisionAssignableToBugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RemoveRevisionAssignableFromBugCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetByIDCompletedEventHandler(object sender, GetByIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BugDTO Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BugDTO)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void DeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAllCompletedEventHandler(object sender, RetrieveAllCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BugDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BugDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveCompletedEventHandler(object sender, RetrieveCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BugDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BugDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetIDsCompletedEventHandler(object sender, GetIDsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrievePageCompletedEventHandler(object sender, RetrievePageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrievePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrievePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BugDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BugDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveCountCompletedEventHandler(object sender, RetrieveCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}