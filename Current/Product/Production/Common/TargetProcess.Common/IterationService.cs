//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 


namespace CIFactory.TargetProcess.Common.IterationWebService
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "IterationServiceSoap", Namespace = "http://targetprocess.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTransferObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class IterationService : Microsoft.Web.Services3.WebServicesClientProtocol
    {

        private System.Threading.SendOrPostCallback RetrieveAllForLastCommentUserOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAllForProjectOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAllForOwnerOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAllForReleaseOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveCommentsForIterationOperationCompleted;

        private System.Threading.SendOrPostCallback AddCommentToIterationOperationCompleted;

        private System.Threading.SendOrPostCallback RemoveCommentFromIterationOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAttachmentsForIterationOperationCompleted;

        private System.Threading.SendOrPostCallback RemoveAttachmentFromIterationOperationCompleted;

        private System.Threading.SendOrPostCallback AddAttachmentToIterationOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAttachedRequestsForIterationOperationCompleted;

        private System.Threading.SendOrPostCallback AddRequestGeneralToIterationOperationCompleted;

        private System.Threading.SendOrPostCallback RemoveRequestGeneralFromIterationOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveUserStoriesForIterationOperationCompleted;

        private System.Threading.SendOrPostCallback AddUserStoryToIterationOperationCompleted;

        private System.Threading.SendOrPostCallback RemoveUserStoryFromIterationOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveBuildsForIterationOperationCompleted;

        private System.Threading.SendOrPostCallback AddBuildToIterationOperationCompleted;

        private System.Threading.SendOrPostCallback RemoveBuildFromIterationOperationCompleted;

        private System.Threading.SendOrPostCallback GetByIDOperationCompleted;

        private System.Threading.SendOrPostCallback CreateOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateOperationCompleted;

        private System.Threading.SendOrPostCallback DeleteOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveAllOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveOperationCompleted;

        private System.Threading.SendOrPostCallback GetIDsOperationCompleted;

        private System.Threading.SendOrPostCallback RetrievePageOperationCompleted;

        private System.Threading.SendOrPostCallback RetrieveCountOperationCompleted;

        /// <remarks/>
        public IterationService()
        {
            this.Url = "http://tp.agilexhealth.com/Services/IterationService.asmx";
        }

        /// <remarks/>
        public event RetrieveAllForLastCommentUserCompletedEventHandler RetrieveAllForLastCommentUserCompleted;

        /// <remarks/>
        public event RetrieveAllForProjectCompletedEventHandler RetrieveAllForProjectCompleted;

        /// <remarks/>
        public event RetrieveAllForOwnerCompletedEventHandler RetrieveAllForOwnerCompleted;

        /// <remarks/>
        public event RetrieveAllForReleaseCompletedEventHandler RetrieveAllForReleaseCompleted;

        /// <remarks/>
        public event RetrieveCommentsForIterationCompletedEventHandler RetrieveCommentsForIterationCompleted;

        /// <remarks/>
        public event AddCommentToIterationCompletedEventHandler AddCommentToIterationCompleted;

        /// <remarks/>
        public event RemoveCommentFromIterationCompletedEventHandler RemoveCommentFromIterationCompleted;

        /// <remarks/>
        public event RetrieveAttachmentsForIterationCompletedEventHandler RetrieveAttachmentsForIterationCompleted;

        /// <remarks/>
        public event RemoveAttachmentFromIterationCompletedEventHandler RemoveAttachmentFromIterationCompleted;

        /// <remarks/>
        public event AddAttachmentToIterationCompletedEventHandler AddAttachmentToIterationCompleted;

        /// <remarks/>
        public event RetrieveAttachedRequestsForIterationCompletedEventHandler RetrieveAttachedRequestsForIterationCompleted;

        /// <remarks/>
        public event AddRequestGeneralToIterationCompletedEventHandler AddRequestGeneralToIterationCompleted;

        /// <remarks/>
        public event RemoveRequestGeneralFromIterationCompletedEventHandler RemoveRequestGeneralFromIterationCompleted;

        /// <remarks/>
        public event RetrieveUserStoriesForIterationCompletedEventHandler RetrieveUserStoriesForIterationCompleted;

        /// <remarks/>
        public event AddUserStoryToIterationCompletedEventHandler AddUserStoryToIterationCompleted;

        /// <remarks/>
        public event RemoveUserStoryFromIterationCompletedEventHandler RemoveUserStoryFromIterationCompleted;

        /// <remarks/>
        public event RetrieveBuildsForIterationCompletedEventHandler RetrieveBuildsForIterationCompleted;

        /// <remarks/>
        public event AddBuildToIterationCompletedEventHandler AddBuildToIterationCompleted;

        /// <remarks/>
        public event RemoveBuildFromIterationCompletedEventHandler RemoveBuildFromIterationCompleted;

        /// <remarks/>
        public event GetByIDCompletedEventHandler GetByIDCompleted;

        /// <remarks/>
        public event CreateCompletedEventHandler CreateCompleted;

        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;

        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;

        /// <remarks/>
        public event RetrieveAllCompletedEventHandler RetrieveAllCompleted;

        /// <remarks/>
        public event RetrieveCompletedEventHandler RetrieveCompleted;

        /// <remarks/>
        public event GetIDsCompletedEventHandler GetIDsCompleted;

        /// <remarks/>
        public event RetrievePageCompletedEventHandler RetrievePageCompleted;

        /// <remarks/>
        public event RetrieveCountCompletedEventHandler RetrieveCountCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForLastCommentUser", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IterationDTO[] RetrieveAllForLastCommentUser(int lastCommentUserID)
        {
            object[] results = this.Invoke("RetrieveAllForLastCommentUser", new object[] {
                    lastCommentUserID});
            return ((IterationDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAllForLastCommentUser(int lastCommentUserID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAllForLastCommentUser", new object[] {
                    lastCommentUserID}, callback, asyncState);
        }

        /// <remarks/>
        public IterationDTO[] EndRetrieveAllForLastCommentUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((IterationDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAllForLastCommentUserAsync(int lastCommentUserID)
        {
            this.RetrieveAllForLastCommentUserAsync(lastCommentUserID, null);
        }

        /// <remarks/>
        public void RetrieveAllForLastCommentUserAsync(int lastCommentUserID, object userState)
        {
            if ((this.RetrieveAllForLastCommentUserOperationCompleted == null))
            {
                this.RetrieveAllForLastCommentUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForLastCommentUserOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllForLastCommentUser", new object[] {
                    lastCommentUserID}, this.RetrieveAllForLastCommentUserOperationCompleted, userState);
        }

        private void OnRetrieveAllForLastCommentUserOperationCompleted(object arg)
        {
            if ((this.RetrieveAllForLastCommentUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllForLastCommentUserCompleted(this, new RetrieveAllForLastCommentUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForProject", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IterationDTO[] RetrieveAllForProject(int projectID)
        {
            object[] results = this.Invoke("RetrieveAllForProject", new object[] {
                    projectID});
            return ((IterationDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAllForProject(int projectID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAllForProject", new object[] {
                    projectID}, callback, asyncState);
        }

        /// <remarks/>
        public IterationDTO[] EndRetrieveAllForProject(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((IterationDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAllForProjectAsync(int projectID)
        {
            this.RetrieveAllForProjectAsync(projectID, null);
        }

        /// <remarks/>
        public void RetrieveAllForProjectAsync(int projectID, object userState)
        {
            if ((this.RetrieveAllForProjectOperationCompleted == null))
            {
                this.RetrieveAllForProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForProjectOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllForProject", new object[] {
                    projectID}, this.RetrieveAllForProjectOperationCompleted, userState);
        }

        private void OnRetrieveAllForProjectOperationCompleted(object arg)
        {
            if ((this.RetrieveAllForProjectCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllForProjectCompleted(this, new RetrieveAllForProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForOwner", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IterationDTO[] RetrieveAllForOwner(int ownerID)
        {
            object[] results = this.Invoke("RetrieveAllForOwner", new object[] {
                    ownerID});
            return ((IterationDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAllForOwner(int ownerID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAllForOwner", new object[] {
                    ownerID}, callback, asyncState);
        }

        /// <remarks/>
        public IterationDTO[] EndRetrieveAllForOwner(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((IterationDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAllForOwnerAsync(int ownerID)
        {
            this.RetrieveAllForOwnerAsync(ownerID, null);
        }

        /// <remarks/>
        public void RetrieveAllForOwnerAsync(int ownerID, object userState)
        {
            if ((this.RetrieveAllForOwnerOperationCompleted == null))
            {
                this.RetrieveAllForOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForOwnerOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllForOwner", new object[] {
                    ownerID}, this.RetrieveAllForOwnerOperationCompleted, userState);
        }

        private void OnRetrieveAllForOwnerOperationCompleted(object arg)
        {
            if ((this.RetrieveAllForOwnerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllForOwnerCompleted(this, new RetrieveAllForOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAllForRelease", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IterationDTO[] RetrieveAllForRelease(int releaseID)
        {
            object[] results = this.Invoke("RetrieveAllForRelease", new object[] {
                    releaseID});
            return ((IterationDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAllForRelease(int releaseID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAllForRelease", new object[] {
                    releaseID}, callback, asyncState);
        }

        /// <remarks/>
        public IterationDTO[] EndRetrieveAllForRelease(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((IterationDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAllForReleaseAsync(int releaseID)
        {
            this.RetrieveAllForReleaseAsync(releaseID, null);
        }

        /// <remarks/>
        public void RetrieveAllForReleaseAsync(int releaseID, object userState)
        {
            if ((this.RetrieveAllForReleaseOperationCompleted == null))
            {
                this.RetrieveAllForReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllForReleaseOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllForRelease", new object[] {
                    releaseID}, this.RetrieveAllForReleaseOperationCompleted, userState);
        }

        private void OnRetrieveAllForReleaseOperationCompleted(object arg)
        {
            if ((this.RetrieveAllForReleaseCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllForReleaseCompleted(this, new RetrieveAllForReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveCommentsForIteration", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CommentDTO[] RetrieveCommentsForIteration(int iterationID)
        {
            object[] results = this.Invoke("RetrieveCommentsForIteration", new object[] {
                    iterationID});
            return ((CommentDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveCommentsForIteration(int iterationID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveCommentsForIteration", new object[] {
                    iterationID}, callback, asyncState);
        }

        /// <remarks/>
        public CommentDTO[] EndRetrieveCommentsForIteration(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CommentDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveCommentsForIterationAsync(int iterationID)
        {
            this.RetrieveCommentsForIterationAsync(iterationID, null);
        }

        /// <remarks/>
        public void RetrieveCommentsForIterationAsync(int iterationID, object userState)
        {
            if ((this.RetrieveCommentsForIterationOperationCompleted == null))
            {
                this.RetrieveCommentsForIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCommentsForIterationOperationCompleted);
            }
            this.InvokeAsync("RetrieveCommentsForIteration", new object[] {
                    iterationID}, this.RetrieveCommentsForIterationOperationCompleted, userState);
        }

        private void OnRetrieveCommentsForIterationOperationCompleted(object arg)
        {
            if ((this.RetrieveCommentsForIterationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCommentsForIterationCompleted(this, new RetrieveCommentsForIterationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddCommentToIteration", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddCommentToIteration(int iterationID, CommentDTO comment)
        {
            object[] results = this.Invoke("AddCommentToIteration", new object[] {
                    iterationID,
                    comment});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddCommentToIteration(int iterationID, CommentDTO comment, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddCommentToIteration", new object[] {
                    iterationID,
                    comment}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddCommentToIteration(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddCommentToIterationAsync(int iterationID, CommentDTO comment)
        {
            this.AddCommentToIterationAsync(iterationID, comment, null);
        }

        /// <remarks/>
        public void AddCommentToIterationAsync(int iterationID, CommentDTO comment, object userState)
        {
            if ((this.AddCommentToIterationOperationCompleted == null))
            {
                this.AddCommentToIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCommentToIterationOperationCompleted);
            }
            this.InvokeAsync("AddCommentToIteration", new object[] {
                    iterationID,
                    comment}, this.AddCommentToIterationOperationCompleted, userState);
        }

        private void OnAddCommentToIterationOperationCompleted(object arg)
        {
            if ((this.AddCommentToIterationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCommentToIterationCompleted(this, new AddCommentToIterationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveCommentFromIteration", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveCommentFromIteration(int iterationID, int commentID)
        {
            this.Invoke("RemoveCommentFromIteration", new object[] {
                    iterationID,
                    commentID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginRemoveCommentFromIteration(int iterationID, int commentID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RemoveCommentFromIteration", new object[] {
                    iterationID,
                    commentID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndRemoveCommentFromIteration(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void RemoveCommentFromIterationAsync(int iterationID, int commentID)
        {
            this.RemoveCommentFromIterationAsync(iterationID, commentID, null);
        }

        /// <remarks/>
        public void RemoveCommentFromIterationAsync(int iterationID, int commentID, object userState)
        {
            if ((this.RemoveCommentFromIterationOperationCompleted == null))
            {
                this.RemoveCommentFromIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveCommentFromIterationOperationCompleted);
            }
            this.InvokeAsync("RemoveCommentFromIteration", new object[] {
                    iterationID,
                    commentID}, this.RemoveCommentFromIterationOperationCompleted, userState);
        }

        private void OnRemoveCommentFromIterationOperationCompleted(object arg)
        {
            if ((this.RemoveCommentFromIterationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveCommentFromIterationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAttachmentsForIteration", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AttachmentDTO[] RetrieveAttachmentsForIteration(int iterationID)
        {
            object[] results = this.Invoke("RetrieveAttachmentsForIteration", new object[] {
                    iterationID});
            return ((AttachmentDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAttachmentsForIteration(int iterationID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAttachmentsForIteration", new object[] {
                    iterationID}, callback, asyncState);
        }

        /// <remarks/>
        public AttachmentDTO[] EndRetrieveAttachmentsForIteration(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((AttachmentDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAttachmentsForIterationAsync(int iterationID)
        {
            this.RetrieveAttachmentsForIterationAsync(iterationID, null);
        }

        /// <remarks/>
        public void RetrieveAttachmentsForIterationAsync(int iterationID, object userState)
        {
            if ((this.RetrieveAttachmentsForIterationOperationCompleted == null))
            {
                this.RetrieveAttachmentsForIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAttachmentsForIterationOperationCompleted);
            }
            this.InvokeAsync("RetrieveAttachmentsForIteration", new object[] {
                    iterationID}, this.RetrieveAttachmentsForIterationOperationCompleted, userState);
        }

        private void OnRetrieveAttachmentsForIterationOperationCompleted(object arg)
        {
            if ((this.RetrieveAttachmentsForIterationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAttachmentsForIterationCompleted(this, new RetrieveAttachmentsForIterationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveAttachmentFromIteration", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveAttachmentFromIteration(int iterationID, int attachmentID)
        {
            this.Invoke("RemoveAttachmentFromIteration", new object[] {
                    iterationID,
                    attachmentID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginRemoveAttachmentFromIteration(int iterationID, int attachmentID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RemoveAttachmentFromIteration", new object[] {
                    iterationID,
                    attachmentID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndRemoveAttachmentFromIteration(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void RemoveAttachmentFromIterationAsync(int iterationID, int attachmentID)
        {
            this.RemoveAttachmentFromIterationAsync(iterationID, attachmentID, null);
        }

        /// <remarks/>
        public void RemoveAttachmentFromIterationAsync(int iterationID, int attachmentID, object userState)
        {
            if ((this.RemoveAttachmentFromIterationOperationCompleted == null))
            {
                this.RemoveAttachmentFromIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAttachmentFromIterationOperationCompleted);
            }
            this.InvokeAsync("RemoveAttachmentFromIteration", new object[] {
                    iterationID,
                    attachmentID}, this.RemoveAttachmentFromIterationOperationCompleted, userState);
        }

        private void OnRemoveAttachmentFromIterationOperationCompleted(object arg)
        {
            if ((this.RemoveAttachmentFromIterationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAttachmentFromIterationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddAttachmentToIteration", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddAttachmentToIteration(int iterationID, string fileName, string description)
        {
            object[] results = this.Invoke("AddAttachmentToIteration", new object[] {
                    iterationID,
                    fileName,
                    description});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddAttachmentToIteration(int iterationID, string fileName, string description, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddAttachmentToIteration", new object[] {
                    iterationID,
                    fileName,
                    description}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddAttachmentToIteration(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddAttachmentToIterationAsync(int iterationID, string fileName, string description)
        {
            this.AddAttachmentToIterationAsync(iterationID, fileName, description, null);
        }

        /// <remarks/>
        public void AddAttachmentToIterationAsync(int iterationID, string fileName, string description, object userState)
        {
            if ((this.AddAttachmentToIterationOperationCompleted == null))
            {
                this.AddAttachmentToIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAttachmentToIterationOperationCompleted);
            }
            this.InvokeAsync("AddAttachmentToIteration", new object[] {
                    iterationID,
                    fileName,
                    description}, this.AddAttachmentToIterationOperationCompleted, userState);
        }

        private void OnAddAttachmentToIterationOperationCompleted(object arg)
        {
            if ((this.AddAttachmentToIterationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAttachmentToIterationCompleted(this, new AddAttachmentToIterationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAttachedRequestsForIteration", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RequestGeneralDTO[] RetrieveAttachedRequestsForIteration(int iterationID)
        {
            object[] results = this.Invoke("RetrieveAttachedRequestsForIteration", new object[] {
                    iterationID});
            return ((RequestGeneralDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAttachedRequestsForIteration(int iterationID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAttachedRequestsForIteration", new object[] {
                    iterationID}, callback, asyncState);
        }

        /// <remarks/>
        public RequestGeneralDTO[] EndRetrieveAttachedRequestsForIteration(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((RequestGeneralDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAttachedRequestsForIterationAsync(int iterationID)
        {
            this.RetrieveAttachedRequestsForIterationAsync(iterationID, null);
        }

        /// <remarks/>
        public void RetrieveAttachedRequestsForIterationAsync(int iterationID, object userState)
        {
            if ((this.RetrieveAttachedRequestsForIterationOperationCompleted == null))
            {
                this.RetrieveAttachedRequestsForIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAttachedRequestsForIterationOperationCompleted);
            }
            this.InvokeAsync("RetrieveAttachedRequestsForIteration", new object[] {
                    iterationID}, this.RetrieveAttachedRequestsForIterationOperationCompleted, userState);
        }

        private void OnRetrieveAttachedRequestsForIterationOperationCompleted(object arg)
        {
            if ((this.RetrieveAttachedRequestsForIterationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAttachedRequestsForIterationCompleted(this, new RetrieveAttachedRequestsForIterationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddRequestGeneralToIteration", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddRequestGeneralToIteration(int iterationID, RequestGeneralDTO requestGeneral)
        {
            object[] results = this.Invoke("AddRequestGeneralToIteration", new object[] {
                    iterationID,
                    requestGeneral});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddRequestGeneralToIteration(int iterationID, RequestGeneralDTO requestGeneral, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddRequestGeneralToIteration", new object[] {
                    iterationID,
                    requestGeneral}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddRequestGeneralToIteration(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddRequestGeneralToIterationAsync(int iterationID, RequestGeneralDTO requestGeneral)
        {
            this.AddRequestGeneralToIterationAsync(iterationID, requestGeneral, null);
        }

        /// <remarks/>
        public void AddRequestGeneralToIterationAsync(int iterationID, RequestGeneralDTO requestGeneral, object userState)
        {
            if ((this.AddRequestGeneralToIterationOperationCompleted == null))
            {
                this.AddRequestGeneralToIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRequestGeneralToIterationOperationCompleted);
            }
            this.InvokeAsync("AddRequestGeneralToIteration", new object[] {
                    iterationID,
                    requestGeneral}, this.AddRequestGeneralToIterationOperationCompleted, userState);
        }

        private void OnAddRequestGeneralToIterationOperationCompleted(object arg)
        {
            if ((this.AddRequestGeneralToIterationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRequestGeneralToIterationCompleted(this, new AddRequestGeneralToIterationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveRequestGeneralFromIteration", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveRequestGeneralFromIteration(int iterationID, int requestGeneralID)
        {
            this.Invoke("RemoveRequestGeneralFromIteration", new object[] {
                    iterationID,
                    requestGeneralID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginRemoveRequestGeneralFromIteration(int iterationID, int requestGeneralID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RemoveRequestGeneralFromIteration", new object[] {
                    iterationID,
                    requestGeneralID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndRemoveRequestGeneralFromIteration(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void RemoveRequestGeneralFromIterationAsync(int iterationID, int requestGeneralID)
        {
            this.RemoveRequestGeneralFromIterationAsync(iterationID, requestGeneralID, null);
        }

        /// <remarks/>
        public void RemoveRequestGeneralFromIterationAsync(int iterationID, int requestGeneralID, object userState)
        {
            if ((this.RemoveRequestGeneralFromIterationOperationCompleted == null))
            {
                this.RemoveRequestGeneralFromIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveRequestGeneralFromIterationOperationCompleted);
            }
            this.InvokeAsync("RemoveRequestGeneralFromIteration", new object[] {
                    iterationID,
                    requestGeneralID}, this.RemoveRequestGeneralFromIterationOperationCompleted, userState);
        }

        private void OnRemoveRequestGeneralFromIterationOperationCompleted(object arg)
        {
            if ((this.RemoveRequestGeneralFromIterationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveRequestGeneralFromIterationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveUserStoriesForIteration", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserStoryDTO[] RetrieveUserStoriesForIteration(int iterationID)
        {
            object[] results = this.Invoke("RetrieveUserStoriesForIteration", new object[] {
                    iterationID});
            return ((UserStoryDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveUserStoriesForIteration(int iterationID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveUserStoriesForIteration", new object[] {
                    iterationID}, callback, asyncState);
        }

        /// <remarks/>
        public UserStoryDTO[] EndRetrieveUserStoriesForIteration(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserStoryDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveUserStoriesForIterationAsync(int iterationID)
        {
            this.RetrieveUserStoriesForIterationAsync(iterationID, null);
        }

        /// <remarks/>
        public void RetrieveUserStoriesForIterationAsync(int iterationID, object userState)
        {
            if ((this.RetrieveUserStoriesForIterationOperationCompleted == null))
            {
                this.RetrieveUserStoriesForIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveUserStoriesForIterationOperationCompleted);
            }
            this.InvokeAsync("RetrieveUserStoriesForIteration", new object[] {
                    iterationID}, this.RetrieveUserStoriesForIterationOperationCompleted, userState);
        }

        private void OnRetrieveUserStoriesForIterationOperationCompleted(object arg)
        {
            if ((this.RetrieveUserStoriesForIterationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveUserStoriesForIterationCompleted(this, new RetrieveUserStoriesForIterationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddUserStoryToIteration", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUserStoryToIteration(int iterationID, UserStoryDTO userStory)
        {
            object[] results = this.Invoke("AddUserStoryToIteration", new object[] {
                    iterationID,
                    userStory});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddUserStoryToIteration(int iterationID, UserStoryDTO userStory, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddUserStoryToIteration", new object[] {
                    iterationID,
                    userStory}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddUserStoryToIteration(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddUserStoryToIterationAsync(int iterationID, UserStoryDTO userStory)
        {
            this.AddUserStoryToIterationAsync(iterationID, userStory, null);
        }

        /// <remarks/>
        public void AddUserStoryToIterationAsync(int iterationID, UserStoryDTO userStory, object userState)
        {
            if ((this.AddUserStoryToIterationOperationCompleted == null))
            {
                this.AddUserStoryToIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserStoryToIterationOperationCompleted);
            }
            this.InvokeAsync("AddUserStoryToIteration", new object[] {
                    iterationID,
                    userStory}, this.AddUserStoryToIterationOperationCompleted, userState);
        }

        private void OnAddUserStoryToIterationOperationCompleted(object arg)
        {
            if ((this.AddUserStoryToIterationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserStoryToIterationCompleted(this, new AddUserStoryToIterationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveUserStoryFromIteration", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveUserStoryFromIteration(int iterationID, int generalID)
        {
            this.Invoke("RemoveUserStoryFromIteration", new object[] {
                    iterationID,
                    generalID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginRemoveUserStoryFromIteration(int iterationID, int generalID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RemoveUserStoryFromIteration", new object[] {
                    iterationID,
                    generalID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndRemoveUserStoryFromIteration(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void RemoveUserStoryFromIterationAsync(int iterationID, int generalID)
        {
            this.RemoveUserStoryFromIterationAsync(iterationID, generalID, null);
        }

        /// <remarks/>
        public void RemoveUserStoryFromIterationAsync(int iterationID, int generalID, object userState)
        {
            if ((this.RemoveUserStoryFromIterationOperationCompleted == null))
            {
                this.RemoveUserStoryFromIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserStoryFromIterationOperationCompleted);
            }
            this.InvokeAsync("RemoveUserStoryFromIteration", new object[] {
                    iterationID,
                    generalID}, this.RemoveUserStoryFromIterationOperationCompleted, userState);
        }

        private void OnRemoveUserStoryFromIterationOperationCompleted(object arg)
        {
            if ((this.RemoveUserStoryFromIterationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserStoryFromIterationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveBuildsForIteration", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BuildDTO[] RetrieveBuildsForIteration(int iterationID)
        {
            object[] results = this.Invoke("RetrieveBuildsForIteration", new object[] {
                    iterationID});
            return ((BuildDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveBuildsForIteration(int iterationID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveBuildsForIteration", new object[] {
                    iterationID}, callback, asyncState);
        }

        /// <remarks/>
        public BuildDTO[] EndRetrieveBuildsForIteration(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BuildDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveBuildsForIterationAsync(int iterationID)
        {
            this.RetrieveBuildsForIterationAsync(iterationID, null);
        }

        /// <remarks/>
        public void RetrieveBuildsForIterationAsync(int iterationID, object userState)
        {
            if ((this.RetrieveBuildsForIterationOperationCompleted == null))
            {
                this.RetrieveBuildsForIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveBuildsForIterationOperationCompleted);
            }
            this.InvokeAsync("RetrieveBuildsForIteration", new object[] {
                    iterationID}, this.RetrieveBuildsForIterationOperationCompleted, userState);
        }

        private void OnRetrieveBuildsForIterationOperationCompleted(object arg)
        {
            if ((this.RetrieveBuildsForIterationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveBuildsForIterationCompleted(this, new RetrieveBuildsForIterationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/AddBuildToIteration", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddBuildToIteration(int iterationID, BuildDTO build)
        {
            object[] results = this.Invoke("AddBuildToIteration", new object[] {
                    iterationID,
                    build});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddBuildToIteration(int iterationID, BuildDTO build, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddBuildToIteration", new object[] {
                    iterationID,
                    build}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddBuildToIteration(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddBuildToIterationAsync(int iterationID, BuildDTO build)
        {
            this.AddBuildToIterationAsync(iterationID, build, null);
        }

        /// <remarks/>
        public void AddBuildToIterationAsync(int iterationID, BuildDTO build, object userState)
        {
            if ((this.AddBuildToIterationOperationCompleted == null))
            {
                this.AddBuildToIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBuildToIterationOperationCompleted);
            }
            this.InvokeAsync("AddBuildToIteration", new object[] {
                    iterationID,
                    build}, this.AddBuildToIterationOperationCompleted, userState);
        }

        private void OnAddBuildToIterationOperationCompleted(object arg)
        {
            if ((this.AddBuildToIterationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBuildToIterationCompleted(this, new AddBuildToIterationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RemoveBuildFromIteration", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveBuildFromIteration(int iterationID, int generalID)
        {
            this.Invoke("RemoveBuildFromIteration", new object[] {
                    iterationID,
                    generalID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginRemoveBuildFromIteration(int iterationID, int generalID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RemoveBuildFromIteration", new object[] {
                    iterationID,
                    generalID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndRemoveBuildFromIteration(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void RemoveBuildFromIterationAsync(int iterationID, int generalID)
        {
            this.RemoveBuildFromIterationAsync(iterationID, generalID, null);
        }

        /// <remarks/>
        public void RemoveBuildFromIterationAsync(int iterationID, int generalID, object userState)
        {
            if ((this.RemoveBuildFromIterationOperationCompleted == null))
            {
                this.RemoveBuildFromIterationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveBuildFromIterationOperationCompleted);
            }
            this.InvokeAsync("RemoveBuildFromIteration", new object[] {
                    iterationID,
                    generalID}, this.RemoveBuildFromIterationOperationCompleted, userState);
        }

        private void OnRemoveBuildFromIterationOperationCompleted(object arg)
        {
            if ((this.RemoveBuildFromIterationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveBuildFromIterationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/GetByID", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IterationDTO GetByID(int id)
        {
            object[] results = this.Invoke("GetByID", new object[] {
                    id});
            return ((IterationDTO)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetByID(int id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetByID", new object[] {
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public IterationDTO EndGetByID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((IterationDTO)(results[0]));
        }

        /// <remarks/>
        public void GetByIDAsync(int id)
        {
            this.GetByIDAsync(id, null);
        }

        /// <remarks/>
        public void GetByIDAsync(int id, object userState)
        {
            if ((this.GetByIDOperationCompleted == null))
            {
                this.GetByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByIDOperationCompleted);
            }
            this.InvokeAsync("GetByID", new object[] {
                    id}, this.GetByIDOperationCompleted, userState);
        }

        private void OnGetByIDOperationCompleted(object arg)
        {
            if ((this.GetByIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByIDCompleted(this, new GetByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/Create", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Create(IterationDTO entity)
        {
            object[] results = this.Invoke("Create", new object[] {
                    entity});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCreate(IterationDTO entity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Create", new object[] {
                    entity}, callback, asyncState);
        }

        /// <remarks/>
        public int EndCreate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void CreateAsync(IterationDTO entity)
        {
            this.CreateAsync(entity, null);
        }

        /// <remarks/>
        public void CreateAsync(IterationDTO entity, object userState)
        {
            if ((this.CreateOperationCompleted == null))
            {
                this.CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperationCompleted);
            }
            this.InvokeAsync("Create", new object[] {
                    entity}, this.CreateOperationCompleted, userState);
        }

        private void OnCreateOperationCompleted(object arg)
        {
            if ((this.CreateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/Update", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update(IterationDTO entity)
        {
            this.Invoke("Update", new object[] {
                    entity});
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdate(IterationDTO entity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Update", new object[] {
                    entity}, callback, asyncState);
        }

        /// <remarks/>
        public void EndUpdate(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void UpdateAsync(IterationDTO entity)
        {
            this.UpdateAsync(entity, null);
        }

        /// <remarks/>
        public void UpdateAsync(IterationDTO entity, object userState)
        {
            if ((this.UpdateOperationCompleted == null))
            {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                    entity}, this.UpdateOperationCompleted, userState);
        }

        private void OnUpdateOperationCompleted(object arg)
        {
            if ((this.UpdateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/Delete", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete(int id)
        {
            this.Invoke("Delete", new object[] {
                    id});
        }

        /// <remarks/>
        public System.IAsyncResult BeginDelete(int id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Delete", new object[] {
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public void EndDelete(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void DeleteAsync(int id)
        {
            this.DeleteAsync(id, null);
        }

        /// <remarks/>
        public void DeleteAsync(int id, object userState)
        {
            if ((this.DeleteOperationCompleted == null))
            {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                    id}, this.DeleteOperationCompleted, userState);
        }

        private void OnDeleteOperationCompleted(object arg)
        {
            if ((this.DeleteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveAll", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IterationDTO[] RetrieveAll()
        {
            object[] results = this.Invoke("RetrieveAll", new object[0]);
            return ((IterationDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveAll(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveAll", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public IterationDTO[] EndRetrieveAll(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((IterationDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAllAsync()
        {
            this.RetrieveAllAsync(null);
        }

        /// <remarks/>
        public void RetrieveAllAsync(object userState)
        {
            if ((this.RetrieveAllOperationCompleted == null))
            {
                this.RetrieveAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllOperationCompleted);
            }
            this.InvokeAsync("RetrieveAll", new object[0], this.RetrieveAllOperationCompleted, userState);
        }

        private void OnRetrieveAllOperationCompleted(object arg)
        {
            if ((this.RetrieveAllCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllCompleted(this, new RetrieveAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/Retrieve", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IterationDTO[] Retrieve(string hql, object[] parameters)
        {
            object[] results = this.Invoke("Retrieve", new object[] {
                    hql,
                    parameters});
            return ((IterationDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieve(string hql, object[] parameters, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Retrieve", new object[] {
                    hql,
                    parameters}, callback, asyncState);
        }

        /// <remarks/>
        public IterationDTO[] EndRetrieve(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((IterationDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrieveAsync(string hql, object[] parameters)
        {
            this.RetrieveAsync(hql, parameters, null);
        }

        /// <remarks/>
        public void RetrieveAsync(string hql, object[] parameters, object userState)
        {
            if ((this.RetrieveOperationCompleted == null))
            {
                this.RetrieveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveOperationCompleted);
            }
            this.InvokeAsync("Retrieve", new object[] {
                    hql,
                    parameters}, this.RetrieveOperationCompleted, userState);
        }

        private void OnRetrieveOperationCompleted(object arg)
        {
            if ((this.RetrieveCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCompleted(this, new RetrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/GetIDs", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetIDs(string hql, object[] parameters)
        {
            object[] results = this.Invoke("GetIDs", new object[] {
                    hql,
                    parameters});
            return ((int[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetIDs(string hql, object[] parameters, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetIDs", new object[] {
                    hql,
                    parameters}, callback, asyncState);
        }

        /// <remarks/>
        public int[] EndGetIDs(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }

        /// <remarks/>
        public void GetIDsAsync(string hql, object[] parameters)
        {
            this.GetIDsAsync(hql, parameters, null);
        }

        /// <remarks/>
        public void GetIDsAsync(string hql, object[] parameters, object userState)
        {
            if ((this.GetIDsOperationCompleted == null))
            {
                this.GetIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIDsOperationCompleted);
            }
            this.InvokeAsync("GetIDs", new object[] {
                    hql,
                    parameters}, this.GetIDsOperationCompleted, userState);
        }

        private void OnGetIDsOperationCompleted(object arg)
        {
            if ((this.GetIDsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIDsCompleted(this, new GetIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrievePage", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IterationDTO[] RetrievePage(string hql, int page, int pageSize, object[] parameters)
        {
            object[] results = this.Invoke("RetrievePage", new object[] {
                    hql,
                    page,
                    pageSize,
                    parameters});
            return ((IterationDTO[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrievePage(string hql, int page, int pageSize, object[] parameters, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrievePage", new object[] {
                    hql,
                    page,
                    pageSize,
                    parameters}, callback, asyncState);
        }

        /// <remarks/>
        public IterationDTO[] EndRetrievePage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((IterationDTO[])(results[0]));
        }

        /// <remarks/>
        public void RetrievePageAsync(string hql, int page, int pageSize, object[] parameters)
        {
            this.RetrievePageAsync(hql, page, pageSize, parameters, null);
        }

        /// <remarks/>
        public void RetrievePageAsync(string hql, int page, int pageSize, object[] parameters, object userState)
        {
            if ((this.RetrievePageOperationCompleted == null))
            {
                this.RetrievePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrievePageOperationCompleted);
            }
            this.InvokeAsync("RetrievePage", new object[] {
                    hql,
                    page,
                    pageSize,
                    parameters}, this.RetrievePageOperationCompleted, userState);
        }

        private void OnRetrievePageOperationCompleted(object arg)
        {
            if ((this.RetrievePageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrievePageCompleted(this, new RetrievePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://targetprocess.com/RetrieveCount", RequestNamespace = "http://targetprocess.com", ResponseNamespace = "http://targetprocess.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RetrieveCount(string hql, object[] parameters)
        {
            object[] results = this.Invoke("RetrieveCount", new object[] {
                    hql,
                    parameters});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrieveCount(string hql, object[] parameters, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrieveCount", new object[] {
                    hql,
                    parameters}, callback, asyncState);
        }

        /// <remarks/>
        public int EndRetrieveCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void RetrieveCountAsync(string hql, object[] parameters)
        {
            this.RetrieveCountAsync(hql, parameters, null);
        }

        /// <remarks/>
        public void RetrieveCountAsync(string hql, object[] parameters, object userState)
        {
            if ((this.RetrieveCountOperationCompleted == null))
            {
                this.RetrieveCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCountOperationCompleted);
            }
            this.InvokeAsync("RetrieveCount", new object[] {
                    hql,
                    parameters}, this.RetrieveCountOperationCompleted, userState);
        }

        private void OnRetrieveCountOperationCompleted(object arg)
        {
            if ((this.RetrieveCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCountCompleted(this, new RetrieveCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public partial class IterationDTO : DataTransferObject
    {

        private System.Nullable<int> iterationIDField;

        private string nameField;

        private string descriptionField;

        private System.Nullable<System.DateTime> startDateField;

        private System.Nullable<System.DateTime> endDateField;

        private System.Nullable<System.DateTime> createDateField;

        private System.Nullable<System.DateTime> modifyDateField;

        private System.Nullable<System.DateTime> lastCommentDateField;

        private System.Nullable<double> numericPriorityField;

        private string customField1Field;

        private string customField2Field;

        private string customField3Field;

        private string customField4Field;

        private string customField5Field;

        private string customField6Field;

        private string customField7Field;

        private string customField8Field;

        private string customField9Field;

        private string customField10Field;

        private string customField11Field;

        private string customField12Field;

        private string customField13Field;

        private string customField14Field;

        private string customField15Field;

        private System.Nullable<decimal> velocityField;

        private System.Nullable<int> durationField;

        private System.Nullable<int> lastCommentUserIDField;

        private System.Nullable<int> parentProjectIDField;

        private System.Nullable<int> ownerIDField;

        private System.Nullable<int> lastEditorIDField;

        private System.Nullable<int> releaseIDField;

        private string parentProjectNameField;

        private string entityTypeNameField;

        private string releaseNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> IterationID
        {
            get
            {
                return this.iterationIDField;
            }
            set
            {
                this.iterationIDField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> StartDate
        {
            get
            {
                return this.startDateField;
            }
            set
            {
                this.startDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> EndDate
        {
            get
            {
                return this.endDateField;
            }
            set
            {
                this.endDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> CreateDate
        {
            get
            {
                return this.createDateField;
            }
            set
            {
                this.createDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> ModifyDate
        {
            get
            {
                return this.modifyDateField;
            }
            set
            {
                this.modifyDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> LastCommentDate
        {
            get
            {
                return this.lastCommentDateField;
            }
            set
            {
                this.lastCommentDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<double> NumericPriority
        {
            get
            {
                return this.numericPriorityField;
            }
            set
            {
                this.numericPriorityField = value;
            }
        }

        /// <remarks/>
        public string CustomField1
        {
            get
            {
                return this.customField1Field;
            }
            set
            {
                this.customField1Field = value;
            }
        }

        /// <remarks/>
        public string CustomField2
        {
            get
            {
                return this.customField2Field;
            }
            set
            {
                this.customField2Field = value;
            }
        }

        /// <remarks/>
        public string CustomField3
        {
            get
            {
                return this.customField3Field;
            }
            set
            {
                this.customField3Field = value;
            }
        }

        /// <remarks/>
        public string CustomField4
        {
            get
            {
                return this.customField4Field;
            }
            set
            {
                this.customField4Field = value;
            }
        }

        /// <remarks/>
        public string CustomField5
        {
            get
            {
                return this.customField5Field;
            }
            set
            {
                this.customField5Field = value;
            }
        }

        /// <remarks/>
        public string CustomField6
        {
            get
            {
                return this.customField6Field;
            }
            set
            {
                this.customField6Field = value;
            }
        }

        /// <remarks/>
        public string CustomField7
        {
            get
            {
                return this.customField7Field;
            }
            set
            {
                this.customField7Field = value;
            }
        }

        /// <remarks/>
        public string CustomField8
        {
            get
            {
                return this.customField8Field;
            }
            set
            {
                this.customField8Field = value;
            }
        }

        /// <remarks/>
        public string CustomField9
        {
            get
            {
                return this.customField9Field;
            }
            set
            {
                this.customField9Field = value;
            }
        }

        /// <remarks/>
        public string CustomField10
        {
            get
            {
                return this.customField10Field;
            }
            set
            {
                this.customField10Field = value;
            }
        }

        /// <remarks/>
        public string CustomField11
        {
            get
            {
                return this.customField11Field;
            }
            set
            {
                this.customField11Field = value;
            }
        }

        /// <remarks/>
        public string CustomField12
        {
            get
            {
                return this.customField12Field;
            }
            set
            {
                this.customField12Field = value;
            }
        }

        /// <remarks/>
        public string CustomField13
        {
            get
            {
                return this.customField13Field;
            }
            set
            {
                this.customField13Field = value;
            }
        }

        /// <remarks/>
        public string CustomField14
        {
            get
            {
                return this.customField14Field;
            }
            set
            {
                this.customField14Field = value;
            }
        }

        /// <remarks/>
        public string CustomField15
        {
            get
            {
                return this.customField15Field;
            }
            set
            {
                this.customField15Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> Velocity
        {
            get
            {
                return this.velocityField;
            }
            set
            {
                this.velocityField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> Duration
        {
            get
            {
                return this.durationField;
            }
            set
            {
                this.durationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> LastCommentUserID
        {
            get
            {
                return this.lastCommentUserIDField;
            }
            set
            {
                this.lastCommentUserIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ParentProjectID
        {
            get
            {
                return this.parentProjectIDField;
            }
            set
            {
                this.parentProjectIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> OwnerID
        {
            get
            {
                return this.ownerIDField;
            }
            set
            {
                this.ownerIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> LastEditorID
        {
            get
            {
                return this.lastEditorIDField;
            }
            set
            {
                this.lastEditorIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ReleaseID
        {
            get
            {
                return this.releaseIDField;
            }
            set
            {
                this.releaseIDField = value;
            }
        }

        /// <remarks/>
        public string ParentProjectName
        {
            get
            {
                return this.parentProjectNameField;
            }
            set
            {
                this.parentProjectNameField = value;
            }
        }

        /// <remarks/>
        public string EntityTypeName
        {
            get
            {
                return this.entityTypeNameField;
            }
            set
            {
                this.entityTypeNameField = value;
            }
        }

        /// <remarks/>
        public string ReleaseName
        {
            get
            {
                return this.releaseNameField;
            }
            set
            {
                this.releaseNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BuildDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserStoryDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RequestGeneralDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AttachmentDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CommentDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IterationDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public abstract partial class DataTransferObject
    {

        private System.Nullable<int> idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public partial class BuildDTO : DataTransferObject
    {

        private System.Nullable<int> buildIDField;

        private string nameField;

        private string descriptionField;

        private System.Nullable<System.DateTime> startDateField;

        private System.Nullable<System.DateTime> endDateField;

        private System.Nullable<System.DateTime> createDateField;

        private System.Nullable<System.DateTime> modifyDateField;

        private System.Nullable<System.DateTime> lastCommentDateField;

        private System.Nullable<double> numericPriorityField;

        private string customField1Field;

        private string customField2Field;

        private string customField3Field;

        private string customField4Field;

        private string customField5Field;

        private string customField6Field;

        private string customField7Field;

        private string customField8Field;

        private string customField9Field;

        private string customField10Field;

        private string customField11Field;

        private string customField12Field;

        private string customField13Field;

        private string customField14Field;

        private string customField15Field;

        private System.DateTime buildDateField;

        private System.Nullable<int> lastCommentUserIDField;

        private System.Nullable<int> parentProjectIDField;

        private System.Nullable<int> ownerIDField;

        private System.Nullable<int> lastEditorIDField;

        private System.Nullable<int> iterationIDField;

        private System.Nullable<int> releaseIDField;

        private string parentProjectNameField;

        private string entityTypeNameField;

        private string iterationNameField;

        private string releaseNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> BuildID
        {
            get
            {
                return this.buildIDField;
            }
            set
            {
                this.buildIDField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> StartDate
        {
            get
            {
                return this.startDateField;
            }
            set
            {
                this.startDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> EndDate
        {
            get
            {
                return this.endDateField;
            }
            set
            {
                this.endDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> CreateDate
        {
            get
            {
                return this.createDateField;
            }
            set
            {
                this.createDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> ModifyDate
        {
            get
            {
                return this.modifyDateField;
            }
            set
            {
                this.modifyDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> LastCommentDate
        {
            get
            {
                return this.lastCommentDateField;
            }
            set
            {
                this.lastCommentDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<double> NumericPriority
        {
            get
            {
                return this.numericPriorityField;
            }
            set
            {
                this.numericPriorityField = value;
            }
        }

        /// <remarks/>
        public string CustomField1
        {
            get
            {
                return this.customField1Field;
            }
            set
            {
                this.customField1Field = value;
            }
        }

        /// <remarks/>
        public string CustomField2
        {
            get
            {
                return this.customField2Field;
            }
            set
            {
                this.customField2Field = value;
            }
        }

        /// <remarks/>
        public string CustomField3
        {
            get
            {
                return this.customField3Field;
            }
            set
            {
                this.customField3Field = value;
            }
        }

        /// <remarks/>
        public string CustomField4
        {
            get
            {
                return this.customField4Field;
            }
            set
            {
                this.customField4Field = value;
            }
        }

        /// <remarks/>
        public string CustomField5
        {
            get
            {
                return this.customField5Field;
            }
            set
            {
                this.customField5Field = value;
            }
        }

        /// <remarks/>
        public string CustomField6
        {
            get
            {
                return this.customField6Field;
            }
            set
            {
                this.customField6Field = value;
            }
        }

        /// <remarks/>
        public string CustomField7
        {
            get
            {
                return this.customField7Field;
            }
            set
            {
                this.customField7Field = value;
            }
        }

        /// <remarks/>
        public string CustomField8
        {
            get
            {
                return this.customField8Field;
            }
            set
            {
                this.customField8Field = value;
            }
        }

        /// <remarks/>
        public string CustomField9
        {
            get
            {
                return this.customField9Field;
            }
            set
            {
                this.customField9Field = value;
            }
        }

        /// <remarks/>
        public string CustomField10
        {
            get
            {
                return this.customField10Field;
            }
            set
            {
                this.customField10Field = value;
            }
        }

        /// <remarks/>
        public string CustomField11
        {
            get
            {
                return this.customField11Field;
            }
            set
            {
                this.customField11Field = value;
            }
        }

        /// <remarks/>
        public string CustomField12
        {
            get
            {
                return this.customField12Field;
            }
            set
            {
                this.customField12Field = value;
            }
        }

        /// <remarks/>
        public string CustomField13
        {
            get
            {
                return this.customField13Field;
            }
            set
            {
                this.customField13Field = value;
            }
        }

        /// <remarks/>
        public string CustomField14
        {
            get
            {
                return this.customField14Field;
            }
            set
            {
                this.customField14Field = value;
            }
        }

        /// <remarks/>
        public string CustomField15
        {
            get
            {
                return this.customField15Field;
            }
            set
            {
                this.customField15Field = value;
            }
        }

        /// <remarks/>
        public System.DateTime BuildDate
        {
            get
            {
                return this.buildDateField;
            }
            set
            {
                this.buildDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> LastCommentUserID
        {
            get
            {
                return this.lastCommentUserIDField;
            }
            set
            {
                this.lastCommentUserIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ParentProjectID
        {
            get
            {
                return this.parentProjectIDField;
            }
            set
            {
                this.parentProjectIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> OwnerID
        {
            get
            {
                return this.ownerIDField;
            }
            set
            {
                this.ownerIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> LastEditorID
        {
            get
            {
                return this.lastEditorIDField;
            }
            set
            {
                this.lastEditorIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> IterationID
        {
            get
            {
                return this.iterationIDField;
            }
            set
            {
                this.iterationIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ReleaseID
        {
            get
            {
                return this.releaseIDField;
            }
            set
            {
                this.releaseIDField = value;
            }
        }

        /// <remarks/>
        public string ParentProjectName
        {
            get
            {
                return this.parentProjectNameField;
            }
            set
            {
                this.parentProjectNameField = value;
            }
        }

        /// <remarks/>
        public string EntityTypeName
        {
            get
            {
                return this.entityTypeNameField;
            }
            set
            {
                this.entityTypeNameField = value;
            }
        }

        /// <remarks/>
        public string IterationName
        {
            get
            {
                return this.iterationNameField;
            }
            set
            {
                this.iterationNameField = value;
            }
        }

        /// <remarks/>
        public string ReleaseName
        {
            get
            {
                return this.releaseNameField;
            }
            set
            {
                this.releaseNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public partial class UserStoryDTO : DataTransferObject
    {

        private System.Nullable<int> userStoryIDField;

        private string nameField;

        private string descriptionField;

        private System.Nullable<System.DateTime> startDateField;

        private System.Nullable<System.DateTime> endDateField;

        private System.Nullable<System.DateTime> createDateField;

        private System.Nullable<System.DateTime> modifyDateField;

        private System.Nullable<System.DateTime> lastCommentDateField;

        private System.Nullable<double> numericPriorityField;

        private string customField1Field;

        private string customField2Field;

        private string customField3Field;

        private string customField4Field;

        private string customField5Field;

        private string customField6Field;

        private string customField7Field;

        private string customField8Field;

        private string customField9Field;

        private string customField10Field;

        private string customField11Field;

        private string customField12Field;

        private string customField13Field;

        private string customField14Field;

        private string customField15Field;

        private decimal effortField;

        private decimal effortCompletedField;

        private decimal effortToDoField;

        private System.Nullable<decimal> timeSpentField;

        private System.Nullable<decimal> timeRemainField;

        private decimal initialEstimateField;

        private System.Nullable<int> lastCommentUserIDField;

        private System.Nullable<int> ownerIDField;

        private System.Nullable<int> lastEditorIDField;

        private System.Nullable<int> entityStateIDField;

        private System.Nullable<int> priorityIDField;

        private System.Nullable<int> projectIDField;

        private System.Nullable<int> iterationIDField;

        private System.Nullable<int> parentIDField;

        private System.Nullable<int> releaseIDField;

        private System.Nullable<int> featureIDField;

        private string entityTypeNameField;

        private string entityStateNameField;

        private string priorityNameField;

        private string projectNameField;

        private string iterationNameField;

        private string parentNameField;

        private string releaseNameField;

        private string featureNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> UserStoryID
        {
            get
            {
                return this.userStoryIDField;
            }
            set
            {
                this.userStoryIDField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> StartDate
        {
            get
            {
                return this.startDateField;
            }
            set
            {
                this.startDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> EndDate
        {
            get
            {
                return this.endDateField;
            }
            set
            {
                this.endDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> CreateDate
        {
            get
            {
                return this.createDateField;
            }
            set
            {
                this.createDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> ModifyDate
        {
            get
            {
                return this.modifyDateField;
            }
            set
            {
                this.modifyDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> LastCommentDate
        {
            get
            {
                return this.lastCommentDateField;
            }
            set
            {
                this.lastCommentDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<double> NumericPriority
        {
            get
            {
                return this.numericPriorityField;
            }
            set
            {
                this.numericPriorityField = value;
            }
        }

        /// <remarks/>
        public string CustomField1
        {
            get
            {
                return this.customField1Field;
            }
            set
            {
                this.customField1Field = value;
            }
        }

        /// <remarks/>
        public string CustomField2
        {
            get
            {
                return this.customField2Field;
            }
            set
            {
                this.customField2Field = value;
            }
        }

        /// <remarks/>
        public string CustomField3
        {
            get
            {
                return this.customField3Field;
            }
            set
            {
                this.customField3Field = value;
            }
        }

        /// <remarks/>
        public string CustomField4
        {
            get
            {
                return this.customField4Field;
            }
            set
            {
                this.customField4Field = value;
            }
        }

        /// <remarks/>
        public string CustomField5
        {
            get
            {
                return this.customField5Field;
            }
            set
            {
                this.customField5Field = value;
            }
        }

        /// <remarks/>
        public string CustomField6
        {
            get
            {
                return this.customField6Field;
            }
            set
            {
                this.customField6Field = value;
            }
        }

        /// <remarks/>
        public string CustomField7
        {
            get
            {
                return this.customField7Field;
            }
            set
            {
                this.customField7Field = value;
            }
        }

        /// <remarks/>
        public string CustomField8
        {
            get
            {
                return this.customField8Field;
            }
            set
            {
                this.customField8Field = value;
            }
        }

        /// <remarks/>
        public string CustomField9
        {
            get
            {
                return this.customField9Field;
            }
            set
            {
                this.customField9Field = value;
            }
        }

        /// <remarks/>
        public string CustomField10
        {
            get
            {
                return this.customField10Field;
            }
            set
            {
                this.customField10Field = value;
            }
        }

        /// <remarks/>
        public string CustomField11
        {
            get
            {
                return this.customField11Field;
            }
            set
            {
                this.customField11Field = value;
            }
        }

        /// <remarks/>
        public string CustomField12
        {
            get
            {
                return this.customField12Field;
            }
            set
            {
                this.customField12Field = value;
            }
        }

        /// <remarks/>
        public string CustomField13
        {
            get
            {
                return this.customField13Field;
            }
            set
            {
                this.customField13Field = value;
            }
        }

        /// <remarks/>
        public string CustomField14
        {
            get
            {
                return this.customField14Field;
            }
            set
            {
                this.customField14Field = value;
            }
        }

        /// <remarks/>
        public string CustomField15
        {
            get
            {
                return this.customField15Field;
            }
            set
            {
                this.customField15Field = value;
            }
        }

        /// <remarks/>
        public decimal Effort
        {
            get
            {
                return this.effortField;
            }
            set
            {
                this.effortField = value;
            }
        }

        /// <remarks/>
        public decimal EffortCompleted
        {
            get
            {
                return this.effortCompletedField;
            }
            set
            {
                this.effortCompletedField = value;
            }
        }

        /// <remarks/>
        public decimal EffortToDo
        {
            get
            {
                return this.effortToDoField;
            }
            set
            {
                this.effortToDoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> TimeSpent
        {
            get
            {
                return this.timeSpentField;
            }
            set
            {
                this.timeSpentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> TimeRemain
        {
            get
            {
                return this.timeRemainField;
            }
            set
            {
                this.timeRemainField = value;
            }
        }

        /// <remarks/>
        public decimal InitialEstimate
        {
            get
            {
                return this.initialEstimateField;
            }
            set
            {
                this.initialEstimateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> LastCommentUserID
        {
            get
            {
                return this.lastCommentUserIDField;
            }
            set
            {
                this.lastCommentUserIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> OwnerID
        {
            get
            {
                return this.ownerIDField;
            }
            set
            {
                this.ownerIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> LastEditorID
        {
            get
            {
                return this.lastEditorIDField;
            }
            set
            {
                this.lastEditorIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> EntityStateID
        {
            get
            {
                return this.entityStateIDField;
            }
            set
            {
                this.entityStateIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> PriorityID
        {
            get
            {
                return this.priorityIDField;
            }
            set
            {
                this.priorityIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ProjectID
        {
            get
            {
                return this.projectIDField;
            }
            set
            {
                this.projectIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> IterationID
        {
            get
            {
                return this.iterationIDField;
            }
            set
            {
                this.iterationIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ParentID
        {
            get
            {
                return this.parentIDField;
            }
            set
            {
                this.parentIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ReleaseID
        {
            get
            {
                return this.releaseIDField;
            }
            set
            {
                this.releaseIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> FeatureID
        {
            get
            {
                return this.featureIDField;
            }
            set
            {
                this.featureIDField = value;
            }
        }

        /// <remarks/>
        public string EntityTypeName
        {
            get
            {
                return this.entityTypeNameField;
            }
            set
            {
                this.entityTypeNameField = value;
            }
        }

        /// <remarks/>
        public string EntityStateName
        {
            get
            {
                return this.entityStateNameField;
            }
            set
            {
                this.entityStateNameField = value;
            }
        }

        /// <remarks/>
        public string PriorityName
        {
            get
            {
                return this.priorityNameField;
            }
            set
            {
                this.priorityNameField = value;
            }
        }

        /// <remarks/>
        public string ProjectName
        {
            get
            {
                return this.projectNameField;
            }
            set
            {
                this.projectNameField = value;
            }
        }

        /// <remarks/>
        public string IterationName
        {
            get
            {
                return this.iterationNameField;
            }
            set
            {
                this.iterationNameField = value;
            }
        }

        /// <remarks/>
        public string ParentName
        {
            get
            {
                return this.parentNameField;
            }
            set
            {
                this.parentNameField = value;
            }
        }

        /// <remarks/>
        public string ReleaseName
        {
            get
            {
                return this.releaseNameField;
            }
            set
            {
                this.releaseNameField = value;
            }
        }

        /// <remarks/>
        public string FeatureName
        {
            get
            {
                return this.featureNameField;
            }
            set
            {
                this.featureNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public partial class RequestGeneralDTO : DataTransferObject
    {

        private System.Nullable<int> requestGeneralIDField;

        private System.Nullable<System.DateTime> createDateField;

        private System.Nullable<bool> isAttachedField;

        private System.Nullable<int> generalIDField;

        private System.Nullable<int> requestIDField;

        private string generalNameField;

        private string requestNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> RequestGeneralID
        {
            get
            {
                return this.requestGeneralIDField;
            }
            set
            {
                this.requestGeneralIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> CreateDate
        {
            get
            {
                return this.createDateField;
            }
            set
            {
                this.createDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<bool> IsAttached
        {
            get
            {
                return this.isAttachedField;
            }
            set
            {
                this.isAttachedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> GeneralID
        {
            get
            {
                return this.generalIDField;
            }
            set
            {
                this.generalIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> RequestID
        {
            get
            {
                return this.requestIDField;
            }
            set
            {
                this.requestIDField = value;
            }
        }

        /// <remarks/>
        public string GeneralName
        {
            get
            {
                return this.generalNameField;
            }
            set
            {
                this.generalNameField = value;
            }
        }

        /// <remarks/>
        public string RequestName
        {
            get
            {
                return this.requestNameField;
            }
            set
            {
                this.requestNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public partial class AttachmentDTO : DataTransferObject
    {

        private System.Nullable<int> attachmentIDField;

        private string originalFileNameField;

        private string uniqueFileNameField;

        private System.Nullable<System.DateTime> createDateField;

        private string descriptionField;

        private System.Nullable<int> generalIDField;

        private System.Nullable<int> messageIDField;

        private System.Nullable<int> ownerIDField;

        private System.Nullable<int> attachmentFileIDField;

        private string generalNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> AttachmentID
        {
            get
            {
                return this.attachmentIDField;
            }
            set
            {
                this.attachmentIDField = value;
            }
        }

        /// <remarks/>
        public string OriginalFileName
        {
            get
            {
                return this.originalFileNameField;
            }
            set
            {
                this.originalFileNameField = value;
            }
        }

        /// <remarks/>
        public string UniqueFileName
        {
            get
            {
                return this.uniqueFileNameField;
            }
            set
            {
                this.uniqueFileNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> CreateDate
        {
            get
            {
                return this.createDateField;
            }
            set
            {
                this.createDateField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> GeneralID
        {
            get
            {
                return this.generalIDField;
            }
            set
            {
                this.generalIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> MessageID
        {
            get
            {
                return this.messageIDField;
            }
            set
            {
                this.messageIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> OwnerID
        {
            get
            {
                return this.ownerIDField;
            }
            set
            {
                this.ownerIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> AttachmentFileID
        {
            get
            {
                return this.attachmentFileIDField;
            }
            set
            {
                this.attachmentFileIDField = value;
            }
        }

        /// <remarks/>
        public string GeneralName
        {
            get
            {
                return this.generalNameField;
            }
            set
            {
                this.generalNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://targetprocess.com")]
    public partial class CommentDTO : DataTransferObject
    {

        private System.Nullable<int> commentIDField;

        private string descriptionField;

        private System.Nullable<System.DateTime> createDateField;

        private System.Nullable<int> generalIDField;

        private System.Nullable<int> ownerIDField;

        private System.Nullable<int> parentIDField;

        private string generalNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> CommentID
        {
            get
            {
                return this.commentIDField;
            }
            set
            {
                this.commentIDField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> CreateDate
        {
            get
            {
                return this.createDateField;
            }
            set
            {
                this.createDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> GeneralID
        {
            get
            {
                return this.generalIDField;
            }
            set
            {
                this.generalIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> OwnerID
        {
            get
            {
                return this.ownerIDField;
            }
            set
            {
                this.ownerIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ParentID
        {
            get
            {
                return this.parentIDField;
            }
            set
            {
                this.parentIDField = value;
            }
        }

        /// <remarks/>
        public string GeneralName
        {
            get
            {
                return this.generalNameField;
            }
            set
            {
                this.generalNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAllForLastCommentUserCompletedEventHandler(object sender, RetrieveAllForLastCommentUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllForLastCommentUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAllForLastCommentUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public IterationDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((IterationDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAllForProjectCompletedEventHandler(object sender, RetrieveAllForProjectCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllForProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAllForProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public IterationDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((IterationDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAllForOwnerCompletedEventHandler(object sender, RetrieveAllForOwnerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllForOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAllForOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public IterationDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((IterationDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAllForReleaseCompletedEventHandler(object sender, RetrieveAllForReleaseCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllForReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAllForReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public IterationDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((IterationDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveCommentsForIterationCompletedEventHandler(object sender, RetrieveCommentsForIterationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCommentsForIterationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveCommentsForIterationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CommentDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CommentDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AddCommentToIterationCompletedEventHandler(object sender, AddCommentToIterationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCommentToIterationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddCommentToIterationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RemoveCommentFromIterationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAttachmentsForIterationCompletedEventHandler(object sender, RetrieveAttachmentsForIterationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAttachmentsForIterationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAttachmentsForIterationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public AttachmentDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((AttachmentDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RemoveAttachmentFromIterationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AddAttachmentToIterationCompletedEventHandler(object sender, AddAttachmentToIterationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAttachmentToIterationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddAttachmentToIterationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAttachedRequestsForIterationCompletedEventHandler(object sender, RetrieveAttachedRequestsForIterationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAttachedRequestsForIterationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAttachedRequestsForIterationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public RequestGeneralDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((RequestGeneralDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AddRequestGeneralToIterationCompletedEventHandler(object sender, AddRequestGeneralToIterationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRequestGeneralToIterationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddRequestGeneralToIterationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RemoveRequestGeneralFromIterationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveUserStoriesForIterationCompletedEventHandler(object sender, RetrieveUserStoriesForIterationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveUserStoriesForIterationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveUserStoriesForIterationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public UserStoryDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((UserStoryDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AddUserStoryToIterationCompletedEventHandler(object sender, AddUserStoryToIterationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserStoryToIterationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddUserStoryToIterationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RemoveUserStoryFromIterationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveBuildsForIterationCompletedEventHandler(object sender, RetrieveBuildsForIterationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveBuildsForIterationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveBuildsForIterationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BuildDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BuildDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AddBuildToIterationCompletedEventHandler(object sender, AddBuildToIterationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBuildToIterationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddBuildToIterationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RemoveBuildFromIterationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetByIDCompletedEventHandler(object sender, GetByIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public IterationDTO Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((IterationDTO)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void DeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveAllCompletedEventHandler(object sender, RetrieveAllCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public IterationDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((IterationDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveCompletedEventHandler(object sender, RetrieveCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public IterationDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((IterationDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetIDsCompletedEventHandler(object sender, GetIDsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrievePageCompletedEventHandler(object sender, RetrievePageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrievePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrievePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public IterationDTO[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((IterationDTO[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RetrieveCountCompletedEventHandler(object sender, RetrieveCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrieveCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

}