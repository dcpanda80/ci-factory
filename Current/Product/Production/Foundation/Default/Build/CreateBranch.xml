<?xml version="1.0" encoding="utf-8" ?>
<project xmlns="http://nant.sf.net/schemas/nant.xsd" name="Create Branch Script" default="CreateBranch">

  <include buildfile="Properties.Build.xml"/>

  <!--
  Example Parameters to cause silent branch creation (branching from Current to 1.0)
  
  <property name="BranchLabelPrefix" value="1.0.1."/>
  <property name="BranchParentLabelPrefix" value="2.0.0."/>
  <property name="BranchBuildServerPort" value="21247"/>
  <property name="BranchBuildServerHostName" value="jay-pc"/>
  <property name="BranchName" value="1.0"/>
  <property name="Branch${ProjectName}-${BranchName}BuildScriptsInitialVersion" value="BuildScripts-1.0-1"/>
  <property name="Branch${ProjectName}-${BranchName}InitialVersion" value="1.0.1.1"/>
  <property name="ParentBranch${ProjectName}-${ProjectCodeLineName}BuildScriptsLabelPrefix" value="${BranchParentLabelPrefix}" dynamic="true"/>
  -->
  
  <property name="CCNetBuildDate" value="2006-09-12"/>
  <property name="CCNetBuildTime" value="11:10:00"/>
  
	<include buildfile="Common.Build.xml" />

  <script language="C#" prefix="directory" >
    <imports>
      <import namespace="System.IO" />
    </imports>

    <code>
      <![CDATA[
         [Function("name")]
         public static string GetDirectoryName(string path)
         {
                 return new DirectoryInfo( path ).Name;
         }
      ]]>
    </code>
  </script>
  <script language="C#" prefix="property" >
    <code>
      <![CDATA[
         [Function("value")]
         public string GetValue(string propertyName)
         {
                 return Project.Properties[propertyName];
         }
      ]]>
    </code>
  </script>

	<fileset id="PacakgeFinder" />
	<ifnot test="${property::exists('SourceControl.PackageName')}">
		<property name="PackagePathPattern" value="${PackagesDirectory}\**\SourceControl.Target.xml"/>
		<function execute="${fileset::include-add('PacakgeFinder', PackagePathPattern)}"/>
		<property name="PackagePath" value="${fileset::get-name-at-index('PacakgeFinder', 0)}"/>
		<property name="SourceControl.PackageName" value="${directory::name(path::get-directory-name(PackagePath))}"/>
	</ifnot>
	
	<include buildfile="Packages\${SourceControl.PackageName}\SourceControl.Target.xml" />


	<target name="CreateBranch">
		<property name="CCNetProjectName" value="${ProjectName}-${ProjectCodeLineName}"/>
		<property name="CCNetServerUrl" value="tcp://${BuildServerHostName}:${BuildServerPort}/CruiseManager.rem"/>

		<property name="StateFilePath" value="${BuildDirectory}\server\${CCNetProjectName}.state"/>
		
		<ifnot test="${file::exists(StateFilePath)}">
			<fail message="Please execute this on the build server."/>
		</ifnot>

    <call target="CheckForReferenceIssues"/>

    <ifnot test="${target::exists('SourceControl.StartCreateBranch')}">
      <fail message="The source control package ${SourceControl.PackageName} does not support branching yet."/>
    </ifnot>

    <ifnot test="${target::exists('SourceControl.FinishCreateBranch')}">
      <fail message="The source control package ${SourceControl.PackageName} does not support branching yet."/>
    </ifnot>

    <ifnot test="${target::exists('SourceControl.Rename')}">
      <fail message="The source control package ${SourceControl.PackageName} does not support branching yet."/>
    </ifnot>

    <property name="CCNET.ServerUrl" value="tcp://${BuildServerHostName}:${BuildServerPort}/CruiseManager.rem"/>
    <ccnetstop serverurl="${CCNET.ServerUrl}" failonerror="false"/>

		<call target="AskForBranchName"/>

		<echo message="New branch name: '${BranchName}'."/>

		<call target="AskForBuildServerHostName"/>

		<call target="AskForBuildServerPort"/>

		<call target="SetBranchProperties"/>

    <call target="SourceControl.GetOfCodeLineDirectory"/>

		<property name="SourceControl.CreateBranch.BranchName" value="${BranchName}"/>
		<call target="SourceControl.StartCreateBranch"/>

		<call target="EditBranchXmlEntities"/>
		<call target="SetBranchCCNetLabels"/>
    
		<call target="SetBranchParentCCNetLabels"/>

    <nant buildfile="${BranchPackagesDirectory}\${SourceControl.PackageName}\SourceControl.Target.xml" target="SourceControl.Rename" inheritall="false" inheritrefs="false" >
      <properties>
        <property name="SourceControl.Rename.Source" value="${BranchBuildDirectory}\dashboard\WorkspaceSetup\${ProjectName}-${ProjectCodeLineName}-WorkspaceSetup.exe"/>
        <property name="SourceControl.Rename.Target" value="${BranchBuildDirectory}\dashboard\WorkspaceSetup\${ProjectName}-${BranchName}-WorkspaceSetup.exe"/>
        <property name="CCNetBuildDate" value="2006-09-12"/>
        <property name="CCNetBuildTime" value="11:10:00"/>

        <property name="BuildServerHostName"        value="BranchBuildServerHostName"/>
        <property name="BuildServerPort"            value="BranchBuildServerPort"/>

        <property name="ProjectName"                value="${ProjectName}" />
        <property name="ProjectCodeLineName"        value="${BranchName}" />

        <property name="ProjectsDirectory"          value="${ProjectsDirectory}" />
        <property name="ProjectRootDirectory"       value="${ProjectRootDirectory}" />
        <property name="ProjectCodeLineDirectory"   value="${BranchProjectCodeLineDirectory}" />
        <property name="ProductDirectory"           value="${BranchProductDirectory}" />
        <property name="ThirdPartyDirectory"        value="${BranchThirdPartyDirectory}" />
        <property name="ProductionDirectory"        value="${BranchProductionDirectory}" />
        <property name="BuildDirectory"             value="${BranchBuildDirectory}" />
        <property name="ArtifactRootDirectory"      value="${BranchArtifactRootDirectory}"/>
        <property name="PackagesDirectory"          value="${BranchPackagesDirectory}"/>
        <property name="UnitTestDirectory"          value="${BranchUnitTestDirectory}"/>
        <property name="InstallDirectory"           value="${BranchInstallDirectory}"/>

        <property name="ProductDirectoryName"       value="${ProductDirectoryName}"/>
        <property name="ThirdPartyDirectoryName"    value="${ThirdPartyDirectoryName}"/>
        <property name="ProductionDirectoryName"    value="${ProductionDirectoryName}"/>
        <property name="BuildDirectoryName"         value="${BuildDirectoryName}"/>
        <property name="ArtifactRootDirectoryName"  value="${ArtifactRootDirectoryName}"/>
        <property name="PackagesDirectoryName"      value="${PackagesDirectoryName}"/>
        <property name="UnitTestDirectoryName"      value="${UnitTestDirectoryName}"/>
        <property name="InstallDirectoryName"       value="${InstallDirectoryName}"/>

        <property name="NantBinPath" value="${BranchBuildDirectory}\nant\bin"/>
        <property name="NantExePath" value="${NantBinPath}\nant.exe"/>

        <property name="webURL" value="http://${BuildServerHostName}/${ProjectName}-${BranchName}/default.aspx?_action_ViewFarmReport=true"/>
      </properties>
    </nant>
    
    <nant buildfile="${BranchPackagesDirectory}\Workspace\Workspace.Setup.xml" inheritall="false" inheritrefs="false" target="WorkspaceSetup.CreateSfx" />

    <nant buildfile="${BranchBuildDirectory}\Common.Build.xml" target="Common.CreateCCTraySfx" inheritall="false" inheritrefs="false" >
      <properties>
        <property name="CCNetBuildDate" value="2006-09-12"/>
        <property name="CCNetBuildTime" value="11:10:00"/>

        <property name="BuildServerHostName"        value="BranchBuildServerHostName"/>
        <property name="BuildServerPort"            value="BranchBuildServerPort"/>

        <property name="ProjectName"                value="${ProjectName}" />
        <property name="ProjectCodeLineName"        value="${BranchName}" />

        <property name="ProjectsDirectory"          value="${ProjectsDirectory}" />
        <property name="ProjectRootDirectory"       value="${ProjectRootDirectory}" />
        <property name="ProjectCodeLineDirectory"   value="${BranchProjectCodeLineDirectory}" />
        <property name="ProductDirectory"           value="${BranchProductDirectory}" />
        <property name="ThirdPartyDirectory"        value="${BranchThirdPartyDirectory}" />
        <property name="ProductionDirectory"        value="${BranchProductionDirectory}" />
        <property name="BuildDirectory"             value="${BranchBuildDirectory}" />
        <property name="ArtifactRootDirectory"      value="${BranchArtifactRootDirectory}"/>
        <property name="PackagesDirectory"          value="${BranchPackagesDirectory}"/>
        <property name="UnitTestDirectory"          value="${BranchUnitTestDirectory}"/>
        <property name="InstallDirectory"           value="${BranchInstallDirectory}"/>

        <property name="ProductDirectoryName"       value="${ProductDirectoryName}"/>
        <property name="ThirdPartyDirectoryName"    value="${ThirdPartyDirectoryName}"/>
        <property name="ProductionDirectoryName"    value="${ProductionDirectoryName}"/>
        <property name="BuildDirectoryName"         value="${BuildDirectoryName}"/>
        <property name="ArtifactRootDirectoryName"  value="${ArtifactRootDirectoryName}"/>
        <property name="PackagesDirectoryName"      value="${PackagesDirectoryName}"/>
        <property name="UnitTestDirectoryName"      value="${UnitTestDirectoryName}"/>
        <property name="InstallDirectoryName"       value="${InstallDirectoryName}"/>

        <property name="NantBinPath" value="${BranchBuildDirectory}\nant\bin"/>
        <property name="NantExePath" value="${NantBinPath}\nant.exe"/>

        <property name="webURL" value="http://${BuildServerHostName}/${ProjectName}-${BranchName}/default.aspx?_action_ViewFarmReport=true"/>
      </properties>
    </nant>

    <largeproperty name="ParentBranchCCNetDashboardConfig">
      <value expand="true" xml="false">
        <![CDATA[<server name="&ProjectName;-${ProjectCodeLineName}" url="tcp://${BuildServerHostName}:${BuildServerPort}/CruiseManager.rem" />]]>
      </value>
    </largeproperty>

    <xmlpoke  
      value="${ParentBranchCCNetDashboardConfig}"
      file="${BranchBuildDirectory}\dashboard\dashboard.config"
      pokemode="Add"
      xpath="/dashboard/remoteServices/servers"
    />

    <largeproperty name="BranchCCNetDashboardConfig">
      <value expand="true" xml="false">
        <![CDATA[<server name="&ProjectName;-${BranchName}" url="tcp://${BranchBuildServerHostName}:${BranchBuildServerPort}/CruiseManager.rem" />]]>
      </value>
    </largeproperty>

    <xmlpoke
      value="${BranchCCNetDashboardConfig}"
      file="${BuildDirectory}\dashboard\dashboard.config"
      pokemode="Add"
      xpath="/dashboard/remoteServices/servers"
    />
    
    <nant buildfile="${BranchBuildDirectory}\SetupIIS.xml" inheritall="false" inheritrefs="false" />

    <echo message="HasBadRefPath = ${HasBadRefPath}"/>
    <call target="FixReferenceIssues" if="${HasBadRefPath}"/>

    <call target="SourceControl.FinishCreateBranch"/>
	</target>

  <target name="CheckForReferenceIssues">
    <property name="HasBadRefPath" value="false"/>
    <echo message="HasBadRefPath = ${HasBadRefPath}"/>
    <largeproperty name="BadRefPathFailureMessage">
      <value expand="true" xml="false"><![CDATA[The following project's hint paths will cause problems for a branch:]]></value>
    </largeproperty>

    <strings id="hintpaths" />
    <foreach item="File" property="ProjectFile">
      <in>
        <items>
          <include name="${ProductDirectory}\**\*.*proj"/>
        </items>
      </in>
      <do>
        <echo message="******************************************"/>
        <echo message="Looking at ${ProjectFile}"/>
        <function execute="${vsproject::get-hint-paths('hintpaths', ProjectFile)}"/>

        <loopthrough property="HintPath">
          <items>
            <strings refid="hintpaths"/>
          </items>
          <do>
            <echo message="${HintPath}"/>
            <if test="${string::starts-with(string::to-lower(HintPath), string::to-lower(ProjectCodeLineDirectory))}">
              <property name="HasBadRefPath" value="true"/>
              <echo message="HasBadRefPath = ${HasBadRefPath}"/>

              <largeproperty name="BadRefPathFailureMessage">
                <value expand="true" xml="false">
                  <![CDATA[${BadRefPathFailureMessage}
${ProjectFile} hint path ${HintPath}]]>
                </value>
              </largeproperty>
            </if>
          </do>
        </loopthrough>

        <function execute="${stringlist::clear('hintpaths')}"/>
      </do>
    </foreach>


    <largeproperty name="BadRefPathQuestion">
      <value expand="true" xml="false">
        <![CDATA[${BadRefPathFailureMessage}

Would you like to continue?
If yes the script will try to fix the references in the new branch.]]>
      </value>
    </largeproperty>

    <ask if="${HasBadRefPath}"
         answer="FixBadRefPath"
         caption="Bad Reference(s) Found!"
         question="${BadRefPathQuestion}"
         showdialog="true"
         unless="${property::exists('FixBadRefPath')}">
      <options>
        <string value="No"/>
        <string value="Yes"/>
      </options>
    </ask>

    <if test="${HasBadRefPath and FixBadRefPath == 'No'}">
      <fail message="${BadRefPathFailureMessage}"/>
    </if>
  </target>

  <target name="FixReferenceIssues">
    <strings id="hintpaths" />
    <foreach item="File" property="ProjectFile">
      <in>
        <items>
          <include name="${BranchProductDirectory}\**\*.*proj"/>
        </items>
      </in>
      <do>
        <function execute="${vsproject::get-hint-paths('hintpaths', ProjectFile)}"/>

        <loopthrough property="HintPath">
          <items>
            <strings refid="hintpaths"/>
          </items>
          <do>
            <if test="${string::starts-with(string::to-lower(HintPath), string::to-lower(ProjectCodeLineDirectory))}">
              <echo message="HintPath = ${HintPath}"/>
              <echo message="ProjectFile = ${ProjectFile}"/>
              <echo message="ProjectCodeLineDirectory = ${ProjectCodeLineDirectory}"/>
              <echo message="BranchProjectCodeLineDirectory = ${BranchProjectCodeLineDirectory}"/>
              <property name="NewHintPath" value="${string::replace(string::to-lower(HintPath), string::to-lower(ProjectCodeLineDirectory), string::to-lower(BranchProjectCodeLineDirectory))}"/>
              <echo message="NewHintPath = ${NewHintPath}"/>
              <property name="NewHintPath" value="${path::get-relative-path(NewHintPath, path::get-directory-name(ProjectFile))}"/>
              <echo message="NewHintPath = ${NewHintPath}"/>
              <function execute="${vsproject::replace-hint-path(ProjectFile, HintPath, NewHintPath)}"/>
            </if>
          </do>
        </loopthrough>

        <function execute="${stringlist::clear('hintpaths')}"/>
      </do>
    </foreach>
  </target>
  
	<target name="SetBranchCCNetLabels">

    <largeproperty name="InitialLabelPrefixQuestion">
      <value expand="true" xml="false"><![CDATA[What is the initial prefix version/label you want this branch to start at?

The current prefix is ${LabelPrefix}.
]]></value>
    </largeproperty>

    <ask answer="BranchLabelPrefix"
         caption="What Version?"
         dialogmode="FreeText"
         question="${InitialLabelPrefixQuestion}"
         showdialog="true"
         unless="${property::exists('BranchLabelPrefix')}"
      />

		<largeproperty name="LabelPrefixPattern">
			<value expand="true" xml="false">
				<![CDATA[\<\!ENTITY\s+LabelPrefix\s+'${LabelPrefix}'\s{0,}\>]]>
			</value>
		</largeproperty>

		<largeproperty name="NewLabelPrefixEntity">
			<value expand="true" xml="false">
				<![CDATA[<!ENTITY LabelPrefix      '${BranchLabelPrefix}' >]]>
			</value>
		</largeproperty>
    
		<replace file="${BranchBuildDirectory}\Entities.xml">
			<filterchain>
				<regexreplace replacment="${NewLabelPrefixEntity}" pattern="${LabelPrefixPattern}" lines="1" />
			</filterchain>
		</replace>
		
		<xmlquery query='/cruisecontrol/project/@name' file='${BranchBuildDirectory}\ccnetproject.xml' id='CCNetProjects' />

    <loopthrough property='CCNetProjectName'>
      <items>
        <xmlquery refid='CCNetProjects'/>
      </items>
      <do>

        <xmlpeek 
          file='${BranchBuildDirectory}\ccnetproject.xml'
          property='ProjectLabelPrefix'
          xpath='/cruisecontrol/project[@name = "${CCNetProjectName}"]/labeller/prefix'
        />

        <ifthenelse test='${ProjectLabelPrefix == BranchLabelPrefix}'>
          <then>
            <ifthenelse test="${property::exists('Branch' + string::replace(CCNetProjectName, ' ', '') + 'InitialVersion')}">
              <then>
                <property name="ProjectInitialVersion" value="${property::value('Branch' + string::replace(CCNetProjectName, ' ', '') + 'InitialVersion')}"/>
              </then>
              <else>
                <largeproperty name="InitialVersionQuestion">
                  <value expand="true" xml="false">
                    <![CDATA[What is the initial version/label you want the CCNet project ${CCNetProjectName} to start at?

Answer in the form of '${BranchLabelPrefix}32' where the trailing 32 it the part that you add.
Please do not change the the prefix: '${BranchLabelPrefix}'.
]]>
                  </value>
                </largeproperty>

                <ask
                  answer='ProjectInitialVersion'
                  caption="${CCNetProjectName}'s intial version?"
                  dialogmode='FreeText'
                  question='${InitialVersionQuestion}'
                  showdialog='true'
            />
              </else>
            </ifthenelse>
          </then>
          <else>
            <ifthenelse test="${property::exists('Branch' + string::replace(CCNetProjectName, ' ', '') + 'InitialVersion')}">
              <then>
                <property name="ProjectInitialVersion" value="${property::value('Branch' + string::replace(CCNetProjectName, ' ', '') + 'InitialVersion')}"/>
              </then>
              <else>
                <largeproperty name="InitialVersionQuestion">
                  <value expand="true" xml="false">
                    <![CDATA[What is the initial version/label you want the CCNet project ${CCNetProjectName} to start at?

Answer in the form of '${ProjectLabelPrefix}32'.
You may change the prefix: '${ProjectLabelPrefix}'.
]]>
                  </value>
                </largeproperty>

                <ask
                  answer='ProjectInitialVersion'
                  caption="${CCNetProjectName}'s intial version?"
                  dialogmode='FreeText'
                  question='${InitialVersionQuestion}'
                  showdialog='true'
                />
              </else>
            </ifthenelse>

            <regex input='${ProjectInitialVersion}' pattern="(?'CCNetProjectLabelPrefix'.*?)\d+$"/>

            <xmlpoke 
              file="${BranchBuildDirectory}\ccnetproject.xml" 
              value="${CCNetProjectLabelPrefix}" 
              xpath='/cruisecontrol/project[@name = "${CCNetProjectName}"]/labeller/prefix'
            />
          </else>
        </ifthenelse>

        <largeproperty name="StateFile.Content">
          <value expand="true" xml="false">
            <![CDATA[<?xml version="1.0" encoding="utf-16"?>
<IntegrationResult xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <ProjectName>${CCNetProjectName}</ProjectName>
  <Label>${ProjectInitialVersion}</Label>
	<StartTime>1970-01-01T00:00:00.00-05:00</StartTime>
</IntegrationResult>]]>
          </value>
        </largeproperty>

        <write append="false" encoding="utf-16"
               file="${BranchBuildDirectory}\server\${CCNetProjectName}.state">
          <text expand="true" xml="false">${StateFile.Content}</text>
        </write>
      </do>
    </loopthrough>

  </target>
  
	<target name="EditBranchXmlEntities">
		<largeproperty name="CodeLinePattern">
			<value expand="true" xml="false">
				<![CDATA[\<\!ENTITY\s+ProjectCodeLineName\s+'${ProjectCodeLineName}'\s{0,}\>]]>
			</value>
		</largeproperty>

		<largeproperty name="NewCodeLineEntity">
			<value expand="true" xml="false">
				<![CDATA[<!ENTITY ProjectCodeLineName      '${BranchName}' >]]>
			</value>
		</largeproperty>

		<largeproperty name="BuildServerPortPattern">
			<value expand="true" xml="false">
				<![CDATA[\<\!ENTITY\s+Port\s+'${BuildServerPort}'\s{0,}\>]]>
			</value>
		</largeproperty>

		<largeproperty name="NewBuildServerPortEntity">
			<value expand="true" xml="false">
				<![CDATA[<!ENTITY Port      '${BranchBuildServerPort}' >]]>
			</value>
		</largeproperty>

		<largeproperty name="BuildServerHostNamePattern">
			<value expand="true" xml="false">
				<![CDATA[\<\!ENTITY\s+HostName\s+'${BuildServerHostName}'\s{0,}\>]]>
			</value>
		</largeproperty>

		<largeproperty name="NewBuildServerHostNameEntity">
			<value expand="true" xml="false">
				<![CDATA[<!ENTITY HostName      '${BranchBuildServerHostName}' >]]>
			</value>
		</largeproperty>

		<replace file="${BranchBuildDirectory}\Entities.xml">
			<filterchain>
				<regexreplace replacment="${NewCodeLineEntity}" pattern="${CodeLinePattern}" lines="1" />
				<regexreplace replacment="${NewBuildServerPortEntity}" pattern="${BuildServerPortPattern}" lines="1" />
				<regexreplace replacment="${NewBuildServerHostNameEntity}" pattern="${BuildServerHostNamePattern}" lines="1" />
			</filterchain>
		</replace>
	</target>

  <target name="SetBranchParentCCNetLabels">

    <largeproperty name="NewlLabelPrefixQuestion">
      <value expand="true" xml="false">
        <![CDATA[What is the new prefix version/label you want to use for the branch '${ProjectCodeLineName}'?

It is currently set to ${LabelPrefix}.
]]>
      </value>
    </largeproperty>

    <ask answer="BranchParentLabelPrefix"
         caption="What Version?"
         dialogmode="FreeText"
         question="${NewlLabelPrefixQuestion}"
         showdialog="true"
         unless="${property::exists('BranchParentLabelPrefix')}"
      />

    <largeproperty name="LabelPrefixPattern">
      <value expand="true" xml="false">
        <![CDATA[\<\!ENTITY\s+LabelPrefix\s+'${LabelPrefix}'\s{0,}\>]]>
      </value>
    </largeproperty>

    <largeproperty name="NewLabelPrefixEntity">
      <value expand="true" xml="false">
        <![CDATA[<!ENTITY LabelPrefix      '${BranchParentLabelPrefix}' >]]>
      </value>
    </largeproperty>

    <replace file="${BuildDirectory}\Entities.xml">
      <filterchain>
        <regexreplace replacment="${NewLabelPrefixEntity}" pattern="${LabelPrefixPattern}" lines="1" />
      </filterchain>
    </replace>

    <xmlquery query='/cruisecontrol/project/@name' file='${BuildDirectory}\ccnetproject.xml' id='CCNetProjects' />

    <loopthrough property='CCNetProjectName'>
      <items>
        <xmlquery refid='CCNetProjects'/>
      </items>
      <do>

        <xmlpeek
          file='${BuildDirectory}\ccnetproject.xml'
          property='ProjectLabelPrefix'
          xpath='/cruisecontrol/project[@name = "${CCNetProjectName}"]/labeller/prefix'
        />

        <ifnot test='${ProjectLabelPrefix == BranchParentLabelPrefix}'>
          <ifthenelse test="${property::exists('ParentBranch' + string::replace(CCNetProjectName, ' ', '') + 'LabelPrefix')}">
            <then>
              <property name="CCNetProject.LabelPrefix" value="${property::value('ParentBranch' + string::replace(CCNetProjectName, ' ', '') + 'LabelPrefix')}"/>
            </then>
            <else>
              <largeproperty name="NewVersionPrefixQuestion">
                <value expand="true" xml="false">
                  <![CDATA[What is the new version/label prefix you want the CCNet project ${CCNetProjectName} to start at?

It is currently: '${ProjectLabelPrefix}'.
Please note that you don't have to change it.
]]>
                </value>
              </largeproperty>

              <ask
                answer='CCNetProject.LabelPrefix'
                caption="${CCNetProjectName}'s version/label prefix?"
                dialogmode='FreeText'
                question='${NewVersionPrefixQuestion}'
                showdialog='true'
              />
            </else>
          </ifthenelse>

          <xmlpoke
            file="${BuildDirectory}\ccnetproject.xml"
            value="${CCNetProject.LabelPrefix}"
            xpath='/cruisecontrol/project[@name = "${CCNetProjectName}"]/labeller/prefix'
          />
        </ifnot>
      </do>
    </loopthrough>

  </target>
  
	<target name="SetBranchProperties">
		<property name="BranchProjectCodeLineDirectory" value="${ProjectRootDirectory}\${BranchName}" />
		<property name="BranchProductDirectory"         value="${BranchProjectCodeLineDirectory}\${ProductDirectoryName}"  />
		<property name="BranchThirdPartyDirectory"      value="${BranchProjectCodeLineDirectory}\${ThirdPartyDirectoryName}" />
		<property name="BranchBuildDirectory"           value="${BranchProjectCodeLineDirectory}\${BuildDirectoryName}"  />
		<property name="BranchProductionDirectory"      value="${BranchProductDirectory}\${ProductionDirectoryName}"  />
		<property name="BranchUnitTestDirectory"        value="${BranchProductDirectory}\${UnitTestDirectoryName}"  />
		<property name="BranchInstallDirectory"         value="${BranchProductDirectory}\${InstallDirectoryName}"  />
		<property name="BranchPackagesDirectory"        value="${BranchBuildDirectory}\${PackagesDirectoryName}"  />
    <property name="BranchArtifactRootDirectory"    value="${BranchBuildDirectory}\${ArtifactRootDirectoryName}"/>
	</target>

	<target name="AskForBuildServerPort" unless="${property::exists('BranchBuildServerPort')}">
		<largeproperty name="BuildServerPortQuestion">
			<value expand="true" xml="false">
				<![CDATA[What port number should CCNet use?

The '${CurrentVersion}' port is '${BuildServerPort}'.
Maybe ${int::parse(BuildServerPort) + 1} is available.]]>
			</value>
		</largeproperty>

		<ask answer="BranchBuildServerPort"
				 caption="What port number?"
				 dialogmode="FreeText"
				 question="${BuildServerPortQuestion}"
       showdialog="true"
     unless="${property::exists('BranchBuildServerPort')}"
		/>
	</target>

	<target name="AskForBuildServerHostName" unless="${property::exists('BranchBuildServerHostName')}">
		<largeproperty name="BuildServerHostNameQuestion">
			<value expand="true" xml="false">
				<![CDATA[What is the name of the server that will host this build server?

The '${CurrentVersion}' host name is '${BuildServerHostName}'.]]>
			</value>
		</largeproperty>

		<ask answer="BranchBuildServerHostName"
				 caption="What is the host server name?"
				 dialogmode="FreeText"
				 question="${BuildServerHostNameQuestion}"
       showdialog="true"
       unless="${property::exists('BranchBuildServerHostName')}"
		/>
	</target>

	<target name="AskForBranchName" unless="${property::exists('BranchName')}">
		<xmlpeek file="${StateFilePath}"
					 property="CurrentVersion"
					 xpath="/IntegrationResult/LastSuccessfulIntegrationLabel" />

		<largeproperty name="BranchNameQuestion">
			<value expand="true" xml="false">
				<![CDATA[What do you want to name this branch?

The current version is '${CurrentVersion}'.]]>
			</value>
		</largeproperty>

		<ask answer="BranchName"
				 caption="What do you want to name this branch?"
				 dialogmode="FreeText"
				 question="${BranchNameQuestion}"
				 showdialog="true"
         unless="${property::exists('BranchName')}"
		/>
	</target>
</project>