<?xml version="1.0" encoding="utf-8" ?>
<project xmlns = "http://nant.sf.net/schemas/nant.xsd" name = "FxCop">

  <include buildfile = "FxCop.Properties.xml"/>

  <fileset id = "FxCop.AssembliesFileSet"/>

  <property name = "Private.FxCop.HaveAssemblies" value = "false"/>

  <target name = "FxCop.Calculate">
    <call target = "Private.FxCop.CollectAssemblies"/>
    <ifnot test = "${Private.FxCop.HaveAssemblies}">
      <echo level = "Warning" message = "No assemblies found to analyze for FxCop!"/>
    </ifnot>
    <if test = "${Private.FxCop.HaveAssemblies}">
      <copy todir = "${FxCop.AssembliesFolder}" verbose = "true">
        <fileset refid = "FxCop.AssembliesFileSet"/>
      </copy>
      <exec
          program="${path::get-short-path(FxCop.Console)}"
          commandline='/file:"${FxCop.AssembliesFolder}" /out:"${FxCop.ReportFolder}\FxCopReport.xml" /rule:"${FxCop.RulesFolder}" /directory:"${FxCop.ReferenceAssembliesFolder}" /searchgac  /fo'
          failonerror="false" verbose="true"/>
      <if test="${file::exists(FxCop.ReportFolder + '\FxCopReport.xml')}">

        <style in="${FxCop.ReportFolder}\FxCopReport.xml"
               out="${Common.ArtifactDirectoryPath}\FxCopReport.html"
               style="${PackagesDirectory}\FxCop\FxCopReport.xsl"/>
      </if>
    </if>
  </target>

  <target name = "Private.FxCop.CollectAssemblies">
    <strings id = "FxCop.AssemblyList"/>
    <foreach item = "File" property = "FxCop.Target.ProjectFile.Path">
      <in>
        <items refid = "FxCop.Target.ProjectFiles"/>
      </in>
      <do>
        <property name = "AssemblyName" value = "${vsproject::get-assemblyname(FxCop.Target.ProjectFile.Path)}"/>
        <ifnot test = "${AssemblyName == '' or stringlist::contains('FxCop.AssemblyList', AssemblyName)}">
          <property name = "Private.FxCop.HaveAssemblies" value = "true"/>
          <property name = "TargetAssemblyPath" value = "${vsproject::get-output-directory(FxCop.Target.ProjectFile.Path, Compile.ConfigName)}\${AssemblyName}.dll"/>
          <function execute = "${fileset::include-add('FxCop.AssembliesFileSet', TargetAssemblyPath)}"/>
          <property name = "TargetAssemblyPath" value = "${vsproject::get-output-directory(FxCop.Target.ProjectFile.Path, Compile.ConfigName)}\${AssemblyName}.exe"/>
          <function execute = "${fileset::include-add('FxCop.AssembliesFileSet', TargetAssemblyPath)}"/>
          <property name = "TargetPDBPath" value = "${vsproject::get-output-directory(FxCop.Target.ProjectFile.Path, Compile.ConfigName)}\${AssemblyName}.pdb"/>
          <function execute = "${fileset::include-add('FxCop.AssembliesFileSet', TargetPDBPath)}"/>
          <function execute = "${stringlist::add('FxCop.AssemblyList', AssemblyName)}"/>
        </ifnot>
      </do>
    </foreach>
  </target>

  <target name="FxCop.EchoReportLink">
    <echo message="http://${BuildServerHostName}/${ProjectName}/default.aspx?_action_FxCopReport=true&amp;server=${ProjectName}&amp;project=${CCNetProject}&amp;build=${path::get-file-name(CCNetLogFilePath)}"/>
  </target>

  <target name = "FxCop.SetUp">
    <mkdir if = "${directory::exists(FxCop.BuildFolder) == false}" dir = "${FxCop.BuildFolder}"/>
    <property name = "Common.FilesToDelete" value = "${FxCop.FilesToDeleteAtSetup}"/>
    <call target = "Common.DeleteFiles"/>
    <mkdir if = "${directory::exists(FxCop.ReportFolder) == false}" dir = "${FxCop.ReportFolder}"/>
    <mkdir if = "${directory::exists(FxCop.AssembliesFolder) == false}" dir = "${FxCop.AssembliesFolder}"/>
    <call target="FxCop.EchoReportLink"/>
  </target>

  <target name = "FxCop.TearDown"></target>

</project>
