<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://nant.sf.net/schemas/nant.xsd" name="Main Build" default="Triggered">
  
  <include buildfile="Properties.build.xml" />
  <include buildfile="Common.Build.xml" />
  <include buildfile="Custom.Targets.xml" />
  
  <description>Begin Package Includes</description>
  <include buildfile="${PackagesDirectory}\SourceModificationReport\SourceModificationReport.Target.xml" />
  <include buildfile="${PackagesDirectory}\Subversion\SourceControl.Target.xml" />
  <include buildfile="${PackagesDirectory}\MSBuild\Compile.Target.xml" />
  <include buildfile="${PackagesDirectory}\NCover\NCover.Target.xml" />
  <include buildfile="${PackagesDirectory}\Simian\Simian.Target.xml" />
  <include buildfile="${PackagesDirectory}\nDepend\nDepend.Target.xml" />
  <include buildfile="${PackagesDirectory}\LinesOfCode\LinesOfCode.Target.xml" />
  <include buildfile="${PackagesDirectory}\Deployment\Deployment.Target.xml" />
  <include buildfile="${PackagesDirectory}\Versioning\Versioning.Target.xml" />
  <include buildfile="${PackagesDirectory}\FxCop\FxCop.Target.xml" />
  <description>End Package Includes</description>
  
  <target name="Triggered" depends="SetUps">
    <trycatch>
      <try>
        <description>Begin Main Build</description>
        
        <description>Begin Pre Build Actions</description>
        <call target="SourceModificationReport.PublishOldSource" />
        <call target="SourceModificationReport.ConsolidateReports" />
        <description>End Pre Build Actions</description>
        
        <description>Begin Clean Up Actions</description>
        <call target="SourceControl.GetOfThirdPartyDirectory" />
        <call target="SourceControl.GetOfProductDirectory" />
        <call target="SourceModificationReport.PublishNewSource" />
        <description>End Clean Up Actions</description>
        
        <description>Begin Compile Actions</description>
        <call target="Versioning.IncrementBuildNumberOfModifiedAssemblies" />
        <call target="Compile.CompileSource" />
        <description>End Compile Actions</description>
        
        <description>Begin Varification Actions</description>
        <call target="UnitTest.RunTests" />
        <description>End Varification Actions</description>
        
        <description>Begin Post Build Actions</description>
        <call target="Simian.Run"/>
        <call target="nDepend.Calculate" />
        <call target="LinesOfCode.CountCodeLines" />
        <call target="FxCop.Calculate" />
        <description>End Post Build Actions</description>
        
        <description>End Main Build</description>
      </try>
      <finally>
        <call target="TearDowns" />
      </finally>
    </trycatch>
  </target>
  
  <target name="Heavy" depends="SetUps">
    <trycatch>
      <try>
        <description>Begin Main Build</description>
        <description>Begin Pre Build Actions</description>
        <description>End Pre Build Actions</description>
        <description>Begin Clean Up Actions</description>
        <call target="SourceControl.CleanGetOfThirdPartyDirectory" />
        <call target="SourceControl.CleanGetOfProductDirectory" />
        <description>End Clean Up Actions</description>
        <description>Begin Compile Actions</description>
        <call target="Compile.CompileSource" />
        <nant buildfile="..\Product\Install\CI Factory\Packager.xml" inheritrefs="false" inheritall="true" />
        <description>End Compile Actions</description>
        <description>Begin Varification Actions</description>
        <call target="UnitTest.RunTests" />
        <exec program="${ThirdPartyDirectory}\NAnt\bin\nant.exe" resultproperty="IntegrationTest.Result" failonerror="false" verbose="true">
          <arg line="-buildfile:&quot;${ProductDirectory}\Integration Tests\TestRunner.Build.xml&quot;" />
          <arg line="-logger:NAnt.Core.XmlLogger" />
          <arg line="-logfile:&quot;${Common.ArtifactDirectoryPath}\NAntTests.xml&quot;" />
          <arg line="-D:IntegrationTest.ReportFilePath=&quot;${Common.ArtifactDirectoryPath}\NAntTestReport.xml&quot;" />
        </exec>
        <style in="${Common.ArtifactDirectoryPath}\NAntTestReport.xml"
               out="${Common.ReportDirectory}\NAntTestReport.xml"
               style="${ProductDirectory}\Integration Tests\IntegrationSummaryReport.xsl"
               verbose="true"
               if="${file::exists(Common.ArtifactDirectoryPath + '\NAntTestReport.xml')}"/>
        <fail if="${int::parse(IntegrationTest.Result) != 0}" message="At least one integration test failed!"/>
        <description>End Varification Actions</description>
        <description>Begin Post Build Actions</description>
        <description>End Post Build Actions</description>
        <description>End Main Build</description>
      </try>
      <finally>
        <call target="TearDowns" />
      </finally>
    </trycatch>
  </target>
  <target name="Release" depends="SetUps">
    <trycatch>
      <try>
        <description>Begin Main Build</description>
        <description>Begin Pre Build Actions</description>
        <call target="SourceModificationReport.PublishOldSource" />
        <call target="SourceModificationReport.ConsolidateReports" />
        <description>End Pre Build Actions</description>
        <description>Begin Clean Up Actions</description>
        <call target="SourceControl.CleanGetOfThirdPartyDirectory" />
        <call target="SourceControl.CleanGetOfProductDirectory" />
        <call target="SourceModificationReport.PublishNewSource" />
        <description>End Clean Up Actions</description>
        <description>Begin Compile Actions</description>
        <call target="Versioning.IncreamentBuildNumberOfProduct" />
        <call target="Compile.CompileSource" />
        <call target="Custom.CreateDocumentation" />
        
        <call target="Custom.WriteReleaseNotes" />
        <property name="Publish.Source.File.Name" value="CI Factory Release Notes.html" />
        <property name="Publish.Source.Directory.Path" value="${ProductionDirectory}\CI Installer" />
        <property name="Publish.Target.Directory.Path" value="${Common.ArtifactDirectoryPath}" />
        <property name="Publish.Target.File.Name" value="Release Notes ${CCNetLabel}.html" />
        <property name="Publish.Web.File.Path" value="${Publish.Web.Path.Root}/${Common.ArtifactFolderName}/${Publish.Target.File.Name}" />
        <property name="Publish.Web.File.Name" value="${Publish.Target.File.Name}" />
        <call target="Publish.File" />
        
        <nant buildfile="..\Product\Install\CI Factory\Packager.xml" inheritrefs="false" inheritall="true" />
        <description>End Compile Actions</description>
        <description>Begin Varification Actions</description>
        <call target="UnitTest.RunTests" />
        <exec program="${ThirdPartyDirectory}\NAnt\bin\nant.exe" resultproperty="IntegrationTest.Result" failonerror="false" verbose="true">
          <arg line="-buildfile:&quot;${ProductDirectory}\Integration Tests\TestRunner.Build.xml&quot;" />
          <arg line="-logger:NAnt.Core.XmlLogger" />
          <arg line="-logfile:&quot;${Common.ArtifactDirectoryPath}\NAntTests.xml&quot;" />
          <arg line="-D:IntegrationTest.ReportFilePath=&quot;${Common.ArtifactDirectoryPath}\NAntTestReport.xml&quot;" />
        </exec>
        <style in="${Common.ArtifactDirectoryPath}\NAntTestReport.xml"
               out="${Common.ReportDirectory}\NAntTestReport.xml"
               style="${ProductDirectory}\Integration Tests\IntegrationSummaryReport.xsl"
               verbose="true"
               if="${file::exists(Common.ArtifactDirectoryPath + '\NAntTestReport.xml')}"/>
        <fail if="${int::parse(IntegrationTest.Result) != 0}" message="At least one integration test failed!"/>
        <description>End Varification Actions</description>
        <description>Begin Post Build Actions</description>
        <property name="Publish.Source.File.Name" value="CIFactorySetup.exe" />
        <property name="Publish.Source.Directory.Path" value="${ProductDirectory}\Install\CI Factory" />
        <property name="Publish.Target.Directory.Path" value="${Common.ArtifactDirectoryPath}" />
        <property name="Publish.Target.File.Name" value="CI-Factory-${CCNetLabel}.exe" />
        <property name="Publish.Web.File.Path" value="${Publish.Web.Path.Root}/${Common.ArtifactFolderName}/${Publish.Target.File.Name}" />
        <property name="Publish.Web.File.Name" value="${Publish.Target.File.Name}" />
        <call target="Publish.File" />
        <call target="Simian.Run"/>
        <call target="nDepend.Calculate" />
        <call target="LinesOfCode.CountCodeLines" />
        <call target="FxCop.Calculate" />
        <description>End Post Build Actions</description>
        <description>End Main Build</description>
      </try>
      <finally>
        <call target="TearDowns" />
      </finally>
    </trycatch>
  </target>
  <target name="SetUps">
    <call target="Common.SetUp" />
    <description>Begin SetUps</description>
    <call target="SourceModificationReport.SetUp" />
    <call target="Versioning.SetUp" />
    <call target="SourceControl.SetUp" />
    <call target="UnitTest.SetUp" />
    <call target="Compile.SetUp" />
    <call target="UnitTest.SetUp" />
    <call target="Simian.SetUp" />
    <call target="nDepend.SetUp" />
    <call target="LinesOfCode.SetUp" />
    <call target="Deployment.SetUp" />
    <description>End SetUps</description>
    <call target="FxCop.SetUp" />
  </target>
  <target name="TearDowns">
    <description>Begin TearDowns</description>
    <call target="SourceModificationReport.TearDown" />
    <call target="Versioning.TearDown" />
    <call target="SourceControl.TearDown" />
    <call target="UnitTest.TearDown" />
    <call target="Compile.TearDown" />
    <call target="UnitTest.TearDown" />
    <call target="Simian.TearDown" />
    <call target="nDepend.TearDown" />
    <call target="LinesOfCode.TearDown" />
    <call target="Publish.TearDown" />
    <description>End TearDowns</description>
    <call target="FxCop.TearDown" />
  </target>
</project>