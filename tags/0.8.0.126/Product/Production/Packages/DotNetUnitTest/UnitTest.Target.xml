<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://nant.sf.net/schemas/nant.xsd" name="UnitTest">

  <fileset id="UnitTest.TestAssemblies" />
  
  <include buildfile="UnitTest.Properties.xml" />

	<target name="UnitTest.LoadTasks">
		<loadtasks assembly="${ThirdPartyDirectory}\MbUnit\MbUnit.Tasks.dll" />
	</target>
		 
	<!--
	The following properties should be specified in the calling script.
	
	<property name="UnitTest.TestPath" value=""/>
	<property name="UnitTest.TestAssemblyFormat" value=""/>
	<property name="UnitTest.ReportFolder" value=""/>
	<property name="UnitTest.ReportNameFormat" value=""/>
	-->
	
	<!-- The following properties are for internal use only -->

	<target name="UnitTest.RunTests" depends="UnitTest.LoadTasks">
    
    <foreach item="File" property="UnitTest.ProjectFile.Path">
      <in>
        <items refid="UnitTest.ProjectFiles" />
      </in>
      <do>
        <property name="UniTestAssemblyName" value="${vsproject::get-assemblyname(UnitTest.ProjectFile.Path)}"/>
        <property name="UniTestAssemblyPath" value="${vsproject::get-output-directory(UnitTest.ProjectFile.Path, Compile.ConfigName)}\${UniTestAssemblyName}.dll"/>
        <function execute="${fileset::include-add('UnitTest.TestAssemblies', UniTestAssemblyPath)}"/>
      </do>
    </foreach>

    <if test="${fileset::file-count('UnitTest.TestAssemblies') == 0}">
      <call target="UnitTest.FindTestAssebmlies"/>
    </if>

    <call target="MbUnit.EnsureDependencies"/>
    
		<mbunit report-types="${UnitTest.ReportFormat}" report-filename-format="${UnitTest.ReportNameFormat}" report-output-directory="${UnitTest.ReportFolder}">
			<assemblies refid="UnitTest.TestAssemblies" />
		</mbunit>
	</target>

  <target name="MbUnit.EnsureDependencies">
    <foreach item="File" property="UnitTest.Target.Path">
      <in>
        <items refid="UnitTest.TestAssemblies" />
      </in>
      <do>
        <property name="UnitTest.Target.Directory" value="${path::get-directory-name(UnitTest.Target.Path)}"/>
        <property name="MbUnit.InTarget.Path" value="${UnitTest.Target.Directory}\MbUnit.Framework.dll"/>
        <ifnot test="${file::exists(MbUnit.InTarget.Path)}">
          <copy todir="${UnitTest.Target.Directory}">
            <fileset basedir="${ThirdPartyDirectory}\MbUnit">
              <include name="MbUnit.Framework.dll"/>
              <include name="QuickGraph.Algorithms.dll"/>
              <include name="QuickGraph.dll"/>
              <include name="Refly.dll"/>
              <include name="TestFu.dll"/>
            </fileset>
          </copy>
        </ifnot>
      </do>
    </foreach>
  </target>

  <target name="UnitTest.FindTestAssebmlies">
    <fileset id="UnitTest.TestAssemblies" >
      <include name="${UnitTest.TestPath}\**\bin\${UnitTest.TestAssemblyFormat}" />
      <include name="${UnitTest.TestPath}\**\bin\${Compile.ConfigName}\${UnitTest.TestAssemblyFormat}" />
    </fileset>
  </target>

  <target name="UnitTest.ShowReport">
    <property name="Common.ShowReport.XmlFile" value="${UnitTest.ReportFolder}\${UnitTest.ReportNameFormat}.${UnitTest.ReportFormat}"/>
    <property name="Common.ShowReport.HtmlFile" value="${UnitTest.ReportFolder}\TestReport.html"/>
    <property name="Common.ShowReport.XslFile" value="${BuildDirectory}\Packages\DotNetUnitTest\MBUnitSummary.xsl"/>
    <call target="Common.ShowReport"/>
  </target>

  <target name="UnitTest.SetUp">
    <delete dir="${UnitTest.ReportFolder}" if="${directory::exists(UnitTest.ReportFolder)}" />
    <mkdir dir="${UnitTest.ReportFolder}"/>
  </target>

  <target name="UnitTest.TearDown">

  </target>

</project>
