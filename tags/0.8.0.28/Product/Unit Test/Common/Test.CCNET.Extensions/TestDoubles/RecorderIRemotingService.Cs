// Generated by Refly
namespace TestDoubles
{
    using System;
    using Doubler.Common;
    using ThoughtWorks.CruiseControl.Remote;
    
    
    [DoubleAttribute()]
    [RecorderAttribute()]
    public class RecorderIRemotingService : ThoughtWorks.CruiseControl.Remote.IRemotingService
    {
        
        private IRemotingServiceRecordings _recordings;
        
        public RecorderIRemotingService()
        {
            this.Recordings.NewRecording.Called = true;
            if ((this.Recordings.NewRecording.ExceptionToThrow != null))
            {
                throw this.Recordings.NewRecording.ExceptionToThrow;
            }
        }
        
        public virtual IRemotingServiceRecordings Recordings
        {
            get
            {
                if ((this._recordings == null))
                {
                    this._recordings = new IRemotingServiceRecordings();
                }
                return this._recordings;
            }
            set
            {
                this._recordings = value;
            }
        }
        
        public virtual object Connect(System.Type proxyType, string uri)
        {
            this.Recordings.ConnectTypeStringRecording.Called = true;
            this.Recordings.ConnectTypeStringRecording.PassedTypeproxyType = proxyType;
            this.Recordings.ConnectTypeStringRecording.PassedStringuri = uri;
            if ((this.Recordings.ConnectTypeStringRecording.ExceptionToThrow != null))
            {
                throw this.Recordings.ConnectTypeStringRecording.ExceptionToThrow;
            }
            return this.Recordings.ConnectTypeStringRecording.ReturnValue;
        }
        
        public class IRemotingServiceRecordings
        {
            
            private NewRecordingRecordings _newRecording;
            
            private ConnectTypeStringRecordingRecordings _connectTypeStringRecording;
            
            public virtual NewRecordingRecordings NewRecording
            {
                get
                {
                    if ((this._newRecording == null))
                    {
                        this._newRecording = new NewRecordingRecordings();
                    }
                    return this._newRecording;
                }
                set
                {
                    this._newRecording = value;
                }
            }
            
            public virtual ConnectTypeStringRecordingRecordings ConnectTypeStringRecording
            {
                get
                {
                    if ((this._connectTypeStringRecording == null))
                    {
                        this._connectTypeStringRecording = new ConnectTypeStringRecordingRecordings();
                    }
                    return this._connectTypeStringRecording;
                }
                set
                {
                    this._connectTypeStringRecording = value;
                }
            }
        }
        
        public class NewRecordingRecordings
        {
            
            private bool _called;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
        }
        
        public class ConnectTypeStringRecordingRecordings
        {
            
            private bool _called;
            
            private Type _passedTypeproxyType;
            
            private String _passedStringuri;
            
            private Object _returnValue;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual Type PassedTypeproxyType
            {
                get
                {
                    return this._passedTypeproxyType;
                }
                set
                {
                    this._passedTypeproxyType = value;
                }
            }
            
            public virtual String PassedStringuri
            {
                get
                {
                    return this._passedStringuri;
                }
                set
                {
                    this._passedStringuri = value;
                }
            }
            
            public virtual Object ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
    }
}
