// Generated by Refly
namespace Tracker.Common.TestDoubles
{
    using System;
    using Doubler.Common;
    using System.ComponentModel;
    
    
    [DoubleAttribute()]
    [RecorderAttribute()]
    public class RecorderIPVCSToolKit : Tracker.Common.IPVCSToolKit
    {
        
        private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.IPVCSToolKitRecordings _recordings;
        
        public RecorderIPVCSToolKit()
        {
            this.Recordings.NewRecording.Called = true;
            if ((this.Recordings.NewRecording.ExceptionToThrow != null))
            {
                throw this.Recordings.NewRecording.ExceptionToThrow;
            }
        }
        
        public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.IPVCSToolKitRecordings Recordings
        {
            get
            {
                if ((this._recordings == null))
                {
                    this._recordings = new IPVCSToolKitRecordings();
                }
                return this._recordings;
            }
            set
            {
                this._recordings = value;
            }
        }
        
        public virtual void Logout()
        {
            this.Recordings.LogoutRecording.Called = true;
            if ((this.Recordings.LogoutRecording.ExceptionToThrow != null))
            {
                throw this.Recordings.LogoutRecording.ExceptionToThrow;
            }
        }
        
        public virtual void Login(string userName, string password, string projectName, string dbmsUserName, string dbmsPassword, string dbmsServer, string dbmsType, int dbmsLoginMode)
        {
            this.Recordings.LoginStringStringStringStringStringStringStringInt32Recording.Called = true;
            this.Recordings.LoginStringStringStringStringStringStringStringInt32Recording.PassedStringuserName = userName;
            this.Recordings.LoginStringStringStringStringStringStringStringInt32Recording.PassedStringpassword = password;
            this.Recordings.LoginStringStringStringStringStringStringStringInt32Recording.PassedStringprojectName = projectName;
            this.Recordings.LoginStringStringStringStringStringStringStringInt32Recording.PassedStringdbmsUserName = dbmsUserName;
            this.Recordings.LoginStringStringStringStringStringStringStringInt32Recording.PassedStringdbmsPassword = dbmsPassword;
            this.Recordings.LoginStringStringStringStringStringStringStringInt32Recording.PassedStringdbmsServer = dbmsServer;
            this.Recordings.LoginStringStringStringStringStringStringStringInt32Recording.PassedStringdbmsType = dbmsType;
            this.Recordings.LoginStringStringStringStringStringStringStringInt32Recording.PassedInt32dbmsLoginMode = dbmsLoginMode;
            if ((this.Recordings.LoginStringStringStringStringStringStringStringInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.LoginStringStringStringStringStringStringStringInt32Recording.ExceptionToThrow;
            }
        }
        
        public virtual void BeginUpdate(int recordHandle)
        {
            this.Recordings.BeginUpdateInt32Recording.Called = true;
            this.Recordings.BeginUpdateInt32Recording.PassedInt32recordHandle = recordHandle;
            if ((this.Recordings.BeginUpdateInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.BeginUpdateInt32Recording.ExceptionToThrow;
            }
        }
        
        public virtual void CancelTransaction(int recordHandle)
        {
            this.Recordings.CancelTransactionInt32Recording.Called = true;
            this.Recordings.CancelTransactionInt32Recording.PassedInt32recordHandle = recordHandle;
            if ((this.Recordings.CancelTransactionInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.CancelTransactionInt32Recording.ExceptionToThrow;
            }
        }
        
        public virtual void ReleaseNoteHandle(int noteHandle)
        {
            this.Recordings.ReleaseNoteHandleInt32Recording.Called = true;
            this.Recordings.ReleaseNoteHandleInt32Recording.PassedInt32noteHandle = noteHandle;
            if ((this.Recordings.ReleaseNoteHandleInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.ReleaseNoteHandleInt32Recording.ExceptionToThrow;
            }
        }
        
        public virtual void ReleaseRecordHandle(int recordHandle)
        {
            this.Recordings.ReleaseRecordHandleInt32Recording.Called = true;
            this.Recordings.ReleaseRecordHandleInt32Recording.PassedInt32recordHandle = recordHandle;
            if ((this.Recordings.ReleaseRecordHandleInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.ReleaseRecordHandleInt32Recording.ExceptionToThrow;
            }
        }
        
        public virtual void CommitRecord(int transactionID, int recordHandle)
        {
            this.Recordings.CommitRecordInt32Int32Recording.Called = true;
            this.Recordings.CommitRecordInt32Int32Recording.PassedInt32transactionID = transactionID;
            this.Recordings.CommitRecordInt32Int32Recording.PassedInt32recordHandle = recordHandle;
            if ((this.Recordings.CommitRecordInt32Int32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.CommitRecordInt32Int32Recording.ExceptionToThrow;
            }
        }
        
        public virtual int GetNoteHandle(int recordHandle)
        {
            this.Recordings.GetNoteHandleInt32Recording.Called = true;
            this.Recordings.GetNoteHandleInt32Recording.PassedInt32recordHandle = recordHandle;
            if ((this.Recordings.GetNoteHandleInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.GetNoteHandleInt32Recording.ExceptionToThrow;
            }
            return this.Recordings.GetNoteHandleInt32Recording.ReturnValue;
        }
        
        public virtual int GetNoteTransactionId(int noteHandle)
        {
            this.Recordings.GetNoteTransactionIdInt32Recording.Called = true;
            this.Recordings.GetNoteTransactionIdInt32Recording.PassedInt32noteHandle = noteHandle;
            if ((this.Recordings.GetNoteTransactionIdInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.GetNoteTransactionIdInt32Recording.ExceptionToThrow;
            }
            return this.Recordings.GetNoteTransactionIdInt32Recording.ReturnValue;
        }
        
        public virtual int GetSCRID(int recordHandle)
        {
            this.Recordings.GetSCRIDInt32Recording.Called = true;
            this.Recordings.GetSCRIDInt32Recording.PassedInt32recordHandle = recordHandle;
            if ((this.Recordings.GetSCRIDInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.GetSCRIDInt32Recording.ExceptionToThrow;
            }
            return this.Recordings.GetSCRIDInt32Recording.ReturnValue;
        }
        
        public virtual int GetSCRRecordHandle(int scrId, int recordType)
        {
            this.Recordings.GetSCRRecordHandleInt32Int32Recording.Called = true;
            this.Recordings.GetSCRRecordHandleInt32Int32Recording.PassedInt32scrId = scrId;
            this.Recordings.GetSCRRecordHandleInt32Int32Recording.PassedInt32recordType = recordType;
            if ((this.Recordings.GetSCRRecordHandleInt32Int32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.GetSCRRecordHandleInt32Int32Recording.ExceptionToThrow;
            }
            return this.Recordings.GetSCRRecordHandleInt32Int32Recording.ReturnValue;
        }
        
        public virtual void AddNote(string noteTitle, string noteText, int noteHandle)
        {
            this.Recordings.AddNoteStringStringInt32Recording.Called = true;
            this.Recordings.AddNoteStringStringInt32Recording.PassedStringnoteTitle = noteTitle;
            this.Recordings.AddNoteStringStringInt32Recording.PassedStringnoteText = noteText;
            this.Recordings.AddNoteStringStringInt32Recording.PassedInt32noteHandle = noteHandle;
            if ((this.Recordings.AddNoteStringStringInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.AddNoteStringStringInt32Recording.ExceptionToThrow;
            }
        }
        
        public virtual int GetDescriptionLength(int recordHandle)
        {
            this.Recordings.GetDescriptionLengthInt32Recording.Called = true;
            this.Recordings.GetDescriptionLengthInt32Recording.PassedInt32recordHandle = recordHandle;
            if ((this.Recordings.GetDescriptionLengthInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.GetDescriptionLengthInt32Recording.ExceptionToThrow;
            }
            return this.Recordings.GetDescriptionLengthInt32Recording.ReturnValue;
        }
        
        public virtual string GetDescriptionPart(ref int remainder, int recordHandle)
        {
            this.Recordings.GetDescriptionPartInt32Int32Recording.Called = true;
            this.Recordings.GetDescriptionPartInt32Int32Recording.PassedInt32remainder = remainder;
            this.Recordings.GetDescriptionPartInt32Int32Recording.PassedInt32recordHandle = recordHandle;
            if ((this.Recordings.GetDescriptionPartInt32Int32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.GetDescriptionPartInt32Int32Recording.ExceptionToThrow;
            }
            return this.Recordings.GetDescriptionPartInt32Int32Recording.ReturnValue;
        }
        
        public virtual object GetFieldValue(int scrId, string fieldName)
        {
            this.Recordings.GetFieldValueInt32StringRecording.Called = true;
            this.Recordings.GetFieldValueInt32StringRecording.PassedInt32scrId = scrId;
            this.Recordings.GetFieldValueInt32StringRecording.PassedStringfieldName = fieldName;
            if ((this.Recordings.GetFieldValueInt32StringRecording.ExceptionToThrow != null))
            {
                throw this.Recordings.GetFieldValueInt32StringRecording.ExceptionToThrow;
            }
            return this.Recordings.GetFieldValueInt32StringRecording.ReturnValue;
        }
        
        public virtual string GetNoteText(int noteHandle)
        {
            this.Recordings.GetNoteTextInt32Recording.Called = true;
            this.Recordings.GetNoteTextInt32Recording.PassedInt32noteHandle = noteHandle;
            if ((this.Recordings.GetNoteTextInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.GetNoteTextInt32Recording.ExceptionToThrow;
            }
            return this.Recordings.GetNoteTextInt32Recording.ReturnValue;
        }
        
        public virtual string GetNoteCreateTime(int noteHandle)
        {
            this.Recordings.GetNoteCreateTimeInt32Recording.Called = true;
            this.Recordings.GetNoteCreateTimeInt32Recording.PassedInt32noteHandle = noteHandle;
            if ((this.Recordings.GetNoteCreateTimeInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.GetNoteCreateTimeInt32Recording.ExceptionToThrow;
            }
            return this.Recordings.GetNoteCreateTimeInt32Recording.ReturnValue;
        }
        
        public virtual string GetNoteAuthor(int noteHandle)
        {
            this.Recordings.GetNoteAuthorInt32Recording.Called = true;
            this.Recordings.GetNoteAuthorInt32Recording.PassedInt32noteHandle = noteHandle;
            if ((this.Recordings.GetNoteAuthorInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.GetNoteAuthorInt32Recording.ExceptionToThrow;
            }
            return this.Recordings.GetNoteAuthorInt32Recording.ReturnValue;
        }
        
        public virtual string GetNoteTitle(int noteHandle)
        {
            this.Recordings.GetNoteTitleInt32Recording.Called = true;
            this.Recordings.GetNoteTitleInt32Recording.PassedInt32noteHandle = noteHandle;
            if ((this.Recordings.GetNoteTitleInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.GetNoteTitleInt32Recording.ExceptionToThrow;
            }
            return this.Recordings.GetNoteTitleInt32Recording.ReturnValue;
        }
        
        public virtual bool GetNextNote(int noteHandle)
        {
            this.Recordings.GetNextNoteInt32Recording.Called = true;
            this.Recordings.GetNextNoteInt32Recording.PassedInt32noteHandle = noteHandle;
            if ((this.Recordings.GetNextNoteInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.GetNextNoteInt32Recording.ExceptionToThrow;
            }
            return this.Recordings.GetNextNoteInt32Recording.ReturnValue;
        }
        
        public virtual void InitalizeNoteList(int noteHandle)
        {
            this.Recordings.InitalizeNoteListInt32Recording.Called = true;
            this.Recordings.InitalizeNoteListInt32Recording.PassedInt32noteHandle = noteHandle;
            if ((this.Recordings.InitalizeNoteListInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.InitalizeNoteListInt32Recording.ExceptionToThrow;
            }
        }
        
        public virtual int AllocateRecordHandle()
        {
            this.Recordings.AllocateRecordHandleRecording.Called = true;
            if ((this.Recordings.AllocateRecordHandleRecording.ExceptionToThrow != null))
            {
                throw this.Recordings.AllocateRecordHandleRecording.ExceptionToThrow;
            }
            return this.Recordings.AllocateRecordHandleRecording.ReturnValue;
        }
        
        public virtual void InitalizeRecordList(int recordHandle, string queryName)
        {
            this.Recordings.InitalizeRecordListInt32StringRecording.Called = true;
            this.Recordings.InitalizeRecordListInt32StringRecording.PassedInt32recordHandle = recordHandle;
            this.Recordings.InitalizeRecordListInt32StringRecording.PassedStringqueryName = queryName;
            if ((this.Recordings.InitalizeRecordListInt32StringRecording.ExceptionToThrow != null))
            {
                throw this.Recordings.InitalizeRecordListInt32StringRecording.ExceptionToThrow;
            }
        }
        
        public virtual bool GetNextScrId(int recordHandle)
        {
            this.Recordings.GetNextScrIdInt32Recording.Called = true;
            this.Recordings.GetNextScrIdInt32Recording.PassedInt32recordHandle = recordHandle;
            if ((this.Recordings.GetNextScrIdInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.GetNextScrIdInt32Recording.ExceptionToThrow;
            }
            return this.Recordings.GetNextScrIdInt32Recording.ReturnValue;
        }
        
        public virtual int GetFieldType(string fieldName)
        {
            this.Recordings.GetFieldTypeStringRecording.Called = true;
            this.Recordings.GetFieldTypeStringRecording.PassedStringfieldName = fieldName;
            if ((this.Recordings.GetFieldTypeStringRecording.ExceptionToThrow != null))
            {
                throw this.Recordings.GetFieldTypeStringRecording.ExceptionToThrow;
            }
            return this.Recordings.GetFieldTypeStringRecording.ReturnValue;
        }
        
        public virtual int GetFieldTransactionId(string fieldName, int recordHandle)
        {
            this.Recordings.GetFieldTransactionIdStringInt32Recording.Called = true;
            this.Recordings.GetFieldTransactionIdStringInt32Recording.PassedStringfieldName = fieldName;
            this.Recordings.GetFieldTransactionIdStringInt32Recording.PassedInt32recordHandle = recordHandle;
            if ((this.Recordings.GetFieldTransactionIdStringInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.GetFieldTransactionIdStringInt32Recording.ExceptionToThrow;
            }
            return this.Recordings.GetFieldTransactionIdStringInt32Recording.ReturnValue;
        }
        
        public virtual void SaveNumericFieldValue(string fieldName, int newValue, int recordHandle)
        {
            this.Recordings.SaveNumericFieldValueStringInt32Int32Recording.Called = true;
            this.Recordings.SaveNumericFieldValueStringInt32Int32Recording.PassedStringfieldName = fieldName;
            this.Recordings.SaveNumericFieldValueStringInt32Int32Recording.PassedInt32newValue = newValue;
            this.Recordings.SaveNumericFieldValueStringInt32Int32Recording.PassedInt32recordHandle = recordHandle;
            if ((this.Recordings.SaveNumericFieldValueStringInt32Int32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.SaveNumericFieldValueStringInt32Int32Recording.ExceptionToThrow;
            }
        }
        
        public virtual void SaveStringFieldValue(string fieldName, string newValue, int recordHandle)
        {
            this.Recordings.SaveStringFieldValueStringStringInt32Recording.Called = true;
            this.Recordings.SaveStringFieldValueStringStringInt32Recording.PassedStringfieldName = fieldName;
            this.Recordings.SaveStringFieldValueStringStringInt32Recording.PassedStringnewValue = newValue;
            this.Recordings.SaveStringFieldValueStringStringInt32Recording.PassedInt32recordHandle = recordHandle;
            if ((this.Recordings.SaveStringFieldValueStringStringInt32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.SaveStringFieldValueStringStringInt32Recording.ExceptionToThrow;
            }
        }
        
        public virtual int GetNumericFieldValue(int recordHandle, string fieldName)
        {
            this.Recordings.GetNumericFieldValueInt32StringRecording.Called = true;
            this.Recordings.GetNumericFieldValueInt32StringRecording.PassedInt32recordHandle = recordHandle;
            this.Recordings.GetNumericFieldValueInt32StringRecording.PassedStringfieldName = fieldName;
            if ((this.Recordings.GetNumericFieldValueInt32StringRecording.ExceptionToThrow != null))
            {
                throw this.Recordings.GetNumericFieldValueInt32StringRecording.ExceptionToThrow;
            }
            return this.Recordings.GetNumericFieldValueInt32StringRecording.ReturnValue;
        }
        
        public virtual void NewRecordBegin(int recordHandle, int recordType)
        {
            this.Recordings.NewRecordBeginInt32Int32Recording.Called = true;
            this.Recordings.NewRecordBeginInt32Int32Recording.PassedInt32recordHandle = recordHandle;
            this.Recordings.NewRecordBeginInt32Int32Recording.PassedInt32recordType = recordType;
            if ((this.Recordings.NewRecordBeginInt32Int32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.NewRecordBeginInt32Int32Recording.ExceptionToThrow;
            }
        }
        
        public virtual void NewRecordCommit(int recordHandle, ref int transactionID)
        {
            this.Recordings.NewRecordCommitInt32Int32Recording.Called = true;
            this.Recordings.NewRecordCommitInt32Int32Recording.PassedInt32recordHandle = recordHandle;
            this.Recordings.NewRecordCommitInt32Int32Recording.PassedInt32transactionID = transactionID;
            if ((this.Recordings.NewRecordCommitInt32Int32Recording.ExceptionToThrow != null))
            {
                throw this.Recordings.NewRecordCommitInt32Int32Recording.ExceptionToThrow;
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class GetNumericFieldValueInt32StringRecordingRecordings
        {
            
            private bool _called;
            
            private string _passedStringfieldName;
            
            private int _returnValue;
            
            private int _passedInt32recordHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32recordHandle
            {
                get
                {
                    return this._passedInt32recordHandle;
                }
                set
                {
                    this._passedInt32recordHandle = value;
                }
            }
            
            public virtual string PassedStringfieldName
            {
                get
                {
                    return this._passedStringfieldName;
                }
                set
                {
                    this._passedStringfieldName = value;
                }
            }
            
            public virtual int ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class GetNoteTitleInt32RecordingRecordings
        {
            
            private bool _called;
            
            private int _passedInt32noteHandle;
            
            private string _returnValue;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32noteHandle
            {
                get
                {
                    return this._passedInt32noteHandle;
                }
                set
                {
                    this._passedInt32noteHandle = value;
                }
            }
            
            public virtual string ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
        
        public class IPVCSToolKitRecordings
        {
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetFieldTypeStringRecordingRecordings _getFieldTypeStringRecording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetDescriptionLengthInt32RecordingRecordings _getDescriptionLengthInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.SaveNumericFieldValueStringInt32Int32RecordingRecordings _saveNumericFieldValueStringInt32Int32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNoteCreateTimeInt32RecordingRecordings _getNoteCreateTimeInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.LogoutRecordingRecordings _logoutRecording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.AllocateRecordHandleRecordingRecordings _allocateRecordHandleRecording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.NewRecordCommitInt32Int32RecordingRecordings _newRecordCommitInt32Int32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.CommitRecordInt32Int32RecordingRecordings _commitRecordInt32Int32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetFieldValueInt32StringRecordingRecordings _getFieldValueInt32StringRecording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetFieldTransactionIdStringInt32RecordingRecordings _getFieldTransactionIdStringInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetSCRRecordHandleInt32Int32RecordingRecordings _getSCRRecordHandleInt32Int32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNoteTransactionIdInt32RecordingRecordings _getNoteTransactionIdInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNumericFieldValueInt32StringRecordingRecordings _getNumericFieldValueInt32StringRecording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.NewRecordingRecordings _newRecording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.ReleaseRecordHandleInt32RecordingRecordings _releaseRecordHandleInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.AddNoteStringStringInt32RecordingRecordings _addNoteStringStringInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.ReleaseNoteHandleInt32RecordingRecordings _releaseNoteHandleInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.LoginStringStringStringStringStringStringStringInt32RecordingRecordings _loginStringStringStringStringStringStringStringInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNoteAuthorInt32RecordingRecordings _getNoteAuthorInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.NewRecordBeginInt32Int32RecordingRecordings _newRecordBeginInt32Int32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNoteHandleInt32RecordingRecordings _getNoteHandleInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.BeginUpdateInt32RecordingRecordings _beginUpdateInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.InitalizeRecordListInt32StringRecordingRecordings _initalizeRecordListInt32StringRecording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNextNoteInt32RecordingRecordings _getNextNoteInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.CancelTransactionInt32RecordingRecordings _cancelTransactionInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetDescriptionPartInt32Int32RecordingRecordings _getDescriptionPartInt32Int32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetSCRIDInt32RecordingRecordings _getSCRIDInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.InitalizeNoteListInt32RecordingRecordings _initalizeNoteListInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.SaveStringFieldValueStringStringInt32RecordingRecordings _saveStringFieldValueStringStringInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNextScrIdInt32RecordingRecordings _getNextScrIdInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNoteTitleInt32RecordingRecordings _getNoteTitleInt32Recording;
            
            private Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNoteTextInt32RecordingRecordings _getNoteTextInt32Recording;
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNoteHandleInt32RecordingRecordings GetNoteHandleInt32Recording
            {
                get
                {
                    if ((this._getNoteHandleInt32Recording == null))
                    {
                        this._getNoteHandleInt32Recording = new GetNoteHandleInt32RecordingRecordings();
                    }
                    return this._getNoteHandleInt32Recording;
                }
                set
                {
                    this._getNoteHandleInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.NewRecordingRecordings NewRecording
            {
                get
                {
                    if ((this._newRecording == null))
                    {
                        this._newRecording = new NewRecordingRecordings();
                    }
                    return this._newRecording;
                }
                set
                {
                    this._newRecording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.SaveStringFieldValueStringStringInt32RecordingRecordings SaveStringFieldValueStringStringInt32Recording
            {
                get
                {
                    if ((this._saveStringFieldValueStringStringInt32Recording == null))
                    {
                        this._saveStringFieldValueStringStringInt32Recording = new SaveStringFieldValueStringStringInt32RecordingRecordings();
                    }
                    return this._saveStringFieldValueStringStringInt32Recording;
                }
                set
                {
                    this._saveStringFieldValueStringStringInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.BeginUpdateInt32RecordingRecordings BeginUpdateInt32Recording
            {
                get
                {
                    if ((this._beginUpdateInt32Recording == null))
                    {
                        this._beginUpdateInt32Recording = new BeginUpdateInt32RecordingRecordings();
                    }
                    return this._beginUpdateInt32Recording;
                }
                set
                {
                    this._beginUpdateInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.LoginStringStringStringStringStringStringStringInt32RecordingRecordings LoginStringStringStringStringStringStringStringInt32Recording
            {
                get
                {
                    if ((this._loginStringStringStringStringStringStringStringInt32Recording == null))
                    {
                        this._loginStringStringStringStringStringStringStringInt32Recording = new LoginStringStringStringStringStringStringStringInt32RecordingRecordings();
                    }
                    return this._loginStringStringStringStringStringStringStringInt32Recording;
                }
                set
                {
                    this._loginStringStringStringStringStringStringStringInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.AddNoteStringStringInt32RecordingRecordings AddNoteStringStringInt32Recording
            {
                get
                {
                    if ((this._addNoteStringStringInt32Recording == null))
                    {
                        this._addNoteStringStringInt32Recording = new AddNoteStringStringInt32RecordingRecordings();
                    }
                    return this._addNoteStringStringInt32Recording;
                }
                set
                {
                    this._addNoteStringStringInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNoteAuthorInt32RecordingRecordings GetNoteAuthorInt32Recording
            {
                get
                {
                    if ((this._getNoteAuthorInt32Recording == null))
                    {
                        this._getNoteAuthorInt32Recording = new GetNoteAuthorInt32RecordingRecordings();
                    }
                    return this._getNoteAuthorInt32Recording;
                }
                set
                {
                    this._getNoteAuthorInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.InitalizeNoteListInt32RecordingRecordings InitalizeNoteListInt32Recording
            {
                get
                {
                    if ((this._initalizeNoteListInt32Recording == null))
                    {
                        this._initalizeNoteListInt32Recording = new InitalizeNoteListInt32RecordingRecordings();
                    }
                    return this._initalizeNoteListInt32Recording;
                }
                set
                {
                    this._initalizeNoteListInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.CancelTransactionInt32RecordingRecordings CancelTransactionInt32Recording
            {
                get
                {
                    if ((this._cancelTransactionInt32Recording == null))
                    {
                        this._cancelTransactionInt32Recording = new CancelTransactionInt32RecordingRecordings();
                    }
                    return this._cancelTransactionInt32Recording;
                }
                set
                {
                    this._cancelTransactionInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.LogoutRecordingRecordings LogoutRecording
            {
                get
                {
                    if ((this._logoutRecording == null))
                    {
                        this._logoutRecording = new LogoutRecordingRecordings();
                    }
                    return this._logoutRecording;
                }
                set
                {
                    this._logoutRecording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetSCRRecordHandleInt32Int32RecordingRecordings GetSCRRecordHandleInt32Int32Recording
            {
                get
                {
                    if ((this._getSCRRecordHandleInt32Int32Recording == null))
                    {
                        this._getSCRRecordHandleInt32Int32Recording = new GetSCRRecordHandleInt32Int32RecordingRecordings();
                    }
                    return this._getSCRRecordHandleInt32Int32Recording;
                }
                set
                {
                    this._getSCRRecordHandleInt32Int32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetSCRIDInt32RecordingRecordings GetSCRIDInt32Recording
            {
                get
                {
                    if ((this._getSCRIDInt32Recording == null))
                    {
                        this._getSCRIDInt32Recording = new GetSCRIDInt32RecordingRecordings();
                    }
                    return this._getSCRIDInt32Recording;
                }
                set
                {
                    this._getSCRIDInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetFieldValueInt32StringRecordingRecordings GetFieldValueInt32StringRecording
            {
                get
                {
                    if ((this._getFieldValueInt32StringRecording == null))
                    {
                        this._getFieldValueInt32StringRecording = new GetFieldValueInt32StringRecordingRecordings();
                    }
                    return this._getFieldValueInt32StringRecording;
                }
                set
                {
                    this._getFieldValueInt32StringRecording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetFieldTransactionIdStringInt32RecordingRecordings GetFieldTransactionIdStringInt32Recording
            {
                get
                {
                    if ((this._getFieldTransactionIdStringInt32Recording == null))
                    {
                        this._getFieldTransactionIdStringInt32Recording = new GetFieldTransactionIdStringInt32RecordingRecordings();
                    }
                    return this._getFieldTransactionIdStringInt32Recording;
                }
                set
                {
                    this._getFieldTransactionIdStringInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNoteTitleInt32RecordingRecordings GetNoteTitleInt32Recording
            {
                get
                {
                    if ((this._getNoteTitleInt32Recording == null))
                    {
                        this._getNoteTitleInt32Recording = new GetNoteTitleInt32RecordingRecordings();
                    }
                    return this._getNoteTitleInt32Recording;
                }
                set
                {
                    this._getNoteTitleInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNoteTextInt32RecordingRecordings GetNoteTextInt32Recording
            {
                get
                {
                    if ((this._getNoteTextInt32Recording == null))
                    {
                        this._getNoteTextInt32Recording = new GetNoteTextInt32RecordingRecordings();
                    }
                    return this._getNoteTextInt32Recording;
                }
                set
                {
                    this._getNoteTextInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.NewRecordCommitInt32Int32RecordingRecordings NewRecordCommitInt32Int32Recording
            {
                get
                {
                    if ((this._newRecordCommitInt32Int32Recording == null))
                    {
                        this._newRecordCommitInt32Int32Recording = new NewRecordCommitInt32Int32RecordingRecordings();
                    }
                    return this._newRecordCommitInt32Int32Recording;
                }
                set
                {
                    this._newRecordCommitInt32Int32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetDescriptionLengthInt32RecordingRecordings GetDescriptionLengthInt32Recording
            {
                get
                {
                    if ((this._getDescriptionLengthInt32Recording == null))
                    {
                        this._getDescriptionLengthInt32Recording = new GetDescriptionLengthInt32RecordingRecordings();
                    }
                    return this._getDescriptionLengthInt32Recording;
                }
                set
                {
                    this._getDescriptionLengthInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNumericFieldValueInt32StringRecordingRecordings GetNumericFieldValueInt32StringRecording
            {
                get
                {
                    if ((this._getNumericFieldValueInt32StringRecording == null))
                    {
                        this._getNumericFieldValueInt32StringRecording = new GetNumericFieldValueInt32StringRecordingRecordings();
                    }
                    return this._getNumericFieldValueInt32StringRecording;
                }
                set
                {
                    this._getNumericFieldValueInt32StringRecording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.InitalizeRecordListInt32StringRecordingRecordings InitalizeRecordListInt32StringRecording
            {
                get
                {
                    if ((this._initalizeRecordListInt32StringRecording == null))
                    {
                        this._initalizeRecordListInt32StringRecording = new InitalizeRecordListInt32StringRecordingRecordings();
                    }
                    return this._initalizeRecordListInt32StringRecording;
                }
                set
                {
                    this._initalizeRecordListInt32StringRecording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.CommitRecordInt32Int32RecordingRecordings CommitRecordInt32Int32Recording
            {
                get
                {
                    if ((this._commitRecordInt32Int32Recording == null))
                    {
                        this._commitRecordInt32Int32Recording = new CommitRecordInt32Int32RecordingRecordings();
                    }
                    return this._commitRecordInt32Int32Recording;
                }
                set
                {
                    this._commitRecordInt32Int32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNoteTransactionIdInt32RecordingRecordings GetNoteTransactionIdInt32Recording
            {
                get
                {
                    if ((this._getNoteTransactionIdInt32Recording == null))
                    {
                        this._getNoteTransactionIdInt32Recording = new GetNoteTransactionIdInt32RecordingRecordings();
                    }
                    return this._getNoteTransactionIdInt32Recording;
                }
                set
                {
                    this._getNoteTransactionIdInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.SaveNumericFieldValueStringInt32Int32RecordingRecordings SaveNumericFieldValueStringInt32Int32Recording
            {
                get
                {
                    if ((this._saveNumericFieldValueStringInt32Int32Recording == null))
                    {
                        this._saveNumericFieldValueStringInt32Int32Recording = new SaveNumericFieldValueStringInt32Int32RecordingRecordings();
                    }
                    return this._saveNumericFieldValueStringInt32Int32Recording;
                }
                set
                {
                    this._saveNumericFieldValueStringInt32Int32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetFieldTypeStringRecordingRecordings GetFieldTypeStringRecording
            {
                get
                {
                    if ((this._getFieldTypeStringRecording == null))
                    {
                        this._getFieldTypeStringRecording = new GetFieldTypeStringRecordingRecordings();
                    }
                    return this._getFieldTypeStringRecording;
                }
                set
                {
                    this._getFieldTypeStringRecording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNextScrIdInt32RecordingRecordings GetNextScrIdInt32Recording
            {
                get
                {
                    if ((this._getNextScrIdInt32Recording == null))
                    {
                        this._getNextScrIdInt32Recording = new GetNextScrIdInt32RecordingRecordings();
                    }
                    return this._getNextScrIdInt32Recording;
                }
                set
                {
                    this._getNextScrIdInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.AllocateRecordHandleRecordingRecordings AllocateRecordHandleRecording
            {
                get
                {
                    if ((this._allocateRecordHandleRecording == null))
                    {
                        this._allocateRecordHandleRecording = new AllocateRecordHandleRecordingRecordings();
                    }
                    return this._allocateRecordHandleRecording;
                }
                set
                {
                    this._allocateRecordHandleRecording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.ReleaseRecordHandleInt32RecordingRecordings ReleaseRecordHandleInt32Recording
            {
                get
                {
                    if ((this._releaseRecordHandleInt32Recording == null))
                    {
                        this._releaseRecordHandleInt32Recording = new ReleaseRecordHandleInt32RecordingRecordings();
                    }
                    return this._releaseRecordHandleInt32Recording;
                }
                set
                {
                    this._releaseRecordHandleInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.ReleaseNoteHandleInt32RecordingRecordings ReleaseNoteHandleInt32Recording
            {
                get
                {
                    if ((this._releaseNoteHandleInt32Recording == null))
                    {
                        this._releaseNoteHandleInt32Recording = new ReleaseNoteHandleInt32RecordingRecordings();
                    }
                    return this._releaseNoteHandleInt32Recording;
                }
                set
                {
                    this._releaseNoteHandleInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNextNoteInt32RecordingRecordings GetNextNoteInt32Recording
            {
                get
                {
                    if ((this._getNextNoteInt32Recording == null))
                    {
                        this._getNextNoteInt32Recording = new GetNextNoteInt32RecordingRecordings();
                    }
                    return this._getNextNoteInt32Recording;
                }
                set
                {
                    this._getNextNoteInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetNoteCreateTimeInt32RecordingRecordings GetNoteCreateTimeInt32Recording
            {
                get
                {
                    if ((this._getNoteCreateTimeInt32Recording == null))
                    {
                        this._getNoteCreateTimeInt32Recording = new GetNoteCreateTimeInt32RecordingRecordings();
                    }
                    return this._getNoteCreateTimeInt32Recording;
                }
                set
                {
                    this._getNoteCreateTimeInt32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.GetDescriptionPartInt32Int32RecordingRecordings GetDescriptionPartInt32Int32Recording
            {
                get
                {
                    if ((this._getDescriptionPartInt32Int32Recording == null))
                    {
                        this._getDescriptionPartInt32Int32Recording = new GetDescriptionPartInt32Int32RecordingRecordings();
                    }
                    return this._getDescriptionPartInt32Int32Recording;
                }
                set
                {
                    this._getDescriptionPartInt32Int32Recording = value;
                }
            }
            
            public virtual Tracker.Common.TestDoubles.RecorderIPVCSToolKit.NewRecordBeginInt32Int32RecordingRecordings NewRecordBeginInt32Int32Recording
            {
                get
                {
                    if ((this._newRecordBeginInt32Int32Recording == null))
                    {
                        this._newRecordBeginInt32Int32Recording = new NewRecordBeginInt32Int32RecordingRecordings();
                    }
                    return this._newRecordBeginInt32Int32Recording;
                }
                set
                {
                    this._newRecordBeginInt32Int32Recording = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class CommitRecordInt32Int32RecordingRecordings
        {
            
            private bool _called;
            
            private int _passedInt32transactionID;
            
            private int _passedInt32recordHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32transactionID
            {
                get
                {
                    return this._passedInt32transactionID;
                }
                set
                {
                    this._passedInt32transactionID = value;
                }
            }
            
            public virtual int PassedInt32recordHandle
            {
                get
                {
                    return this._passedInt32recordHandle;
                }
                set
                {
                    this._passedInt32recordHandle = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class InitalizeRecordListInt32StringRecordingRecordings
        {
            
            private string _passedStringqueryName;
            
            private bool _called;
            
            private int _passedInt32recordHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32recordHandle
            {
                get
                {
                    return this._passedInt32recordHandle;
                }
                set
                {
                    this._passedInt32recordHandle = value;
                }
            }
            
            public virtual string PassedStringqueryName
            {
                get
                {
                    return this._passedStringqueryName;
                }
                set
                {
                    this._passedStringqueryName = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class LogoutRecordingRecordings
        {
            
            private bool _called;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class GetNextScrIdInt32RecordingRecordings
        {
            
            private bool _called;
            
            private bool _returnValue;
            
            private int _passedInt32recordHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32recordHandle
            {
                get
                {
                    return this._passedInt32recordHandle;
                }
                set
                {
                    this._passedInt32recordHandle = value;
                }
            }
            
            public virtual bool ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class GetSCRRecordHandleInt32Int32RecordingRecordings
        {
            
            private int _passedInt32recordType;
            
            private bool _called;
            
            private int _returnValue;
            
            private int _passedInt32scrId;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32scrId
            {
                get
                {
                    return this._passedInt32scrId;
                }
                set
                {
                    this._passedInt32scrId = value;
                }
            }
            
            public virtual int PassedInt32recordType
            {
                get
                {
                    return this._passedInt32recordType;
                }
                set
                {
                    this._passedInt32recordType = value;
                }
            }
            
            public virtual int ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class GetFieldValueInt32StringRecordingRecordings
        {
            
            private object _returnValue;
            
            private bool _called;
            
            private string _passedStringfieldName;
            
            private int _passedInt32scrId;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32scrId
            {
                get
                {
                    return this._passedInt32scrId;
                }
                set
                {
                    this._passedInt32scrId = value;
                }
            }
            
            public virtual string PassedStringfieldName
            {
                get
                {
                    return this._passedStringfieldName;
                }
                set
                {
                    this._passedStringfieldName = value;
                }
            }
            
            public virtual object ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class GetNoteCreateTimeInt32RecordingRecordings
        {
            
            private bool _called;
            
            private int _passedInt32noteHandle;
            
            private string _returnValue;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32noteHandle
            {
                get
                {
                    return this._passedInt32noteHandle;
                }
                set
                {
                    this._passedInt32noteHandle = value;
                }
            }
            
            public virtual string ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class AllocateRecordHandleRecordingRecordings
        {
            
            private bool _called;
            
            private int _returnValue;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class GetNoteTransactionIdInt32RecordingRecordings
        {
            
            private bool _called;
            
            private int _passedInt32noteHandle;
            
            private int _returnValue;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32noteHandle
            {
                get
                {
                    return this._passedInt32noteHandle;
                }
                set
                {
                    this._passedInt32noteHandle = value;
                }
            }
            
            public virtual int ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class LoginStringStringStringStringStringStringStringInt32RecordingRecordings
        {
            
            private string _passedStringdbmsServer;
            
            private string _passedStringprojectName;
            
            private int _passedInt32dbmsLoginMode;
            
            private bool _called;
            
            private string _passedStringdbmsType;
            
            private string _passedStringpassword;
            
            private string _passedStringuserName;
            
            private string _passedStringdbmsUserName;
            
            private System.Exception _exceptionToThrow;
            
            private string _passedStringdbmsPassword;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual string PassedStringuserName
            {
                get
                {
                    return this._passedStringuserName;
                }
                set
                {
                    this._passedStringuserName = value;
                }
            }
            
            public virtual string PassedStringpassword
            {
                get
                {
                    return this._passedStringpassword;
                }
                set
                {
                    this._passedStringpassword = value;
                }
            }
            
            public virtual string PassedStringprojectName
            {
                get
                {
                    return this._passedStringprojectName;
                }
                set
                {
                    this._passedStringprojectName = value;
                }
            }
            
            public virtual string PassedStringdbmsUserName
            {
                get
                {
                    return this._passedStringdbmsUserName;
                }
                set
                {
                    this._passedStringdbmsUserName = value;
                }
            }
            
            public virtual string PassedStringdbmsPassword
            {
                get
                {
                    return this._passedStringdbmsPassword;
                }
                set
                {
                    this._passedStringdbmsPassword = value;
                }
            }
            
            public virtual string PassedStringdbmsServer
            {
                get
                {
                    return this._passedStringdbmsServer;
                }
                set
                {
                    this._passedStringdbmsServer = value;
                }
            }
            
            public virtual string PassedStringdbmsType
            {
                get
                {
                    return this._passedStringdbmsType;
                }
                set
                {
                    this._passedStringdbmsType = value;
                }
            }
            
            public virtual int PassedInt32dbmsLoginMode
            {
                get
                {
                    return this._passedInt32dbmsLoginMode;
                }
                set
                {
                    this._passedInt32dbmsLoginMode = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class GetFieldTypeStringRecordingRecordings
        {
            
            private bool _called;
            
            private string _passedStringfieldName;
            
            private int _returnValue;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual string PassedStringfieldName
            {
                get
                {
                    return this._passedStringfieldName;
                }
                set
                {
                    this._passedStringfieldName = value;
                }
            }
            
            public virtual int ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class GetFieldTransactionIdStringInt32RecordingRecordings
        {
            
            private bool _called;
            
            private string _passedStringfieldName;
            
            private int _returnValue;
            
            private int _passedInt32recordHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual string PassedStringfieldName
            {
                get
                {
                    return this._passedStringfieldName;
                }
                set
                {
                    this._passedStringfieldName = value;
                }
            }
            
            public virtual int PassedInt32recordHandle
            {
                get
                {
                    return this._passedInt32recordHandle;
                }
                set
                {
                    this._passedInt32recordHandle = value;
                }
            }
            
            public virtual int ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class SaveStringFieldValueStringStringInt32RecordingRecordings
        {
            
            private string _passedStringnewValue;
            
            private bool _called;
            
            private string _passedStringfieldName;
            
            private int _passedInt32recordHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual string PassedStringfieldName
            {
                get
                {
                    return this._passedStringfieldName;
                }
                set
                {
                    this._passedStringfieldName = value;
                }
            }
            
            public virtual string PassedStringnewValue
            {
                get
                {
                    return this._passedStringnewValue;
                }
                set
                {
                    this._passedStringnewValue = value;
                }
            }
            
            public virtual int PassedInt32recordHandle
            {
                get
                {
                    return this._passedInt32recordHandle;
                }
                set
                {
                    this._passedInt32recordHandle = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class GetNoteTextInt32RecordingRecordings
        {
            
            private bool _called;
            
            private int _passedInt32noteHandle;
            
            private string _returnValue;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32noteHandle
            {
                get
                {
                    return this._passedInt32noteHandle;
                }
                set
                {
                    this._passedInt32noteHandle = value;
                }
            }
            
            public virtual string ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class InitalizeNoteListInt32RecordingRecordings
        {
            
            private bool _called;
            
            private int _passedInt32noteHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32noteHandle
            {
                get
                {
                    return this._passedInt32noteHandle;
                }
                set
                {
                    this._passedInt32noteHandle = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class ReleaseNoteHandleInt32RecordingRecordings
        {
            
            private bool _called;
            
            private int _passedInt32noteHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32noteHandle
            {
                get
                {
                    return this._passedInt32noteHandle;
                }
                set
                {
                    this._passedInt32noteHandle = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class NewRecordCommitInt32Int32RecordingRecordings
        {
            
            private bool _called;
            
            private int _passedInt32transactionID;
            
            private int _passedInt32recordHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32recordHandle
            {
                get
                {
                    return this._passedInt32recordHandle;
                }
                set
                {
                    this._passedInt32recordHandle = value;
                }
            }
            
            public virtual int PassedInt32transactionID
            {
                get
                {
                    return this._passedInt32transactionID;
                }
                set
                {
                    this._passedInt32transactionID = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class NewRecordingRecordings
        {
            
            private bool _called;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class AddNoteStringStringInt32RecordingRecordings
        {
            
            private bool _called;
            
            private string _passedStringnoteText;
            
            private int _passedInt32noteHandle;
            
            private string _passedStringnoteTitle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual string PassedStringnoteTitle
            {
                get
                {
                    return this._passedStringnoteTitle;
                }
                set
                {
                    this._passedStringnoteTitle = value;
                }
            }
            
            public virtual string PassedStringnoteText
            {
                get
                {
                    return this._passedStringnoteText;
                }
                set
                {
                    this._passedStringnoteText = value;
                }
            }
            
            public virtual int PassedInt32noteHandle
            {
                get
                {
                    return this._passedInt32noteHandle;
                }
                set
                {
                    this._passedInt32noteHandle = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class CancelTransactionInt32RecordingRecordings
        {
            
            private bool _called;
            
            private int _passedInt32recordHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32recordHandle
            {
                get
                {
                    return this._passedInt32recordHandle;
                }
                set
                {
                    this._passedInt32recordHandle = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class GetSCRIDInt32RecordingRecordings
        {
            
            private bool _called;
            
            private int _returnValue;
            
            private int _passedInt32recordHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32recordHandle
            {
                get
                {
                    return this._passedInt32recordHandle;
                }
                set
                {
                    this._passedInt32recordHandle = value;
                }
            }
            
            public virtual int ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class NewRecordBeginInt32Int32RecordingRecordings
        {
            
            private int _passedInt32recordType;
            
            private bool _called;
            
            private int _passedInt32recordHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32recordHandle
            {
                get
                {
                    return this._passedInt32recordHandle;
                }
                set
                {
                    this._passedInt32recordHandle = value;
                }
            }
            
            public virtual int PassedInt32recordType
            {
                get
                {
                    return this._passedInt32recordType;
                }
                set
                {
                    this._passedInt32recordType = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class GetNoteHandleInt32RecordingRecordings
        {
            
            private bool _called;
            
            private int _returnValue;
            
            private int _passedInt32recordHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32recordHandle
            {
                get
                {
                    return this._passedInt32recordHandle;
                }
                set
                {
                    this._passedInt32recordHandle = value;
                }
            }
            
            public virtual int ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class BeginUpdateInt32RecordingRecordings
        {
            
            private bool _called;
            
            private int _passedInt32recordHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32recordHandle
            {
                get
                {
                    return this._passedInt32recordHandle;
                }
                set
                {
                    this._passedInt32recordHandle = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class GetNoteAuthorInt32RecordingRecordings
        {
            
            private bool _called;
            
            private int _passedInt32noteHandle;
            
            private string _returnValue;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32noteHandle
            {
                get
                {
                    return this._passedInt32noteHandle;
                }
                set
                {
                    this._passedInt32noteHandle = value;
                }
            }
            
            public virtual string ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class GetDescriptionLengthInt32RecordingRecordings
        {
            
            private bool _called;
            
            private int _returnValue;
            
            private int _passedInt32recordHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32recordHandle
            {
                get
                {
                    return this._passedInt32recordHandle;
                }
                set
                {
                    this._passedInt32recordHandle = value;
                }
            }
            
            public virtual int ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class ReleaseRecordHandleInt32RecordingRecordings
        {
            
            private bool _called;
            
            private int _passedInt32recordHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32recordHandle
            {
                get
                {
                    return this._passedInt32recordHandle;
                }
                set
                {
                    this._passedInt32recordHandle = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class SaveNumericFieldValueStringInt32Int32RecordingRecordings
        {
            
            private bool _called;
            
            private int _passedInt32newValue;
            
            private string _passedStringfieldName;
            
            private int _passedInt32recordHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual string PassedStringfieldName
            {
                get
                {
                    return this._passedStringfieldName;
                }
                set
                {
                    this._passedStringfieldName = value;
                }
            }
            
            public virtual int PassedInt32newValue
            {
                get
                {
                    return this._passedInt32newValue;
                }
                set
                {
                    this._passedInt32newValue = value;
                }
            }
            
            public virtual int PassedInt32recordHandle
            {
                get
                {
                    return this._passedInt32recordHandle;
                }
                set
                {
                    this._passedInt32recordHandle = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class GetNextNoteInt32RecordingRecordings
        {
            
            private bool _called;
            
            private int _passedInt32noteHandle;
            
            private bool _returnValue;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32noteHandle
            {
                get
                {
                    return this._passedInt32noteHandle;
                }
                set
                {
                    this._passedInt32noteHandle = value;
                }
            }
            
            public virtual bool ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        public class GetDescriptionPartInt32Int32RecordingRecordings
        {
            
            private bool _called;
            
            private int _passedInt32remainder;
            
            private string _returnValue;
            
            private int _passedInt32recordHandle;
            
            private System.Exception _exceptionToThrow;
            
            public virtual bool Called
            {
                get
                {
                    return this._called;
                }
                set
                {
                    this._called = value;
                }
            }
            
            public virtual System.Exception ExceptionToThrow
            {
                get
                {
                    return this._exceptionToThrow;
                }
                set
                {
                    this._exceptionToThrow = value;
                }
            }
            
            public virtual int PassedInt32remainder
            {
                get
                {
                    return this._passedInt32remainder;
                }
                set
                {
                    this._passedInt32remainder = value;
                }
            }
            
            public virtual int PassedInt32recordHandle
            {
                get
                {
                    return this._passedInt32recordHandle;
                }
                set
                {
                    this._passedInt32recordHandle = value;
                }
            }
            
            public virtual string ReturnValue
            {
                get
                {
                    return this._returnValue;
                }
                set
                {
                    this._returnValue = value;
                }
            }
        }
    }
}
